<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>leetcode中国版目录</title>
      <link href="/2099/02/19/leetcode%E4%B8%AD%E5%9B%BD%E7%89%88%E7%9B%AE%E5%BD%95/"/>
      <url>/2099/02/19/leetcode%E4%B8%AD%E5%9B%BD%E7%89%88%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><table><thead><tr><th>序号.题目</th><th>题目.解法</th></tr></thead><tbody><tr><td><a href="https://leetcode-cn.com/problems/two-sum/" target="_blank" rel="noopener">1. 两数之和</a></td><td><a href="https://ferrerobomb.github.io/2022/01/20/leetcode-1.两数之和/">leetcode-1.两数之和</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/add-two-numbers/" target="_blank" rel="noopener">2. 两数相加</a></td><td><a href="https://ferrerobomb.github.io/2022/01/25/leetcode-2.两数相加/">leetcode-2.两数相加</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/" target="_blank" rel="noopener">3. 无重复字符的最长子串</a></td><td><a href="https://ferrerobomb.github.io/2022/01/28/leetcode-3.无重复字符的最长子串/">leetcode-3.无重复字符的最长子串</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/zigzag-conversion/" target="_blank" rel="noopener">6. Z 字形变换</a></td><td><a href="https://ferrerobomb.github.io/2022/01/26/leetcode-6.Z字形变换/">leetcode-6.Z字形变换</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/palindrome-number/" target="_blank" rel="noopener">9. 回文数</a></td><td><a href="https://ferrerobomb.github.io/2022/02/04/leetcode-9.回文数/">leetcode-9.回文数</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/valid-parentheses/" target="_blank" rel="noopener">20. 有效的括号</a></td><td><a href="https://ferrerobomb.github.io/2022/01/26/leetcode-20-有效的括号/">leetcode-20.有效的括号</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/generate-parentheses/" target="_blank" rel="noopener">22. 括号生成</a></td><td><a href="https://ferrerobomb.github.io/2022/01/22/leetcode-22.括号生成/">leetcode-22.括号生成</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array/" target="_blank" rel="noopener">33. 搜索旋转排序数组</a></td><td><a href="https://ferrerobomb.github.io/2022/01/14/leetcode-33.搜索旋转排序数组/">leetcode-33.搜索旋转排序数组</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/maximum-subarray/" target="_blank" rel="noopener">53. 最大子数组和</a></td><td><a href="https://ferrerobomb.github.io/2022/01/29/leetcode-53.最大子数组和/">leetcode-53. 最大子数组和</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/spiral-matrix/" target="_blank" rel="noopener">54. 螺旋矩阵</a></td><td><a href="https://ferrerobomb.github.io/2022/01/26/leetcode-54-螺旋矩阵/">leetcode-54.螺旋矩阵</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/unique-paths/" target="_blank" rel="noopener">62. 不同路径</a></td><td><a href="https://ferrerobomb.github.io/2022/01/21/leetcode-62.不同路径/">leetcode-62.不同路径</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/climbing-stairs/" target="_blank" rel="noopener">70. 爬楼梯</a></td><td><a href="https://ferrerobomb.github.io/2022/01/24/leetcode-70.爬楼梯/">leetcode-70.爬楼梯</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/sort-colors/" target="_blank" rel="noopener">75. 颜色分类</a></td><td><a href="https://ferrerobomb.github.io/2022/01/30/leetcode-75.颜色分类/">leetcode-75.颜色分类</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/subsets/" target="_blank" rel="noopener">78. 子集</a></td><td></td></tr><tr><td><a href="https://leetcode-cn.com/problems/word-search/" target="_blank" rel="noopener">79. 单词搜索</a></td><td><a href="https://ferrerobomb.github.io/2022/01/23/leetcode-79.单词搜索/">leetcode-79.单词搜索</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/merge-sorted-array/" target="_blank" rel="noopener">88. 合并两个有序数组</a></td><td><a href="https://ferrerobomb.github.io/2022/02/01/leetcode-88.合并两个有序数组/">leetcode-88.合并两个有序数组</a></td></tr><tr><td>94</td><td><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal" target="_blank" rel="noopener">二叉树的中序遍历</a> <a href="https://ferrerobomb.github.io/2020/02/26/leetcode-94-144-145-二叉树的遍历/">解法地址</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/pascals-triangle/" target="_blank" rel="noopener">118. 杨辉三角</a></td><td><a href="https://ferrerobomb.github.io/2022/01/26/leetcode-118.杨辉三角/">leetcode-118.杨辉三角</a></td></tr><tr><td>144</td><td><a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal" target="_blank" rel="noopener">二叉树的前序遍历</a> <a href="https://ferrerobomb.github.io/2020/02/26/leetcode-94-144-145-二叉树的遍历/">解法地址</a></td></tr><tr><td>145</td><td><a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal" target="_blank" rel="noopener">二叉树的后序遍历</a> <a href="https://ferrerobomb.github.io/2020/02/26/leetcode-94-144-145-二叉树的遍历/">解法地址</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/compare-version-numbers/" target="_blank" rel="noopener">165. 比较版本号</a></td><td></td></tr><tr><td><a href="https://leetcode-cn.com/problems/excel-sheet-column-title/" target="_blank" rel="noopener">168. Excel表列名称</a></td><td><a href="https://ferrerobomb.github.io/2022/01/31/leetcode-168.Excel表列名称/">leetcode-168.Excel表列名称</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/excel-sheet-column-number/" target="_blank" rel="noopener">171. Excel 表列序号</a></td><td><a href="https://ferrerobomb.github.io/2022/02/03/leetcode-171.Excel 表列序号/">leetcode-171.Excel 表列序号</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/duplicate-emails/" target="_blank" rel="noopener">182. 查找重复的电子邮箱</a></td><td><a href="https://ferrerobomb.github.io/2022/02/02/leetcode-182.查找重复的电子邮箱/">leetcode-182.查找重复的电子邮箱</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/word-frequency/" target="_blank" rel="noopener">192. 统计词频</a></td><td></td></tr><tr><td><a href="https://leetcode-cn.com/problems/house-robber/" target="_blank" rel="noopener">198. 打家劫舍</a></td><td><a href="https://ferrerobomb.github.io/2022/01/26/leetcode-198-打家劫舍/">leetcode-198.打家劫舍</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/coin-change/" target="_blank" rel="noopener">322. 零钱兑换</a></td><td><a href="https://ferrerobomb.github.io/2022/01/26/leetcode-322-零钱兑换/">leetcode-322.零钱兑换</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/sort-an-array/" target="_blank" rel="noopener">912. 排序数组</a></td><td></td></tr><tr><td><a href="https://leetcode-cn.com/problems/count-of-matches-in-tournament/" target="_blank" rel="noopener">1688. 比赛中的配对次数</a></td><td><a href="https://ferrerobomb.github.io/2022/01/25/leetcode-1688-比赛中的配对次数/">leetcode-1688-比赛中的配对次数</a></td></tr><tr><td><a href="https://leetcode-cn.com/problems/keep-multiplying-found-values-by-two/" target="_blank" rel="noopener">2154. 将找到的值乘以 2</a></td><td><a href="https://ferrerobomb.github.io/2022/01/31/leetcode-2154.将找到的值乘以2/">leetcode-2154.将找到的值乘以2</a></td></tr><tr><td>面试题30</td><td><a href="https://leetcode-cn.com/problems/bao-han-minhan-shu-de-zhan-lcof" target="_blank" rel="noopener">包含min函数的栈</a> <a href="https://ferrerobomb.github.io/2020/02/15/leetcode-面试题30-包含min函数的栈/">解法地址</a></td></tr><tr><td>面试题32 - II</td><td><a href="https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof" target="_blank" rel="noopener">从上到下打印二叉树 II</a> <a href="https://ferrerobomb.github.io/2020/02/25/leetcode-面试题32-II-从上到下打印二叉树II/">解法地址</a></td></tr><tr><td>面试题32 - III</td><td><a href="https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof" target="_blank" rel="noopener">从上到下打印二叉树 III</a> <a href="https://ferrerobomb.github.io/2020/02/18/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9832-III-%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91III/">解法地址</a></td></tr><tr><td>面试题37</td><td><a href="https://leetcode-cn.com/problems/xu-lie-hua-er-cha-shu-lcof" target="_blank" rel="noopener">序列化二叉树</a> <a href="https://ferrerobomb.github.io/2020/02/17/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9837-%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91/">解法地址</a></td></tr><tr><td>面试题55 - II</td><td><a href="https://leetcode-cn.com/problems/ping-heng-er-cha-shu-lcof" target="_blank" rel="noopener">平衡二叉树</a> <a href="https://ferrerobomb.github.io/2020/02/15/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9855-II-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/">解法地址</a></td></tr><tr><td>面试题67</td><td>把字符串转换成整数 <a href="https://leetcode-cn.com/problems/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu-lcof/" target="_blank" rel="noopener">题目地址</a> <a href="https://ferrerobomb.github.io/2020/02/19/leetcode-面试题67-把字符串转换成整数/">解法地址</a></td></tr><tr><td>面试题68 - I</td><td>二叉搜索树的最近公共祖先 <a href="https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof/submissions/" target="_blank" rel="noopener">题目地址</a> <a href="https://ferrerobomb.github.io/2020/02/24/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9868-I%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/">解法地址</a></td></tr><tr><td>面试题68 - II</td><td>二叉树的最近公共祖先 <a href="https://leetcode-cn.com/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/" target="_blank" rel="noopener">题目地址</a> <a href="https://ferrerobomb.github.io/2020/02/19/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9868-II%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/">解法地址</a></td></tr><tr><td></td><td></td></tr><tr><td><a href="https://leetcode-cn.com/problems/palindrome-permutation-lcci/" target="_blank" rel="noopener">面试题 01.04. 回文排列</a></td><td><a href="https://ferrerobomb.github.io/2022/01/25/leetcode-面试题01-04-回文排列/">leetcode-面试题01.04.回文排列</a></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-78.子集</title>
      <link href="/2022/02/08/leetcode-78.%E5%AD%90%E9%9B%86/"/>
      <url>/2022/02/08/leetcode-78.%E5%AD%90%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-78-子集【二维数组】"><a href="#leetcode-78-子集【二维数组】" class="headerlink" title="leetcode-78.子集【二维数组】"></a>leetcode-78.子集【二维数组】</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。</p><p>解集 不能 包含重复的子集。你可以按 任意顺序 返回解集。</p><p>示例 1：</p><p>输入：nums = [1,2,3]<br>输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]<br>示例 2：</p><p>输入：nums = [0]<br>输出：[[],[0]]</p><p>提示：</p><p>1 &lt;= nums.length &lt;= 10<br>-10 &lt;= nums[i] &lt;= 10<br>nums 中的所有元素 互不相同</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/subsets" target="_blank" rel="noopener">https://leetcode-cn.com/problems/subsets</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number[][]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> subsets = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result = []</span><br><span class="line">    <span class="keyword">if</span> (nums.length === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (nums.length &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">        result = [[], [nums[<span class="number">0</span>]]]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> currentResult = []</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; result.length; k++) &#123;</span><br><span class="line">        currentResult.push([...result[k]])</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// console.log(JSON.stringify(result), JSON.stringify(currentResult));</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; currentResult.length; j++) &#123;</span><br><span class="line">        currentResult[j].push(nums[i])</span><br><span class="line">        <span class="comment">// console.log(JSON.stringify(result), JSON.stringify(currentResult));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// console.log(JSON.stringify(result), JSON.stringify(currentResult));</span></span><br><span class="line">        result = result.concat(currentResult)</span><br><span class="line">        <span class="comment">// console.log(JSON.stringify(result));</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="解2"><a href="#解2" class="headerlink" title="解2"></a>解2</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> subsets = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> ans = [];</span><br><span class="line">    <span class="keyword">const</span> n = nums.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> mask = <span class="number">0</span>; mask &lt; (<span class="number">1</span> &lt;&lt; n); ++mask) &#123;</span><br><span class="line">        <span class="keyword">const</span> t = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mask &amp; (<span class="number">1</span> &lt;&lt; i)) &#123;</span><br><span class="line">                t.push(nums[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.push(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="解3-回溯"><a href="#解3-回溯" class="headerlink" title="解3 回溯"></a>解3 回溯</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> subsets = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> res = [];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> dfs = <span class="function">(<span class="params">index, list</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (index == nums.length) &#123;</span><br><span class="line">      <span class="comment">// 指针越界</span></span><br><span class="line">      res.push(list.slice()); <span class="comment">// 加入解集</span></span><br><span class="line">      <span class="keyword">return</span>; <span class="comment">// 结束当前的递归</span></span><br><span class="line">    &#125;</span><br><span class="line">    list.push(nums[index]); <span class="comment">// 选择这个数</span></span><br><span class="line">    dfs(index + <span class="number">1</span>, list); <span class="comment">// 基于该选择，继续往下递归，考察下一个数</span></span><br><span class="line">    list.pop(); <span class="comment">// 上面的递归结束，撤销该选择</span></span><br><span class="line">    dfs(index + <span class="number">1</span>, list); <span class="comment">// 不选这个数，继续往下递归，考察下一个数</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  dfs(<span class="number">0</span>, []);</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-165.比较版本号</title>
      <link href="/2022/02/07/leetcode-165.%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
      <url>/2022/02/07/leetcode-165.%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-165-比较版本号"><a href="#leetcode-165-比较版本号" class="headerlink" title="leetcode-165.比较版本号"></a>leetcode-165.比较版本号</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你两个版本号 version1 和 version2 ，请你比较它们。</p><p>版本号由一个或多个修订号组成，各修订号由一个 ‘.’ 连接。每个修订号由 多位数字 组成，可能包含 前导零 。每个版本号至少包含一个字符。修订号从左到右编号，下标从 0 开始，最左边的修订号下标为 0 ，下一个修订号下标为 1 ，以此类推。例如，2.5.33 和 0.1 都是有效的版本号。</p><p>比较版本号时，请按从左到右的顺序依次比较它们的修订号。比较修订号时，只需比较 忽略任何前导零后的整数值 。也就是说，修订号 1 和修订号 001 相等 。如果版本号没有指定某个下标处的修订号，则该修订号视为 0 。例如，版本 1.0 小于版本 1.1 ，因为它们下标为 0 的修订号相同，而下标为 1 的修订号分别为 0 和 1 ，0 &lt; 1 。</p><p>返回规则如下：</p><p>如果 version1 &gt; version2 返回 1，<br>如果 version1 &lt; version2 返回 -1，<br>除此之外返回 0。</p><p>示例 1：</p><p>输入：version1 = “1.01”, version2 = “1.001”<br>输出：0<br>解释：忽略前导零，”01” 和 “001” 都表示相同的整数 “1”<br>示例 2：</p><p>输入：version1 = “1.0”, version2 = “1.0.0”<br>输出：0<br>解释：version1 没有指定下标为 2 的修订号，即视为 “0”<br>示例 3：</p><p>输入：version1 = “0.1”, version2 = “1.1”<br>输出：-1<br>解释：version1 中下标为 0 的修订号是 “0”，version2 中下标为 0 的修订号是 “1” 。0 &lt; 1，所以 version1 &lt; version2</p><p>提示：</p><p>1 &lt;= version1.length, version2.length &lt;= 500<br>version1 和 version2 仅包含数字和 ‘.’<br>version1 和 version2 都是 有效版本号<br>version1 和 version2 的所有修订号都可以存储在 32 位整数 中</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/compare-version-numbers" target="_blank" rel="noopener">https://leetcode-cn.com/problems/compare-version-numbers</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; version1</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; version2</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> compareVersion = <span class="function"><span class="keyword">function</span>(<span class="params">version1, version2</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (version1 === version2) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> version1Array = version1.split(<span class="string">'.'</span>).map(<span class="function"><span class="params">item</span> =&gt;</span> <span class="built_in">Number</span>(item));</span><br><span class="line">    <span class="keyword">let</span> version2Array = version2.split(<span class="string">'.'</span>).map(<span class="function"><span class="params">item</span> =&gt;</span> <span class="built_in">Number</span>(item));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; version1Array.length || i &lt; version2Array.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; version1Array.length) &#123;</span><br><span class="line">            x = version1Array[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; version2Array.length) &#123;</span><br><span class="line">            y = version2Array[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; y) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-192.统计词频</title>
      <link href="/2022/02/06/leetcode-192.%E7%BB%9F%E8%AE%A1%E8%AF%8D%E9%A2%91/"/>
      <url>/2022/02/06/leetcode-192.%E7%BB%9F%E8%AE%A1%E8%AF%8D%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-192-统计词频"><a href="#leetcode-192-统计词频" class="headerlink" title="leetcode-192.统计词频"></a>leetcode-192.统计词频</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>写一个 bash 脚本以统计一个文本文件 words.txt 中每个单词出现的频率。</p><p>为了简单起见，你可以假设：</p><p>words.txt只包括小写字母和 ‘ ‘ 。<br>每个单词只由小写字母组成。<br>单词间由一个或多个空格字符分隔。<br>示例:</p><p>假设 words.txt 内容如下：</p><p>the day is sunny the the<br>the sunny is is<br>你的脚本应当输出（以词频降序排列）：</p><p>the 4<br>is 3<br>sunny 2<br>day 1<br>说明:</p><p>不要担心词频相同的单词的排序问题，每个单词出现的频率都是唯一的。<br>你可以使用一行 Unix pipes 实现吗？</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/word-frequency" target="_blank" rel="noopener">https://leetcode-cn.com/problems/word-frequency</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Read from the file words.txt and output the word frequency list to stdout.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://leetcode-cn.com/problems/word-frequency/solution/qie-ge-pai-xu-dan-ci-tong-ji-ci-shu-pai-8sdgt/</span></span><br><span class="line"></span><br><span class="line">cat words.txt | tr -s ' ' '\n' | sort | uniq -c | sort -r | awk '&#123; print $2, $1 &#125;'</span><br><span class="line"><span class="meta">#</span><span class="bash"> 解题步骤</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1 切割</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tr 命令用于转换或删除文件中的字符</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -s：缩减连续重复的字符成指定的单个字符</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat Words.txt| tr -s <span class="string">' '</span> <span class="string">'\n'</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> day</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sunny</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sunny</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2 排序单词</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat Words.txt| tr -s <span class="string">' '</span> <span class="string">'\n'</span> | sort</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> day</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sunny</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sunny</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3 统计单词出现次数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> uniq 命令用于检查及删除文本文件中重复出现的行列，一般与 sort 命令结合使用。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -c：在每列旁边显示该行重复出现的次数。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat Words.txt| tr -s <span class="string">' '</span> <span class="string">'\n'</span> | sort | uniq -c</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1 day</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3 is</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2 sunny</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4 the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4 排序单词出现次数</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -r：以相反的顺序来排序</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat Words.txt| tr -s <span class="string">' '</span> <span class="string">'\n'</span> | sort | uniq -c | sort -r</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4 the</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3 is</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2 sunny</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1 day</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5 打印</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> shell</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> cat Words.txt| tr -s <span class="string">' '</span> <span class="string">'\n'</span> | sort | uniq -c | sort -r | awk <span class="string">'&#123;print $2, $1&#125;'</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the 4</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> is 3</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> sunny 2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> day 1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-168.Excel表列名称</title>
      <link href="/2022/02/05/leetcode-168.Excel%E8%A1%A8%E5%88%97%E5%90%8D%E7%A7%B0/"/>
      <url>/2022/02/05/leetcode-168.Excel%E8%A1%A8%E5%88%97%E5%90%8D%E7%A7%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-168-Excel表列名称"><a href="#leetcode-168-Excel表列名称" class="headerlink" title="leetcode-168.Excel表列名称"></a>leetcode-168.Excel表列名称</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个整数 columnNumber ，返回它在 Excel 表中相对应的列名称。</p><p>例如：</p><p>A -&gt; 1<br>B -&gt; 2<br>C -&gt; 3<br>…<br>Z -&gt; 26<br>AA -&gt; 27<br>AB -&gt; 28<br>…</p><p>示例 1：</p><p>输入：columnNumber = 1<br>输出：”A”<br>示例 2：</p><p>输入：columnNumber = 28<br>输出：”AB”<br>示例 3：</p><p>输入：columnNumber = 701<br>输出：”ZY”<br>示例 4：</p><p>输入：columnNumber = 2147483647<br>输出：”FXSHRXW”</p><p>提示：</p><p>1 &lt;= columnNumber &lt;= 231 - 1</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/excel-sheet-column-title" target="_blank" rel="noopener">https://leetcode-cn.com/problems/excel-sheet-column-title</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; columnNumber</span></span><br><span class="line"><span class="comment"> * @return &#123;string&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//  26进制 理解非10进制</span></span><br><span class="line"><span class="keyword">var</span> convertToTitle = <span class="function"><span class="keyword">function</span>(<span class="params">columnNumber</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">while</span> (columnNumber != <span class="number">0</span>) &#123;</span><br><span class="line">columnNumber--; <span class="comment">// --之后就符合26进制的0-25了</span></span><br><span class="line">str += <span class="built_in">String</span>.fromCharCode(<span class="string">"A"</span>.charCodeAt() + (columnNumber % <span class="number">26</span>)); <span class="comment">// columnNumber % 26值为0-25，计算出A-Z</span></span><br><span class="line">columnNumber /= <span class="number">26</span>; <span class="comment">// 不用Math.floor是因为String.fromCharCode忽略小数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-9.回文数</title>
      <link href="/2022/02/04/leetcode-9.%E5%9B%9E%E6%96%87%E6%95%B0/"/>
      <url>/2022/02/04/leetcode-9.%E5%9B%9E%E6%96%87%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-9-回文数"><a href="#leetcode-9-回文数" class="headerlink" title="leetcode-9.回文数"></a>leetcode-9.回文数</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。</p><p>回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。例如，121 是回文，而 123 不是。</p><p>示例 1：</p><p>输入：x = 121<br>输出：true<br>示例 2：</p><p>输入：x = -121<br>输出：false<br>解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。<br>示例 3：</p><p>输入：x = 10<br>输出：false<br>解释：从右向左读, 为 01 。因此它不是一个回文数。<br>示例 4：</p><p>输入：x = -101<br>输出：false</p><p>提示：</p><p>-231 &lt;= x &lt;= 231 - 1</p><p>进阶：你能不将整数转为字符串来解决这个问题吗？</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/palindrome-number" target="_blank" rel="noopener">https://leetcode-cn.com/problems/palindrome-number</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; x</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isPalindrome = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 特殊情况：</span></span><br><span class="line">  <span class="comment">// 如上所述，当 x &lt; 0 时，x 不是回文数。</span></span><br><span class="line">  <span class="comment">// 同样地，如果数字的最后一位是 0，为了使该数字为回文，</span></span><br><span class="line">  <span class="comment">// 则其第一位数字也应该是 0</span></span><br><span class="line">  <span class="comment">// 只有 0 满足这一属性</span></span><br><span class="line">  <span class="keyword">if</span> (x &lt; <span class="number">0</span> || (x % <span class="number">10</span> === <span class="number">0</span> &amp;&amp; x !== <span class="number">0</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> revertedNumber = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (x &gt; revertedNumber) &#123;</span><br><span class="line">      revertedNumber = revertedNumber * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">      x = <span class="built_in">Math</span>.floor(x / <span class="number">10</span>);</span><br><span class="line">      <span class="comment">// console.log(x, revertedNumber);</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。</span></span><br><span class="line">  <span class="comment">// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，</span></span><br><span class="line">  <span class="comment">// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。</span></span><br><span class="line">  <span class="keyword">return</span> x === revertedNumber || x === <span class="built_in">Math</span>.floor(revertedNumber / <span class="number">10</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// let res = isPalindrome(12321)</span></span><br><span class="line"><span class="comment">// console.log(res);</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-171.Excel 表列序号</title>
      <link href="/2022/02/03/leetcode-171.Excel%20%E8%A1%A8%E5%88%97%E5%BA%8F%E5%8F%B7/"/>
      <url>/2022/02/03/leetcode-171.Excel%20%E8%A1%A8%E5%88%97%E5%BA%8F%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-171-Excel-表列序号"><a href="#leetcode-171-Excel-表列序号" class="headerlink" title="leetcode-171.Excel 表列序号"></a>leetcode-171.Excel 表列序号</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个字符串 columnTitle ，表示 Excel 表格中的列名称。返回 该列名称对应的列序号 。</p><p>例如：</p><p>A -&gt; 1<br>B -&gt; 2<br>C -&gt; 3<br>…<br>Z -&gt; 26<br>AA -&gt; 27<br>AB -&gt; 28<br>…</p><p>示例 1:</p><p>输入: columnTitle = “A”<br>输出: 1<br>示例 2:</p><p>输入: columnTitle = “AB”<br>输出: 28<br>示例 3:</p><p>输入: columnTitle = “ZY”<br>输出: 701</p><p>提示：</p><p>1 &lt;= columnTitle.length &lt;= 7<br>columnTitle 仅由大写英文组成<br>columnTitle 在范围 [“A”, “FXSHRXW”] 内</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/excel-sheet-column-number" target="_blank" rel="noopener">https://leetcode-cn.com/problems/excel-sheet-column-number</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; columnTitle</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//  26进制</span></span><br><span class="line"><span class="keyword">var</span> titleToNumber = <span class="function"><span class="keyword">function</span>(<span class="params">columnTitle</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> index = <span class="number">0</span>; <span class="comment">// 序号</span></span><br><span class="line">    <span class="keyword">let</span> k = <span class="number">1</span>; <span class="comment">// 当前位置</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = columnTitle.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">const</span> p = columnTitle[i].charCodeAt() - <span class="string">'A'</span>.charCodeAt() + <span class="number">1</span></span><br><span class="line">        index += p * k <span class="comment">// 由于是26进制，每位都要乘当前的位数</span></span><br><span class="line">        k *= <span class="number">26</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-182.查找重复的电子邮箱</title>
      <link href="/2022/02/02/leetcode-182.%E6%9F%A5%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1/"/>
      <url>/2022/02/02/leetcode-182.%E6%9F%A5%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-182-查找重复的电子邮箱"><a href="#leetcode-182-查找重复的电子邮箱" class="headerlink" title="leetcode-182.查找重复的电子邮箱"></a>leetcode-182.查找重复的电子邮箱</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>SQL架构</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span> <span class="keyword">If</span> <span class="keyword">Not</span> <span class="keyword">Exists</span> Person (<span class="keyword">id</span> <span class="built_in">int</span>, email <span class="built_in">varchar</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">Truncate</span> <span class="keyword">table</span> Person</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Person (<span class="keyword">id</span>, email) <span class="keyword">values</span> (<span class="string">'1'</span>, <span class="string">'a@b.com'</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Person (<span class="keyword">id</span>, email) <span class="keyword">values</span> (<span class="string">'2'</span>, <span class="string">'c@d.com'</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Person (<span class="keyword">id</span>, email) <span class="keyword">values</span> (<span class="string">'3'</span>, <span class="string">'a@b.com'</span>)</span><br></pre></td></tr></table></figure><p>编写一个 SQL 查询，查找 <code>Person</code> 表中所有重复的电子邮箱。</p><p><strong>示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+----+---------+</span><br><span class="line">| Id | Email   |</span><br><span class="line">+----+---------+</span><br><span class="line">| 1  | a@b.com |</span><br><span class="line">| 2  | c@d.com |</span><br><span class="line">| 3  | a@b.com |</span><br><span class="line">+----+---------+</span><br></pre></td></tr></table></figure><p>根据以上输入，你的查询应返回以下结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+---------+</span><br><span class="line">| Email   |</span><br><span class="line">+---------+</span><br><span class="line">| a@b.com |</span><br><span class="line">+---------+</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>所有电子邮箱都是小写字母。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Write your MySQL query statement below</span></span><br><span class="line"><span class="comment"># 1.聚合</span></span><br><span class="line"><span class="comment">#  select Email, count(Email) as num</span></span><br><span class="line"><span class="comment">#  from Person</span></span><br><span class="line"><span class="comment">#  group by Email</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.查找出现次数大于1的</span></span><br><span class="line"><span class="keyword">select</span> Email <span class="keyword">from</span></span><br><span class="line">(</span><br><span class="line">  <span class="keyword">select</span> Email, <span class="keyword">count</span>(Email) <span class="keyword">as</span> <span class="keyword">num</span></span><br><span class="line">  <span class="keyword">from</span> Person</span><br><span class="line">  <span class="keyword">group</span> <span class="keyword">by</span> Email</span><br><span class="line">) <span class="keyword">as</span> statistic</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">num</span> &gt; <span class="number">1</span></span><br><span class="line">;</span><br></pre></td></tr></table></figure><h2 id="解2"><a href="#解2" class="headerlink" title="解2"></a>解2</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用聚合的having</span></span><br><span class="line"><span class="keyword">select</span> Email</span><br><span class="line"><span class="keyword">from</span> Person</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Email</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(Email) &gt; <span class="number">1</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-88.合并两个有序数组</title>
      <link href="/2022/02/01/leetcode-88.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
      <url>/2022/02/01/leetcode-88.%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-88-合并两个有序数组"><a href="#leetcode-88-合并两个有序数组" class="headerlink" title="leetcode-88.合并两个有序数组"></a>leetcode-88.合并两个有序数组</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。</p><p>请你 合并 nums2 到 nums1 中，使合并后的数组同样按 非递减顺序 排列。</p><p>注意：最终，合并后数组不应由函数返回，而是存储在数组 nums1 中。为了应对这种情况，nums1 的初始长度为 m + n，其中前 m 个元素表示应合并的元素，后 n 个元素为 0 ，应忽略。nums2 的长度为 n 。</p><p>示例 1：</p><p>输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3<br>输出：[1,2,2,3,5,6]<br>解释：需要合并 [1,2,3] 和 [2,5,6] 。<br>合并结果是 [1,2,2,3,5,6] ，其中斜体加粗标注的为 nums1 中的元素。<br>示例 2：</p><p>输入：nums1 = [1], m = 1, nums2 = [], n = 0<br>输出：[1]<br>解释：需要合并 [1] 和 [] 。<br>合并结果是 [1] 。<br>示例 3：</p><p>输入：nums1 = [0], m = 0, nums2 = [1], n = 1<br>输出：[1]<br>解释：需要合并的数组是 [] 和 [1] 。<br>合并结果是 [1] 。<br>注意，因为 m = 0 ，所以 nums1 中没有元素。nums1 中仅存的 0 仅仅是为了确保合并结果可以顺利存放到 nums1 中。</p><p>提示：</p><p>nums1.length == m + n<br>nums2.length == n<br>0 &lt;= m, n &lt;= 200<br>1 &lt;= m + n &lt;= 200<br>-109 &lt;= nums1[i], nums2[j] &lt;= 109</p><p>进阶：你可以设计实现一个时间复杂度为 O(m + n) 的算法解决此问题吗？</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/merge-sorted-array" target="_blank" rel="noopener">https://leetcode-cn.com/problems/merge-sorted-array</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums1</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; m</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums2</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;void&#125; Do not return anything, modify nums1 in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 方法1 好理解的双指针改变nums1</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums1</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; m</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums2</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;void&#125; Do not return anything, modify nums1 in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="keyword">var</span> merge = <span class="function"><span class="keyword">function</span>(<span class="params">nums1, m, nums2, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> arr = []</span><br><span class="line">    <span class="keyword">let</span> p1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> p2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(arr.length &lt; nums1.length) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p1 &gt;= m) &#123;</span><br><span class="line">        arr.push(nums2[p2])</span><br><span class="line">        p2++;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (p2 &gt;= n) &#123;</span><br><span class="line">        arr.push(nums1[p1])</span><br><span class="line">        p1++;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (nums1[p1] &gt;= nums2[p2] ) &#123;</span><br><span class="line">        arr.push(nums2[p2])</span><br><span class="line">        p2++;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        arr.push(nums1[p1])</span><br><span class="line">        p1++;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i != m + n; ++i) &#123;</span><br><span class="line">        nums1[i] = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2 直接排序</span></span><br><span class="line"><span class="keyword">var</span> merge = <span class="function"><span class="keyword">function</span>(<span class="params">nums1, m, nums2, n</span>) </span>&#123;</span><br><span class="line">    nums1.splice(m, nums1.length - m, ...nums2);</span><br><span class="line">    nums1.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法3 双指针改变nums1 【方法1的优化写法】</span></span><br><span class="line"><span class="keyword">var</span> merge = <span class="function"><span class="keyword">function</span>(<span class="params">nums1, m, nums2, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> p1 = <span class="number">0</span>, p2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> sorted = <span class="keyword">new</span> <span class="built_in">Array</span>(m + n).fill(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">var</span> cur;</span><br><span class="line">    <span class="keyword">while</span> (p1 &lt; m || p2 &lt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p1 === m) &#123;</span><br><span class="line">            cur = nums2[p2++];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (p2 === n) &#123;</span><br><span class="line">            cur = nums1[p1++];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums1[p1] &lt; nums2[p2]) &#123;</span><br><span class="line">            cur = nums1[p1++];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur = nums2[p2++];</span><br><span class="line">        &#125;</span><br><span class="line">        sorted[p1 + p2 - <span class="number">1</span>] = cur;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i != m + n; ++i) &#123;</span><br><span class="line">        nums1[i] = sorted[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-2154.将找到的值乘以2</title>
      <link href="/2022/01/31/leetcode-2154.%E5%B0%86%E6%89%BE%E5%88%B0%E7%9A%84%E5%80%BC%E4%B9%98%E4%BB%A52/"/>
      <url>/2022/01/31/leetcode-2154.%E5%B0%86%E6%89%BE%E5%88%B0%E7%9A%84%E5%80%BC%E4%B9%98%E4%BB%A52/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-2154-将找到的值乘以2"><a href="#leetcode-2154-将找到的值乘以2" class="headerlink" title="leetcode-2154.将找到的值乘以2"></a>leetcode-2154.将找到的值乘以2</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个整数数组 nums ，另给你一个整数 original ，这是需要在 nums 中搜索的第一个数字。</p><p>接下来，你需要按下述步骤操作：</p><p>如果在 nums 中找到 original ，将 original 乘以 2 ，得到新 original（即，令 original = 2 * original）。<br>否则，停止这一过程。<br>只要能在数组中找到新 original ，就对新 original 继续 重复 这一过程。<br>返回 original 的 最终 值。</p><p>示例 1：</p><p>输入：nums = [5,3,6,1,12], original = 3<br>输出：24<br>解释： </p><ul><li>3 能在 nums 中找到。3 * 2 = 6 。</li><li>6 能在 nums 中找到。6 * 2 = 12 。</li><li>12 能在 nums 中找到。12 * 2 = 24 。</li><li>24 不能在 nums 中找到。因此，返回 24 。<br>示例 2：</li></ul><p>输入：nums = [2,7,9], original = 4<br>输出：4<br>解释：</p><ul><li>4 不能在 nums 中找到。因此，返回 4 。</li></ul><p>提示：</p><p>1 &lt;= nums.length &lt;= 1000<br>1 &lt;= nums[i], original &lt;= 1000</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/keep-multiplying-found-values-by-two" target="_blank" rel="noopener">https://leetcode-cn.com/problems/keep-multiplying-found-values-by-two</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; original</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> findFinalValue = <span class="function"><span class="keyword">function</span>(<span class="params">nums, original</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">    <span class="comment">// console.log(nums[i], original);</span></span><br><span class="line">    <span class="keyword">if</span> (nums[i] === original) &#123;</span><br><span class="line">        original *= <span class="number">2</span></span><br><span class="line">        i = <span class="number">-1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log(original);</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> original</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-75.颜色分类</title>
      <link href="/2022/01/30/leetcode-75.%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB/"/>
      <url>/2022/01/30/leetcode-75.%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-75-颜色分类"><a href="#leetcode-75-颜色分类" class="headerlink" title="leetcode-75.颜色分类"></a>leetcode-75.颜色分类</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个包含红色、白色和蓝色、共 n 个元素的数组 nums ，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。</p><p>我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。</p><p>必须在不使用库的sort函数的情况下解决这个问题。</p><p>示例 1：</p><p>输入：nums = [2,0,2,1,1,0]<br>输出：[0,0,1,1,2,2]<br>示例 2：</p><p>输入：nums = [2,0,1]<br>输出：[0,1,2]</p><p>提示：</p><p>n == nums.length<br>1 &lt;= n &lt;= 300<br>nums[i] 为 0、1 或 2</p><p>进阶：</p><p>你可以不使用代码库中的排序函数来解决这道题吗？<br>你能想出一个仅使用常数空间的一趟扫描算法吗？</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/sort-colors" target="_blank" rel="noopener">https://leetcode-cn.com/problems/sort-colors</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;void&#125; Do not return anything, modify nums in-place instead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> sortColors = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> cur = <span class="number">0</span>; <span class="comment">// 当前指针</span></span><br><span class="line">    <span class="keyword">let</span> p0 = <span class="number">0</span>; <span class="comment">// 0指针</span></span><br><span class="line">    <span class="keyword">let</span> p2 = nums.length<span class="number">-1</span>; <span class="comment">// 2指针</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 换位函数 </span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">i, j</span>)</span>&#123;</span><br><span class="line">        [nums[i],nums[j]] = [nums[j],nums[i]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(cur &lt;= p2)&#123;</span><br><span class="line">        <span class="keyword">while</span>(cur &gt;= p0 &amp;&amp; cur &lt;= p2 &amp;&amp; nums[cur] !== <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">// 遇到0 和p0位置交换</span></span><br><span class="line">            <span class="keyword">if</span>(nums[cur] === <span class="number">0</span>) swap(cur, p0++);</span><br><span class="line">            <span class="comment">// 遇到2 和p2位置交换</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nums[cur] === <span class="number">2</span>) swap(cur, p2--);</span><br><span class="line">        &#125;</span><br><span class="line">        cur++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> nums;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log([sortColors([2,0,2,1,1,0])]);</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-53. 最大子数组和</title>
      <link href="/2022/01/29/leetcode-53.%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/"/>
      <url>/2022/01/29/leetcode-53.%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-53-最大子数组和"><a href="#leetcode-53-最大子数组和" class="headerlink" title="leetcode-53. 最大子数组和"></a>leetcode-53. 最大子数组和</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个整数数组 nums ，请你找出一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。</p><p>子数组 是数组中的一个连续部分。</p><p>示例 1：</p><p>输入：nums = [-2,1,-3,4,-1,2,1,-5,4]<br>输出：6<br>解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。<br>示例 2：</p><p>输入：nums = [1]<br>输出：1<br>示例 3：</p><p>输入：nums = [5,4,-1,7,8]<br>输出：23</p><p>提示：</p><p>1 &lt;= nums.length &lt;= 105<br>-104 &lt;= nums[i] &lt;= 104</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/maximum-subarray" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-subarray</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">var</span> maxSubArray = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 确定dp数组（dp table）以及下标的含义</span></span><br><span class="line">  <span class="comment">// 确定递推公式</span></span><br><span class="line">  <span class="comment">// dp数组如何初始化</span></span><br><span class="line">  <span class="comment">// 确定遍历顺序</span></span><br><span class="line">  <span class="comment">// 举例推导dp数组</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 动态规划的是首先对数组进行遍历，当前最大连续子序列和为 sum，结果为 ans</span></span><br><span class="line">  <span class="comment">// 如果 sum &gt; 0，则说明 sum 对结果有增益效果，则 sum 保留并加上当前遍历数字</span></span><br><span class="line">  <span class="comment">// 如果 sum &lt;= 0，则说明 sum 对结果无增益效果，需要舍弃，则 sum 直接更新为当前遍历数字</span></span><br><span class="line">  <span class="comment">// 每次比较 sum 和 ans的大小，将最大值置为ans，遍历结束返回结果</span></span><br><span class="line">  <span class="comment">// 时间复杂度：O(n)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 定义sum为临时最大值， result为最后输出最大值</span></span><br><span class="line">  <span class="keyword">let</span> sum = <span class="number">0</span>, result = nums[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">let</span> num <span class="keyword">of</span> nums) &#123;</span><br><span class="line">      <span class="keyword">if</span> (sum &gt; <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="comment">// 当前（截止上一轮计算的）sum是正数，则sum+num为新的最大</span></span><br><span class="line">          sum += num</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 当前sum为负  则前面的必不是最大，中断连续，重置sum为num(新连续的开始)</span></span><br><span class="line">          sum = num </span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 每轮比较大小 取最大数为最终答案</span></span><br><span class="line">      result = <span class="built_in">Math</span>.max(result, sum)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(maxSubArray([<span class="number">-2</span>,<span class="number">1</span>,<span class="number">-3</span>,<span class="number">4</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">-5</span>,<span class="number">4</span>]));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-3.无重复字符的最长子串</title>
      <link href="/2022/01/28/leetcode-3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/"/>
      <url>/2022/01/28/leetcode-3.%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-3-无重复字符的最长子串"><a href="#leetcode-3-无重复字符的最长子串" class="headerlink" title="leetcode-3.无重复字符的最长子串"></a>leetcode-3.无重复字符的最长子串</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。</p><p>示例 1:</p><p>输入: s = “abcabcbb”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。<br>示例 2:</p><p>输入: s = “bbbbb”<br>输出: 1<br>解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。<br>示例 3:</p><p>输入: s = “pwwkew”<br>输出: 3<br>解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br>     请注意，你的答案必须是 子串 的长度，”pwke” 是一个子序列，不是子串。<br>示例 4:</p><p>输入: s = “”<br>输出: 0</p><p>提示：</p><p>0 &lt;= s.length &lt;= 5 * 104<br>s 由英文字母、数字、符号和空格组成</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/longest-substring-without-repeating-characters" target="_blank" rel="noopener">https://leetcode-cn.com/problems/longest-substring-without-repeating-characters</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; s</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//  方法1 滑动窗口</span></span><br><span class="line"><span class="comment">// 思考 如果要求输出最长的子串值该如何做</span></span><br><span class="line"><span class="keyword">var</span> lengthOfLongestSubstring = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> arr = []; <span class="comment">// 定义数组用作滑动窗口</span></span><br><span class="line">    <span class="keyword">let</span> max = <span class="number">0</span>; <span class="comment">// 最大长度</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> index = arr.indexOf(s[i]) <span class="comment">// 滑动窗口内有没有重复</span></span><br><span class="line">        <span class="keyword">if</span>(index !== <span class="number">-1</span>) &#123; <span class="comment">// 有重复的 则只保留重复字符+1 到结尾的元素</span></span><br><span class="line">            arr.splice(<span class="number">0</span>, index+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        arr.push(s.charAt(i)) <span class="comment">// 新增元素</span></span><br><span class="line">        max = <span class="built_in">Math</span>.max(arr.length, max) <span class="comment">// max和新数组长度比较大小</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-322.零钱兑换</title>
      <link href="/2022/01/27/leetcode-322-%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/"/>
      <url>/2022/01/27/leetcode-322-%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-322-零钱兑换"><a href="#leetcode-322-零钱兑换" class="headerlink" title="leetcode-322.零钱兑换"></a>leetcode-322.零钱兑换</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个整数数组 coins ，表示不同面额的硬币；以及一个整数 amount ，表示总金额。</p><p>计算并返回可以凑成总金额所需的 最少的硬币个数 。如果没有任何一种硬币组合能组成总金额，返回 -1 。</p><p>你可以认为每种硬币的数量是无限的。</p><p>示例 1：</p><p>输入：coins = [1, 2, 5], amount = 11<br>输出：3<br>解释：11 = 5 + 5 + 1<br>示例 2：</p><p>输入：coins = [2], amount = 3<br>输出：-1<br>示例 3：</p><p>输入：coins = [1], amount = 0<br>输出：0<br>示例 4：</p><p>输入：coins = [1], amount = 1<br>输出：1<br>示例 5：</p><p>输入：coins = [1], amount = 2<br>输出：2</p><p>提示：</p><p>1 &lt;= coins.length &lt;= 12<br>1 &lt;= coins[i] &lt;= 231 - 1<br>0 &lt;= amount &lt;= 104</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/coin-change" target="_blank" rel="noopener">https://leetcode-cn.com/problems/coin-change</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; coins</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; amount</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="comment">// dp[i] = min(dp[i-1],dp[i-2],dp[i-5])+1</span></span><br><span class="line"><span class="comment">// 方法1 依次循环的动态规划 dp[i] = Min(dp[i], dp[i-num])</span></span><br><span class="line"><span class="keyword">var</span> coinChange = <span class="function"><span class="keyword">function</span>(<span class="params">coins, amount</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> dp = <span class="keyword">new</span> <span class="built_in">Array</span>(amount+<span class="number">1</span>).fill(<span class="built_in">Number</span>.MAX_SAFE_INTEGER);</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> num <span class="keyword">of</span> coins) &#123;</span><br><span class="line">        <span class="comment">// console.log(`let $&#123;num&#125; of [$&#123;coins&#125;]`)</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=num; i&lt;=amount; i++) &#123;</span><br><span class="line">            dp[i] = <span class="built_in">Math</span>.min(dp[i],dp[i-num]+<span class="number">1</span>);</span><br><span class="line">            <span class="comment">// console.log(`dp[$&#123;i&#125;] = Math.min(dp[$&#123;i&#125;],dp[$&#123;i&#125;-$&#123;num&#125;]+1)`, dp[i])</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[amount] === <span class="built_in">Number</span>.MAX_SAFE_INTEGER ? <span class="number">-1</span> : dp[amount];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-118.杨辉三角</title>
      <link href="/2022/01/26/leetcode-118.%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/"/>
      <url>/2022/01/26/leetcode-118.%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-118-杨辉三角"><a href="#leetcode-118-杨辉三角" class="headerlink" title="leetcode-118.杨辉三角"></a>leetcode-118.杨辉三角</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个非负整数 numRows，生成「杨辉三角」的前 numRows 行。</p><p>在「杨辉三角」中，每个数是它左上方和右上方的数的和。</p><p>示例 1:</p><p>输入: numRows = 5<br>输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]<br>示例 2:</p><p>输入: numRows = 1<br>输出: [[1]]</p><p>提示:</p><p>1 &lt;= numRows &lt;= 30</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/pascals-triangle" target="_blank" rel="noopener">https://leetcode-cn.com/problems/pascals-triangle</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; numRows</span></span><br><span class="line"><span class="comment"> * @return &#123;number[][]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">var</span> generate = <span class="function"><span class="keyword">function</span>(<span class="params">numRows</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> ret = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; numRows; i++) &#123;</span><br><span class="line">      <span class="keyword">const</span> row = <span class="keyword">new</span> <span class="built_in">Array</span>(i + <span class="number">1</span>).fill(<span class="number">1</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt; row.length - <span class="number">1</span>; j++) &#123;</span><br><span class="line">          row[j] = ret[i - <span class="number">1</span>][j - <span class="number">1</span>] + ret[i - <span class="number">1</span>][j];</span><br><span class="line">          <span class="built_in">console</span>.log(row);</span><br><span class="line">      &#125;</span><br><span class="line">      ret.push(row);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`i=<span class="subst">$&#123;i&#125;</span>, row=<span class="subst">$&#123;row&#125;</span>, ret=<span class="subst">$&#123;ret&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ret;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> res = generate(<span class="number">5</span>)</span><br><span class="line"><span class="comment">// let res = findFinalValue([8,19,4,2,15,3],2)</span></span><br><span class="line"><span class="built_in">console</span>.log(res);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-6.Z字形变换</title>
      <link href="/2022/01/26/leetcode-6.Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/"/>
      <url>/2022/01/26/leetcode-6.Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-6-Z字形变换"><a href="#leetcode-6-Z字形变换" class="headerlink" title="leetcode-6.Z字形变换"></a>leetcode-6.Z字形变换</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。</p><p>比如输入字符串为 “PAYPALISHIRING” 行数为 3 时，排列如下：</p><p>P   A   H   N<br>A P L S I I G<br>Y   I   R<br>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：”PAHNAPLSIIGYIR”。</p><p>请你实现这个将字符串进行指定行数变换的函数：</p><p>string convert(string s, int numRows);</p><p>示例 1：</p><p>输入：s = “PAYPALISHIRING”, numRows = 3<br>输出：”PAHNAPLSIIGYIR”<br>示例 2：<br>输入：s = “PAYPALISHIRING”, numRows = 4<br>输出：”PINALSIGYAHRPI”<br>解释：<br>P     I    N<br>A   L S  I G<br>Y A   H R<br>P     I<br>示例 3：</p><p>输入：s = “A”, numRows = 1<br>输出：”A”</p><p>提示：</p><p>1 &lt;= s.length &lt;= 1000<br>s 由英文字母（小写和大写）、’,’ 和 ‘.’ 组成<br>1 &lt;= numRows &lt;= 1000</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/zigzag-conversion" target="_blank" rel="noopener">https://leetcode-cn.com/problems/zigzag-conversion</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-模板</title>
      <link href="/2022/01/26/leetcode-%E6%A8%A1%E7%89%88/"/>
      <url>/2022/01/26/leetcode-%E6%A8%A1%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-模板"><a href="#leetcode-模板" class="headerlink" title="leetcode-模板"></a>leetcode-模板</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-2.两数相加</title>
      <link href="/2022/01/25/leetcode-2.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/"/>
      <url>/2022/01/25/leetcode-2.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-2-两数相加"><a href="#leetcode-2-两数相加" class="headerlink" title="leetcode-2.两数相加"></a>leetcode-2.两数相加</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p>示例 1：</p><p>输入：l1 = [2,4,3], l2 = [5,6,4]<br>输出：[7,0,8]<br>解释：342 + 465 = 807.<br>示例 2：</p><p>输入：l1 = [0], l2 = [0]<br>输出：[0]<br>示例 3：</p><p>输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]<br>输出：[8,9,9,9,0,0,0,1]</p><p>提示：</p><p>每个链表中的节点数在范围 [1, 100] 内<br>0 &lt;= Node.val &lt;= 9<br>题目数据保证列表表示的数字不含前导零</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/add-two-numbers" target="_blank" rel="noopener">https://leetcode-cn.com/problems/add-two-numbers</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * function ListNode(val, next) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = (val===undefined ? 0 : val)</span></span><br><span class="line"><span class="comment"> *     this.next = (next===undefined ? null : next)</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; l1</span></span><br><span class="line"><span class="comment"> * @param &#123;ListNode&#125; l2</span></span><br><span class="line"><span class="comment"> * @return &#123;ListNode&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//  注意审题  逆序</span></span><br><span class="line"><span class="keyword">var</span> addTwoNumbers = <span class="function"><span class="keyword">function</span>(<span class="params">l1, l2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> p1 = l1;</span><br><span class="line">    <span class="keyword">let</span> p2 = l2;</span><br><span class="line">    <span class="keyword">let</span> dummy = <span class="keyword">new</span> ListNode(<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">let</span> p = dummy;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> carry = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(p1 !== <span class="literal">null</span> || p2 !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> val = carry</span><br><span class="line">        <span class="keyword">if</span> (p1 !== <span class="literal">null</span>) &#123;</span><br><span class="line">            val += p1.val</span><br><span class="line">            p1 = p1.next</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (p2 !== <span class="literal">null</span>) &#123;</span><br><span class="line">            val += p2.val</span><br><span class="line">            p2 = p2.next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 处理数值和进位</span></span><br><span class="line">        carry = <span class="built_in">Math</span>.floor(val / <span class="number">10</span>)</span><br><span class="line">        val = val % <span class="number">10</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 去掉头部虚拟节点</span></span><br><span class="line">        p.next = <span class="keyword">new</span> ListNode(val)</span><br><span class="line">        p = p.next</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dummy.next</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-70.爬楼梯</title>
      <link href="/2022/01/24/leetcode-70.%E7%88%AC%E6%A5%BC%E6%A2%AF/"/>
      <url>/2022/01/24/leetcode-70.%E7%88%AC%E6%A5%BC%E6%A2%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-70-爬楼梯"><a href="#leetcode-70-爬楼梯" class="headerlink" title="leetcode-70.爬楼梯"></a>leetcode-70.爬楼梯</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。</p><p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p><p>示例 1：</p><p>输入：n = 2<br>输出：2<br>解释：有两种方法可以爬到楼顶。</p><ol><li>1 阶 + 1 阶</li><li>2 阶<br>示例 2：</li></ol><p>输入：n = 3<br>输出：3<br>解释：有三种方法可以爬到楼顶。</p><ol><li>1 阶 + 1 阶 + 1 阶</li><li>1 阶 + 2 阶</li><li>2 阶 + 1 阶</li></ol><p>提示：</p><p>1 &lt;= n &lt;= 45</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/climbing-stairs" target="_blank" rel="noopener">https://leetcode-cn.com/problems/climbing-stairs</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> climbStairs = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> dp = <span class="keyword">new</span> <span class="built_in">Array</span>(n+<span class="number">1</span>).fill(<span class="number">0</span>)</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">    dp[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">    dp[<span class="number">2</span>] = <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">3</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        dp[i] = dp[i<span class="number">-1</span>] + dp[i - <span class="number">2</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-79.单词搜索</title>
      <link href="/2022/01/23/leetcode-79.%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/"/>
      <url>/2022/01/23/leetcode-79.%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-79-单词搜索"><a href="#leetcode-79-单词搜索" class="headerlink" title="leetcode-79.单词搜索"></a>leetcode-79.单词搜索</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。</p><p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p><p>示例 1：</p><p>输入：board = [[“A”,”B”,”C”,”E”],[“S”,”F”,”C”,”S”],[“A”,”D”,”E”,”E”]], word = “ABCCED”<br>输出：true<br>示例 2：</p><p>输入：board = [[“A”,”B”,”C”,”E”],[“S”,”F”,”C”,”S”],[“A”,”D”,”E”,”E”]], word = “SEE”<br>输出：true<br>示例 3：</p><p>输入：board = [[“A”,”B”,”C”,”E”],[“S”,”F”,”C”,”S”],[“A”,”D”,”E”,”E”]], word = “ABCB”<br>输出：false</p><p>提示：</p><p>m == board.length<br>n = board[i].length<br>1 &lt;= m, n &lt;= 6<br>1 &lt;= word.length &lt;= 15<br>board 和 word 仅由大小写英文字母组成</p><p>进阶：你可以使用搜索剪枝的技术来优化解决方案，使其在 board 更大的情况下可以更快解决问题？</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/word-search" target="_blank" rel="noopener">https://leetcode-cn.com/problems/word-search</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;character[][]&#125; board</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; word</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> exist = <span class="function"><span class="keyword">function</span>(<span class="params">board, word</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;board.length;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;board[<span class="number">0</span>].length;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dfs(board,word,i,j,<span class="number">0</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">dfs</span>(<span class="params">board,word,i,j,k</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 递归的base case，处理边界和核心匹配逻辑</span></span><br><span class="line">        <span class="keyword">if</span>(i&lt;<span class="number">0</span>||j&lt;<span class="number">0</span>||i&gt;=board.length||j&gt;=board[<span class="number">0</span>].length||board[i][j]!==word[k])&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 成功匹配结尾 跳出</span></span><br><span class="line">        <span class="keyword">if</span>(k===word.length<span class="number">-1</span>)&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        board[i][j] =<span class="string">''</span> <span class="comment">// 标记下已经查找过的</span></span><br><span class="line">        <span class="comment">// !上下左右 每次进去 k+1==&gt;表示 走了多少步</span></span><br><span class="line">        <span class="keyword">let</span> res =dfs(board,word,i<span class="number">-1</span>,j,k+<span class="number">1</span>)||dfs(board,word,i+<span class="number">1</span>,j,k+<span class="number">1</span>)||dfs(board,word,i,j<span class="number">-1</span>,k+<span class="number">1</span>)||dfs(board,word,i,j+<span class="number">1</span>,k+<span class="number">1</span>)</span><br><span class="line">        <span class="comment">// 每批递归结束后 还原word</span></span><br><span class="line">        board[i][j]=word[k]</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-22.括号生成</title>
      <link href="/2022/01/22/leetcode-22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/"/>
      <url>/2022/01/22/leetcode-22.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-22-括号生成"><a href="#leetcode-22-括号生成" class="headerlink" title="leetcode-22.括号生成"></a>leetcode-22.括号生成</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>数字 n 代表生成括号的对数，请你设计一个函数，用于能够生成所有可能的并且 有效的 括号组合。</p><p>示例 1：</p><p>输入：n = 3<br>输出：[“((()))”,”(()())”,”(())()”,”()(())”,”()()()”]<br>示例 2：</p><p>输入：n = 1<br>输出：[“()”]</p><p>提示：</p><p>1 &lt;= n &lt;= 8</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/generate-parentheses" target="_blank" rel="noopener">https://leetcode-cn.com/problems/generate-parentheses</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;string[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 方法1 回溯递归</span></span><br><span class="line"><span class="keyword">var</span> generateParenthesis = <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> res = [];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> dfs = <span class="function">(<span class="params">lRemain, rRemain, str</span>) =&gt;</span> &#123; <span class="comment">// 左右括号所剩的数量，str是当前构建的字符串</span></span><br><span class="line">    <span class="comment">// console.log(str)</span></span><br><span class="line">    <span class="keyword">if</span> (str.length == <span class="number">2</span> * n) &#123; <span class="comment">// 字符串构建完成</span></span><br><span class="line">      res.push(str);           <span class="comment">// 加入解集</span></span><br><span class="line">      <span class="keyword">return</span>;                  <span class="comment">// 结束当前递归分支</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (lRemain &gt; <span class="number">0</span>) &#123;         <span class="comment">// 只要左括号有剩，就可以选它，然后继续做选择（递归）</span></span><br><span class="line">      dfs(lRemain - <span class="number">1</span>, rRemain, str + <span class="string">"("</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (lRemain &lt; rRemain) &#123;   <span class="comment">// 右括号比左括号剩的多，才能选右括号</span></span><br><span class="line">      dfs(lRemain, rRemain - <span class="number">1</span>, str + <span class="string">")"</span>); <span class="comment">// 然后继续做选择（递归）</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  dfs(n, n, <span class="string">""</span>); <span class="comment">// 递归的入口，剩余数量都是n，初始字符串是空串</span></span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;string[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//  方法2 动态规划</span></span><br><span class="line"><span class="comment">// dp[n] = (dp[p]) + dp[q] </span></span><br><span class="line"><span class="comment">// p+q+1=n</span></span><br><span class="line"><span class="keyword">var</span> generateParenthesis = <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> data = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">  data.set(<span class="number">0</span>, [<span class="string">''</span>]);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt;= i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">      <span class="keyword">let</span> center = data.get(j);</span><br><span class="line">      <span class="keyword">let</span> right = data.get(i - <span class="number">1</span> - j);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; center.length; k++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> t = <span class="number">0</span>; t &lt; right.length; t++) &#123;</span><br><span class="line">          result.push(<span class="string">`(<span class="subst">$&#123;center[k]&#125;</span>)<span class="subst">$&#123;right[t]&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    data.set(i, result);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> data.get(n);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-62.不同路径</title>
      <link href="/2022/01/21/leetcode-62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/"/>
      <url>/2022/01/21/leetcode-62.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-62-不同路径"><a href="#leetcode-62-不同路径" class="headerlink" title="leetcode-62.不同路径"></a>leetcode-62.不同路径</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。</p><p>机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。</p><p>问总共有多少条不同的路径？</p><p>示例 1：</p><p>输入：m = 3, n = 7<br>输出：28<br>示例 2：</p><p>输入：m = 3, n = 2<br>输出：3<br>解释：<br>从左上角开始，总共有 3 条路径可以到达右下角。</p><ol><li>向右 -&gt; 向下 -&gt; 向下</li><li>向下 -&gt; 向下 -&gt; 向右</li><li>向下 -&gt; 向右 -&gt; 向下<br>示例 3：</li></ol><p>输入：m = 7, n = 3<br>输出：28<br>示例 4：</p><p>输入：m = 3, n = 3<br>输出：6</p><p>提示：</p><p>1 &lt;= m, n &lt;= 100<br>题目数据保证答案小于等于 2 * 109</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/unique-paths" target="_blank" rel="noopener">https://leetcode-cn.com/problems/unique-paths</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法1 画图法 二维矩阵 【数学分析】</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2 动态规划</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; m</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> uniquePaths = <span class="function"><span class="keyword">function</span>(<span class="params">m, n</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 确定dp数组以及下标含义；</span></span><br><span class="line">    <span class="keyword">let</span> dp = <span class="keyword">new</span> <span class="built_in">Array</span>(m).fill(<span class="number">0</span>).map(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Array</span>(n).fill(<span class="number">0</span>))</span><br><span class="line">    <span class="comment">// 确定递推公式；</span></span><br><span class="line">    <span class="comment">// dp[i][j] = dp[i-1][j] + dp[i][j-1]</span></span><br><span class="line">    <span class="comment">// dp初始化；</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        dp[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">        dp[<span class="number">0</span>][j] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 确定遍历的顺序；</span></span><br><span class="line">    <span class="comment">// 举例推导dp数组；</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            dp[i][j] = dp[i<span class="number">-1</span>][j] + dp[i][j<span class="number">-1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[m<span class="number">-1</span>][n<span class="number">-1</span>]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1.两数之和</title>
      <link href="/2022/01/20/leetcode-1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2022/01/20/leetcode-1.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-1-两数之和"><a href="#leetcode-1-两数之和" class="headerlink" title="leetcode-1. 两数之和"></a>leetcode-1. 两数之和</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><p>你可以按任意顺序返回答案。</p><p>示例 1：</p><p>输入：nums = [2,7,11,15], target = 9<br>输出：[0,1]<br>解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。<br>示例 2：</p><p>输入：nums = [3,2,4], target = 6<br>输出：[1,2]<br>示例 3：</p><p>输入：nums = [3,3], target = 6<br>输出：[0,1]</p><p>提示：</p><p>2 &lt;= nums.length &lt;= 104<br>-109 &lt;= nums[i] &lt;= 109<br>-109 &lt;= target &lt;= 109<br>只会存在一个有效答案<br>进阶：你可以想出一个时间复杂度小于 O(n2) 的算法吗？</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/two-sum" target="_blank" rel="noopener">https://leetcode-cn.com/problems/two-sum</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; target</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//  方法一</span></span><br><span class="line"><span class="keyword">var</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">let</span> other = target - nums[i];</span><br><span class="line">        <span class="keyword">let</span> index2 = nums.indexOf(other)</span><br><span class="line">        <span class="comment">// console.log(i, index2)</span></span><br><span class="line">        <span class="keyword">if</span> (index2 === <span class="number">-1</span> || i === index2) &#123;</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [i, index2]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; target</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//  方法2 哈希</span></span><br><span class="line"><span class="keyword">var</span> twoSum = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>, len = nums.length; i &lt; len; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(map.has(target - nums[i]))&#123;</span><br><span class="line">            <span class="keyword">return</span> [i, map.get(target - nums[i])];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            map.set(nums[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题01.04.回文排列</title>
      <link href="/2022/01/19/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9801-04-%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97/"/>
      <url>/2022/01/19/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9801-04-%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-面试题01-04-回文排列"><a href="#leetcode-面试题01-04-回文排列" class="headerlink" title="leetcode-面试题01.04.回文排列"></a>leetcode-面试题01.04.回文排列</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个字符串，编写一个函数判定其是否为某个回文串的排列之一。</p><p>回文串是指正反两个方向都一样的单词或短语。排列是指字母的重新排列。</p><p>回文串不一定是字典当中的单词。</p><p>示例1：</p><p>输入：”tactcoa”<br>输出：true（排列有”tacocat”、”atcocta”，等等）</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/palindrome-permutation-lcci" target="_blank" rel="noopener">https://leetcode-cn.com/problems/palindrome-permutation-lcci</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解法1 两个数组</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; s</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> canPermutePalindrome = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> arr1 = [], arr2 = [];</span><br><span class="line">    <span class="keyword">let</span> arr = s.split(<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr1.indexOf(arr[i]) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            arr1.push(arr[i])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr1.splice(arr1.indexOf(arr[i]), <span class="number">1</span>)</span><br><span class="line">            arr2.push(arr[i])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> arr1.length === <span class="number">1</span> || arr1.length === <span class="number">0</span> &amp;&amp; arr2.length !== <span class="number">0</span></span><br><span class="line">   </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="解2"><a href="#解2" class="headerlink" title="解2"></a>解2</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解法2 哈希</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; s</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> canPermutePalindrome = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> obj = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s.length; i++)&#123;</span><br><span class="line">        <span class="keyword">let</span> val = s[i]</span><br><span class="line">        <span class="keyword">if</span>(obj[val])&#123;</span><br><span class="line">        <span class="keyword">delete</span> obj[val]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        obj[val]=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.keys(obj).length &lt;= <span class="number">1</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-20.有效的括号</title>
      <link href="/2022/01/18/leetcode-20-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/"/>
      <url>/2022/01/18/leetcode-20-%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-20-有效的括号"><a href="#leetcode-20-有效的括号" class="headerlink" title="leetcode-20.有效的括号"></a>leetcode-20.有效的括号</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个只包括 ‘(‘，’)’，’{‘，’}’，’[‘，’]’ 的字符串 s ，判断字符串是否有效。</p><p>有效字符串需满足：</p><p>左括号必须用相同类型的右括号闭合。<br>左括号必须以正确的顺序闭合。</p><p>示例 1：</p><p>输入：s = “()”<br>输出：true<br>示例 2：</p><p>输入：s = “()[]{}”<br>输出：true<br>示例 3：</p><p>输入：s = “(]”<br>输出：false<br>示例 4：</p><p>输入：s = “([)]”<br>输出：false<br>示例 5：</p><p>输入：s = “{[]}”<br>输出：true</p><p>提示：</p><p>1 &lt;= s.length &lt;= 104<br>s 仅由括号 ‘()[]{}’ 组成</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/valid-parentheses" target="_blank" rel="noopener">https://leetcode-cn.com/problems/valid-parentheses</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; s</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isValid = <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line"><span class="comment">// 解法一</span></span><br><span class="line">    <span class="keyword">let</span> stack = [], length = s.length;</span><br><span class="line">    <span class="keyword">if</span>(length % <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> s)&#123;</span><br><span class="line">        <span class="keyword">switch</span>(item)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"&#123;"</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"["</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"("</span>:</span><br><span class="line">                stack.push(item);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"&#125;"</span>:</span><br><span class="line">                <span class="keyword">if</span>(stack.pop() !== <span class="string">"&#123;"</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"]"</span>:</span><br><span class="line">                <span class="keyword">if</span>(stack.pop() !== <span class="string">"["</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">")"</span>:</span><br><span class="line">                <span class="keyword">if</span>(stack.pop() !== <span class="string">"("</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !stack.length;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// // 解法二</span></span><br><span class="line"><span class="comment">// var isValid = function(s) &#123;</span></span><br><span class="line"><span class="comment">//     s = s.split('');</span></span><br><span class="line"><span class="comment">//     let sl = s.length;</span></span><br><span class="line"><span class="comment">//     if (sl % 2) return false;</span></span><br><span class="line"><span class="comment">//     let map = new Map([[')', '('], [']', '['], ['&#125;', '&#123;']]);</span></span><br><span class="line"><span class="comment">//     let stack = [];</span></span><br><span class="line"><span class="comment">//     for(let i of s)&#123;</span></span><br><span class="line"><span class="comment">//         if (map.get(i)) &#123;</span></span><br><span class="line"><span class="comment">//             if (stack[stack.length - 1] !== map.get(i)) return false;</span></span><br><span class="line"><span class="comment">//             else stack.pop();</span></span><br><span class="line"><span class="comment">//         &#125; else &#123;</span></span><br><span class="line"><span class="comment">//             stack.push(i);</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     return !stack.length;</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-54.螺旋矩阵</title>
      <link href="/2022/01/17/leetcode-54-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/"/>
      <url>/2022/01/17/leetcode-54-%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-54-螺旋矩阵"><a href="#leetcode-54-螺旋矩阵" class="headerlink" title="leetcode-54.螺旋矩阵"></a>leetcode-54.螺旋矩阵</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个 m 行 n 列的矩阵 matrix ，请按照 顺时针螺旋顺序 ，返回矩阵中的所有元素。</p><p>示例 1：</p><p>输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]<br>输出：[1,2,3,6,9,8,7,4,5]<br>示例 2：</p><p>输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]<br>输出：[1,2,3,4,8,12,11,10,9,5,6,7]</p><p>提示：</p><p>m == matrix.length<br>n == matrix[i].length<br>1 &lt;= m, n &lt;= 10<br>-100 &lt;= matrix[i][j] &lt;= 100</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/spiral-matrix" target="_blank" rel="noopener">https://leetcode-cn.com/problems/spiral-matrix</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-for=&quot;(row, index) in matrix&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">  &lt;div v-for=&quot;(item, index) in row&quot; :key=&quot;index&quot; style=&quot;display: inline-block; width: 22px; border: 1px solid red;text-align: center&quot;&gt;</span><br><span class="line">    &#123;&#123;item&#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法一 直接遍历法</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[][]&#125; matrix</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> spiralOrder = <span class="function"><span class="keyword">function</span>(<span class="params">matrix</span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">if</span>(matrix==<span class="literal">null</span> || matrix.length===<span class="number">0</span>) <span class="keyword">return</span> result;</span><br><span class="line">    <span class="comment">/* 设置上下左右四个指针 */</span></span><br><span class="line">    <span class="keyword">let</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> right = matrix[<span class="number">0</span>].length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> top = <span class="number">0</span>; <span class="comment">// 第几行</span></span><br><span class="line">    <span class="keyword">let</span> bottom = matrix.length - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/* 矩阵中未处理元素总个数，长*宽，循环用 */</span></span><br><span class="line">    <span class="keyword">let</span> numEle = matrix.length * matrix[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">while</span> (numEle &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">/* 从(0, 0) 开始遍历，按题目顺序为 上 右 下 左。</span></span><br><span class="line"><span class="comment">          注意边界处理。每步操作之后要重新设置上面5个配置项</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = left; i &lt;= right &amp;&amp; numEle &gt;= <span class="number">1</span>; i++) &#123;</span><br><span class="line">        result.push(matrix[top][i]);</span><br><span class="line">        numEle--;</span><br><span class="line">      &#125;</span><br><span class="line">      top++;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = top; i &lt;= bottom &amp;&amp; numEle &gt;= <span class="number">1</span>; i++) &#123;</span><br><span class="line">        result.push(matrix[i][right]);</span><br><span class="line">        numEle--;</span><br><span class="line">      &#125;</span><br><span class="line">      right--;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = right; i &gt;= left &amp;&amp; numEle &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        result.push(matrix[bottom][i]);</span><br><span class="line">        numEle--;</span><br><span class="line">      &#125;</span><br><span class="line">      bottom--;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = bottom; i &gt;= top &amp;&amp; numEle &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">        result.push(matrix[i][left]);</span><br><span class="line">        numEle--;</span><br><span class="line">      &#125;</span><br><span class="line">      left++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-198.打家劫舍</title>
      <link href="/2022/01/16/leetcode-198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/"/>
      <url>/2022/01/16/leetcode-198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-198-打家劫舍"><a href="#leetcode-198-打家劫舍" class="headerlink" title="leetcode-198.打家劫舍"></a>leetcode-198.打家劫舍</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</p><p>给定一个代表每个房屋存放金额的非负整数数组，计算你 不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。</p><p>示例 1：</p><p>输入：[1,2,3,1]<br>输出：4<br>解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。<br>     偷窃到的最高金额 = 1 + 3 = 4 。<br>示例 2：</p><p>输入：[2,7,9,3,1]<br>输出：12<br>解释：偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。<br>     偷窃到的最高金额 = 2 + 9 + 1 = 12 。</p><p>提示：</p><p>1 &lt;= nums.length &lt;= 100<br>0 &lt;= nums[i] &lt;= 400</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/house-robber" target="_blank" rel="noopener">https://leetcode-cn.com/problems/house-robber</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment">     * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment">     * 2 7 9 3 1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="comment">// 解法一 递归 溢出</span></span><br><span class="line"><span class="comment">// rob(nums) &#123;</span></span><br><span class="line"><span class="comment">//   // console.log('nums ===', nums);</span></span><br><span class="line"><span class="comment">//   if (nums === null || nums.length === 0) &#123;</span></span><br><span class="line"><span class="comment">//     return 0</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   if (nums.length === 1) &#123;</span></span><br><span class="line"><span class="comment">//     return nums[0]</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   if (nums.length === 2) &#123;</span></span><br><span class="line"><span class="comment">//     return Math.max(nums[0], nums[1])</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   let num1 = [...nums];</span></span><br><span class="line"><span class="comment">//   num1.splice(nums.length-2,2);</span></span><br><span class="line"><span class="comment">//   let num2 = [...nums];</span></span><br><span class="line"><span class="comment">//   num2.splice(nums.length-1,1);</span></span><br><span class="line"><span class="comment">//   let num3 = [...nums];</span></span><br><span class="line"><span class="comment">//   // console.log('num1 ===', num1);</span></span><br><span class="line"><span class="comment">//   // console.log('num2 ===', num2);</span></span><br><span class="line"><span class="comment">//   return Math.max(this.rob(num1) + num3[num3.length - 1], this.rob(num2))</span></span><br><span class="line"><span class="comment">// &#125;,</span></span><br><span class="line"><span class="comment">// 解法2 正确动态规划</span></span><br><span class="line">rob(nums) &#123;</span><br><span class="line">  <span class="comment">// console.log('rob开始');</span></span><br><span class="line">  <span class="comment">// console.log(nums);</span></span><br><span class="line">  <span class="keyword">const</span> len = nums.length</span><br><span class="line">  <span class="keyword">if</span> (len === <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> dp = <span class="keyword">new</span> <span class="built_in">Array</span>(len + <span class="number">1</span>)</span><br><span class="line">  dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  dp[<span class="number">1</span>] = nums[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">2</span>; i &lt;= len; i++) &#123;</span><br><span class="line">    dp[i] = <span class="built_in">Math</span>.max(dp[i - <span class="number">1</span>], dp[i - <span class="number">2</span>] + nums[i - <span class="number">1</span>])</span><br><span class="line">    <span class="comment">// console.log(`dp[$&#123;i&#125;]`,dp[i]);</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> dp[len]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-1688-比赛中的配对次数</title>
      <link href="/2022/01/15/leetcode-1688-%E6%AF%94%E8%B5%9B%E4%B8%AD%E7%9A%84%E9%85%8D%E5%AF%B9%E6%AC%A1%E6%95%B0/"/>
      <url>/2022/01/15/leetcode-1688-%E6%AF%94%E8%B5%9B%E4%B8%AD%E7%9A%84%E9%85%8D%E5%AF%B9%E6%AC%A1%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-1688-比赛中的配对次数"><a href="#leetcode-1688-比赛中的配对次数" class="headerlink" title="leetcode-1688-比赛中的配对次数"></a>leetcode-1688-比赛中的配对次数</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个整数 n ，表示比赛中的队伍数。比赛遵循一种独特的赛制：</p><p>如果当前队伍数是 偶数 ，那么每支队伍都会与另一支队伍配对。总共进行 n / 2 场比赛，且产生 n / 2 支队伍进入下一轮。<br>如果当前队伍数为 奇数 ，那么将会随机轮空并晋级一支队伍，其余的队伍配对。总共进行 (n - 1) / 2 场比赛，且产生 (n - 1) / 2 + 1 支队伍进入下一轮。<br>返回在比赛中进行的配对次数，直到决出获胜队伍为止。</p><p>示例 1：</p><p>输入：n = 7<br>输出：6<br>解释：比赛详情：</p><ul><li>第 1 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。</li><li>第 2 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。</li><li>第 3 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。<br>总配对次数 = 3 + 2 + 1 = 6<br>示例 2：</li></ul><p>输入：n = 14<br>输出：13<br>解释：比赛详情：</p><ul><li>第 1 轮：队伍数 = 14 ，配对次数 = 7 ，7 支队伍晋级。</li><li>第 2 轮：队伍数 = 7 ，配对次数 = 3 ，4 支队伍晋级。 </li><li>第 3 轮：队伍数 = 4 ，配对次数 = 2 ，2 支队伍晋级。</li><li>第 4 轮：队伍数 = 2 ，配对次数 = 1 ，决出 1 支获胜队伍。<br>总配对次数 = 7 + 3 + 2 + 1 = 13</li></ul><p>提示：</p><p>1 &lt;= n &lt;= 200</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/count-of-matches-in-tournament" target="_blank" rel="noopener">https://leetcode-cn.com/problems/count-of-matches-in-tournament</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法1 最简单的递归 性能很差 耗内存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> numberOfMatches = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 判断奇偶</span></span><br><span class="line">    <span class="comment">// 奇数</span></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> (n<span class="number">-1</span>)/<span class="number">2</span> + numberOfMatches(((n<span class="number">-1</span>)/<span class="number">2</span>) + <span class="number">1</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 偶数</span></span><br><span class="line">        <span class="keyword">return</span> n/<span class="number">2</span> + numberOfMatches(n/<span class="number">2</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>执行用时：48 ms, 在所有 JavaScript 提交中击败了100.00%的用户</p><p>内存消耗：40.9 MB, 在所有 JavaScript 提交中击败了5.26%的用户</p><p>通过测试用例：200 / 200</p><h2 id="解2"><a href="#解2" class="headerlink" title="解2"></a>解2</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法2 一次循环</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> numberOfMatches = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(n &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">            result += (n<span class="number">-1</span>)/<span class="number">2</span></span><br><span class="line">            n = (n<span class="number">-1</span>)/<span class="number">2</span> + <span class="number">1</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 偶数</span></span><br><span class="line">            result += n/<span class="number">2</span></span><br><span class="line">            n = n/<span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>执行用时：64 ms, 在所有 JavaScript 提交中击败了93.68%的用户</p><p>内存消耗：41.1 MB, 在所有 JavaScript 提交中击败了5.26%的用户</p><p>通过测试用例：200 / 200</p><h2 id="解3"><a href="#解3" class="headerlink" title="解3"></a>解3</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法3 动脑思考，比一次淘汰一支队伍，最后只剩一支队伍，所以一共要比n-1次</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; n</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> numberOfMatches = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n<span class="number">-1</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-33.搜索旋转排序数组</title>
      <link href="/2022/01/14/leetcode-33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
      <url>/2022/01/14/leetcode-33.%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-33-搜索旋转排序数组"><a href="#leetcode-33-搜索旋转排序数组" class="headerlink" title="leetcode-33.搜索旋转排序数组"></a>leetcode-33.搜索旋转排序数组</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>整数数组 nums 按升序排列，数组中的值 互不相同 。</p><p>在传递给函数之前，nums 在预先未知的某个下标 k（0 &lt;= k &lt; nums.length）上进行了 旋转，使数组变为 [nums[k], nums[k+1], …, nums[n-1], nums[0], nums[1], …, nums[k-1]]（下标 从 0 开始 计数）。例如， [0,1,2,4,5,6,7] 在下标 3 处经旋转后可能变为 [4,5,6,7,0,1,2] 。</p><p>给你 旋转后 的数组 nums 和一个整数 target ，如果 nums 中存在这个目标值 target ，则返回它的下标，否则返回 -1 。</p><p>示例 1：</p><p>输入：nums = [4,5,6,7,0,1,2], target = 0<br>输出：4<br>示例 2：</p><p>输入：nums = [4,5,6,7,0,1,2], target = 3<br>输出：-1<br>示例 3：</p><p>输入：nums = [1], target = 0<br>输出：-1</p><p>提示：</p><p>1 &lt;= nums.length &lt;= 5000<br>-10^4 &lt;= nums[i] &lt;= 10^4<br>nums 中的每个值都 独一无二<br>题目数据保证 nums 在预先未知的某个下标上进行了旋转<br>-10^4 &lt;= target &lt;= 10^4</p><p>进阶：你可以设计一个时间复杂度为 O(log n) 的解决方案吗？</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/search-in-rotated-sorted-array" target="_blank" rel="noopener">https://leetcode-cn.com/problems/search-in-rotated-sorted-array</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1"><a href="#解1" class="headerlink" title="解1"></a>解1</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @param &#123;number&#125; target</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> search = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> nums.indexOf(target)</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> search = <span class="function"><span class="keyword">function</span>(<span class="params">nums, target</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// console.log(nums, target);</span></span><br><span class="line">  <span class="keyword">if</span> (!nums.length) <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">  <span class="keyword">let</span> [left, right] = [<span class="number">0</span>, nums.length - <span class="number">1</span>];</span><br><span class="line">  <span class="keyword">let</span> mid</span><br><span class="line">  <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">    </span><br><span class="line">    mid = <span class="built_in">Math</span>.floor((left+right) / <span class="number">2</span>)</span><br><span class="line">    <span class="comment">// console.log(left, mid, right, `nums[mid]=$&#123;nums[mid]&#125;`, `target=$&#123;target&#125;`);</span></span><br><span class="line">    <span class="keyword">if</span> (nums[mid] === target) &#123;</span><br><span class="line">        <span class="keyword">return</span> mid</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (nums[mid] &gt;= nums[left]) &#123;</span><br><span class="line">      <span class="keyword">if</span> (target &gt;= nums[left] &amp;&amp; target &lt; nums[mid]) &#123;</span><br><span class="line">          right = mid - <span class="number">1</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          left = mid + <span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (target &gt; nums[mid] &amp;&amp; target &lt;= nums[right]) &#123;</span><br><span class="line">          left = mid + <span class="number">1</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          right = mid - <span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(search([4,5,6,7,0,1,2], 0));</span></span><br><span class="line"><span class="comment">// console.log(search([5,6,7,0,1,2,3], 0));</span></span><br><span class="line"><span class="built_in">console</span>.log(search([<span class="number">6</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 普通二分查找</span></span><br><span class="line"><span class="comment">// var search = function(nums, target) &#123;</span></span><br><span class="line"><span class="comment">//   console.log(nums, target);</span></span><br><span class="line"><span class="comment">//   if (!nums.length) return -1</span></span><br><span class="line"><span class="comment">//   let [left, right] = [0, nums.length - 1];</span></span><br><span class="line"><span class="comment">//   let mid</span></span><br><span class="line"><span class="comment">//   while (left &lt;= right) &#123;</span></span><br><span class="line"><span class="comment">//     mid = Math.floor((left+right) / 2)</span></span><br><span class="line"><span class="comment">//     // console.log(left, mid, right, `nums[mid]=$&#123;nums[mid]&#125;`, `target=$&#123;target&#125;`);</span></span><br><span class="line"><span class="comment">//     if (nums[mid] === target) &#123;</span></span><br><span class="line"><span class="comment">//         return mid</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     if (nums[mid] &lt; target) &#123;</span></span><br><span class="line"><span class="comment">//         left = mid + 1</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     if (nums[mid] &gt; target) &#123;</span></span><br><span class="line"><span class="comment">//         right = mid - 1</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">//   return -1</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-912.排序数组</title>
      <link href="/2022/01/13/leetcode-912.%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
      <url>/2022/01/13/leetcode-912.%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="leetcode-912-排序数组"><a href="#leetcode-912-排序数组" class="headerlink" title="leetcode-912.排序数组"></a>leetcode-912.排序数组</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给你一个整数数组 nums，请你将该数组升序排列。</p><p>示例 1：</p><p>输入：nums = [5,2,3,1]<br>输出：[1,2,3,5]<br>示例 2：</p><p>输入：nums = [5,1,1,2,0,0]<br>输出：[0,0,1,1,2,5]</p><p>提示：</p><p>1 &lt;= nums.length &lt;= 5 <em> 104<br>-5 </em> 104 &lt;= nums[i] &lt;= 5 * 104</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/sort-an-array" target="_blank" rel="noopener">https://leetcode-cn.com/problems/sort-an-array</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解1-快速排序"><a href="#解1-快速排序" class="headerlink" title="解1 快速排序"></a>解1 快速排序</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> sortArray = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 分出的数组中只有一个元素时结束递归</span></span><br><span class="line">    <span class="keyword">if</span> (nums.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> nums;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 中间基准值的index</span></span><br><span class="line">    <span class="keyword">let</span> pivotIndex = <span class="built_in">Math</span>.floor(nums.length / <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 基准值</span></span><br><span class="line">    <span class="keyword">let</span> pivot = nums.splice(pivotIndex, <span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// console.log(pivot);</span></span><br><span class="line">    <span class="keyword">let</span> left = [];</span><br><span class="line">    <span class="keyword">let</span> right = [];</span><br><span class="line">    <span class="comment">// 小的放左边，大的放右边</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[i] &lt; pivot) &#123;</span><br><span class="line">            left.push(nums[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            right.push(nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 递归 合起来</span></span><br><span class="line">    <span class="keyword">return</span> sortArray(left).concat([pivot], sortArray(right));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-516.最长回文子序列</title>
      <link href="/2021/08/19/leetcode-516-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
      <url>/2021/08/19/leetcode-516-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<p>/*</p><p>此内容无用</p><p>为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字</p><p>*/</p><ul><li><p><a href="https://leetcode-cn.com/problems/longest-palindromic-subsequence/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/longest-palindromic-subsequence/</a></p></li><li><p>动态规划 - 二位数组的数据结构</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">judge(s) &#123;</span><br><span class="line">  <span class="keyword">const</span> n = s.length;</span><br><span class="line">  <span class="keyword">const</span> dp = <span class="keyword">new</span> <span class="built_in">Array</span>(n).fill(<span class="number">0</span>).map(<span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">new</span> <span class="built_in">Array</span>(n).fill(<span class="number">0</span>));</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`外层i=<span class="subst">$&#123;i&#125;</span>`</span>);</span><br><span class="line">    dp[i][i] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> c1 = s[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">      <span class="keyword">const</span> c2 = s[j];</span><br><span class="line">      <span class="keyword">if</span> (c1 === c2) &#123;</span><br><span class="line">        dp[i][j] = dp[i + <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">2</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        dp[i][j] = <span class="built_in">Math</span>.max(dp[i + <span class="number">1</span>][j], dp[i][j - <span class="number">1</span>]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">`i=<span class="subst">$&#123;i&#125;</span>, j=<span class="subst">$&#123;j&#125;</span>, c1=<span class="subst">$&#123;c1&#125;</span>, c2=<span class="subst">$&#123;c2&#125;</span>`</span>, <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(dp)));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> dp[<span class="number">0</span>][n - <span class="number">1</span>];</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id><a href="#" class="headerlink" title=" "></a> </h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-413.等差数列划分</title>
      <link href="/2021/08/19/leetcode-413-%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86/"/>
      <url>/2021/08/19/leetcode-413-%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86/</url>
      
        <content type="html"><![CDATA[<p>/*</p><p>此内容无用</p><p>为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字为了不出bug的占位文字</p><p>*/</p><ul><li><p><a href="https://leetcode-cn.com/problems/arithmetic-slices/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/arithmetic-slices/</a></p></li><li><p>动态规划解法</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;number[]&#125; nums</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> numberOfArithmeticSlices = <span class="function"><span class="keyword">function</span>(<span class="params">nums</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>(nums.length).fill(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">let</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[i + <span class="number">1</span>] - nums[i] === nums[i] - nums[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            array[i + <span class="number">1</span>] = array[i] + <span class="number">1</span>;</span><br><span class="line">            sum += array[i + <span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows窗口在屏幕外小技巧</title>
      <link href="/2021/08/08/windows%E7%AA%97%E5%8F%A3%E5%9C%A8%E5%B1%8F%E5%B9%95%E5%A4%96%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2021/08/08/windows%E7%AA%97%E5%8F%A3%E5%9C%A8%E5%B1%8F%E5%B9%95%E5%A4%96%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="切换到当前窗口"><a href="#切换到当前窗口" class="headerlink" title="切换到当前窗口"></a>切换到当前窗口</h1><p>在使用多个屏幕的时候，插拔显示器链接线，屏幕会切来切去的，有的时候有的窗口就切没了，打开之后显示器上不显示。后来发现是跑到了屏幕外面。</p><p>或者手欠瞎拖也可能拖到屏幕外面。</p><p>（常见于Windows，Mac印象中好像没出过这问题</p><p>按照以下操作即可</p><ol start="0"><li><p>打开窗口进程</p></li><li><p>alt+空格</p></li><li><p>M</p></li><li><p>键盘上下左右按键</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript双等号==到底是怎么工作的---关于【抽象相等比较算法】</title>
      <link href="/2021/08/08/JavaScript%E5%8F%8C%E7%AD%89%E5%8F%B7%E5%88%B0%E5%BA%95%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84_%E5%85%B3%E4%BA%8E%E3%80%90%E6%8A%BD%E8%B1%A1%E7%9B%B8%E7%AD%89%E6%AF%94%E8%BE%83%E7%AE%97%E6%B3%95%E3%80%91/"/>
      <url>/2021/08/08/JavaScript%E5%8F%8C%E7%AD%89%E5%8F%B7%E5%88%B0%E5%BA%95%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84_%E5%85%B3%E4%BA%8E%E3%80%90%E6%8A%BD%E8%B1%A1%E7%9B%B8%E7%AD%89%E6%AF%94%E8%BE%83%E7%AE%97%E6%B3%95%E3%80%91/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript双等号-到底是怎么工作的—关于【抽象相等比较算法】"><a href="#JavaScript双等号-到底是怎么工作的—关于【抽象相等比较算法】" class="headerlink" title="JavaScript双等号==到底是怎么工作的—关于【抽象相等比较算法】"></a>JavaScript双等号==到底是怎么工作的—关于【抽象相等比较算法】</h1><p>前置知识（没有也可以）</p><ul><li>数据类型与引用</li><li>数组,函数与对象是什么</li><li>内存</li></ul><p>正文</p><p>双等号==使用的抽象相等比较算法如下.PS:github可能显示不出图片，可以顺着链接看到，懒得弄cdn了- -</p><ul><li>最早的ES5.1标准</li></ul><p>​                 <img src="https://docimg1.docs.qq.com/image/sMQkdAD9WyI2yJkBPIW0TQ?w=1816&amp;h=1394" alt="img">        </p><ul><li>目前的最新标准-2021年08月05日</li></ul><p>​                 <img src="https://docimg9.docs.qq.com/image/_U3Fx0f7vdfylc8R6sPOVg?w=2162&amp;h=1376" alt="img">        </p><p>以下为个人实现，可能有出入，且作为一种探索。</p><ul><li>ES5</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> value1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> value2 = <span class="string">'1'</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName(<span class="string">'abstractCompare5'</span>)[<span class="number">0</span>]</span><br><span class="line">    .addEventListener(<span class="string">'click'</span>, () =&gt; &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'结果:'</span>, <span class="keyword">this</span>.abstractCompare5(value1, value2));</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// eslint-disable-next-line no-unused-vars</span></span><br><span class="line">toPrimitive(input, type = <span class="string">'number'</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> primitiveTypeArray = [</span><br><span class="line">    <span class="string">'[object Null]'</span>,</span><br><span class="line">    <span class="string">'[object Undefined]'</span>,</span><br><span class="line">    <span class="string">'[object Boolean]'</span>,</span><br><span class="line">    <span class="string">'[object String]'</span>,</span><br><span class="line">    <span class="string">'[object Number]'</span>,</span><br><span class="line">  ]</span><br><span class="line">  <span class="comment">// type default is number</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(input) === <span class="string">'[object Date]'</span>) &#123;</span><br><span class="line">    type = <span class="string">'string'</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">'number'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (input.valueOf) &#123;</span><br><span class="line">      <span class="keyword">if</span> (primitiveTypeArray.includes(<span class="built_in">Object</span>.prototype.toString.call(input.valueOf()))) &#123;</span><br><span class="line">        <span class="keyword">return</span> input.valueOf()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (input.toString) &#123;</span><br><span class="line">      <span class="keyword">if</span> (primitiveTypeArray.includes(<span class="built_in">Object</span>.prototype.toString.call(input.toString()))) &#123;</span><br><span class="line">        <span class="keyword">return</span> input.toString()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log('这里应当抛出异常');</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (type === <span class="string">'string'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (input.toString) &#123;</span><br><span class="line">      <span class="keyword">if</span> (primitiveTypeArray.includes(<span class="built_in">Object</span>.prototype.toString.call(input.toString()))) &#123;</span><br><span class="line">        <span class="keyword">return</span> input.toString()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (input.valueOf) &#123;</span><br><span class="line">      <span class="keyword">if</span> (primitiveTypeArray.includes(<span class="built_in">Object</span>.prototype.toString.call(input.valueOf()))) &#123;</span><br><span class="line">        <span class="keyword">return</span> input.valueOf()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log('这里应当抛出异常');</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// console.log('这里应当抛出异常');</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;,</span><br><span class="line">abstractCompare5(x, y) &#123;</span><br><span class="line">  <span class="comment">// 1.</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="built_in">Object</span>.prototype.toString.call(y)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object Undefined]'</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object Null]'</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object Number]'</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">isNaN</span>(x)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">isNaN</span>(x)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 这里如何判断数值相等可能要修改</span></span><br><span class="line">      <span class="keyword">if</span> (x === y) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// eslint-disable-next-line no-compare-neg-zero</span></span><br><span class="line">      <span class="keyword">if</span> (x === +<span class="number">0</span> &amp;&amp; y === <span class="number">-0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// eslint-disable-next-line no-compare-neg-zero</span></span><br><span class="line">      <span class="keyword">if</span> (x === <span class="number">-0</span> &amp;&amp; y === +<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object String]'</span>) &#123;</span><br><span class="line">      <span class="comment">// 这里如何判断字符串长度和字符位置相等可能要修改</span></span><br><span class="line">      <span class="keyword">if</span> (x === y) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object Boolean]'</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (x === <span class="literal">true</span> &amp;&amp; y === <span class="literal">true</span> || x === <span class="literal">false</span> &amp;&amp; y === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// *******这里 无法获得地址，故而无法判断是否为相同引用，等待解决</span></span><br><span class="line">    <span class="keyword">return</span> x === y</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 2.</span></span><br><span class="line">  <span class="keyword">if</span> (x === <span class="literal">null</span> &amp;&amp; y === <span class="literal">undefined</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 3.</span></span><br><span class="line">  <span class="keyword">if</span> (x === <span class="literal">undefined</span> &amp;&amp; y === <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 4.</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object Number]'</span> &amp;&amp;</span><br><span class="line">      <span class="built_in">Object</span>.prototype.toString.call(y) === <span class="string">'[object String]'</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.abstractCompare5(x, <span class="built_in">Number</span>(y))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 5.</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object String]'</span> &amp;&amp;</span><br><span class="line">      <span class="built_in">Object</span>.prototype.toString.call(y) === <span class="string">'[object Number]'</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.abstractCompare5(<span class="built_in">Number</span>(x), y)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 6.</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object Boolean]'</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.abstractCompare5(<span class="built_in">Number</span>(x), y)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 7.</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">Object</span>.prototype.toString.call(y) === <span class="string">'[object Boolean]'</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.abstractCompare5(x, <span class="built_in">Number</span>(y))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 8.</span></span><br><span class="line">  <span class="keyword">if</span> ((<span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object String]'</span> ||</span><br><span class="line">      <span class="built_in">Object</span>.prototype.toString.call(x) === <span class="string">'[object Number]'</span>) &amp;&amp;</span><br><span class="line">      <span class="keyword">typeof</span> y === <span class="string">'object'</span> &amp;&amp; y !== <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="comment">// ToPrimitive第二参数默认为number</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.abstractCompare5(x, <span class="keyword">this</span>.toPrimitive(y))</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 9.</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> x === <span class="string">'object'</span> &amp;&amp; x !== <span class="literal">null</span> &amp;&amp;</span><br><span class="line">      (<span class="built_in">Object</span>.prototype.toString.call(y) === <span class="string">'[object String]'</span> ||</span><br><span class="line">       <span class="built_in">Object</span>.prototype.toString.call(y) === <span class="string">'[object Number]'</span>)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="comment">// ToPrimitive第二参数默认为number</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.abstractCompare5(<span class="keyword">this</span>.toPrimitive(x), y)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 10.</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>ES2021</li></ul><p>参考链接</p><p>ES5 规范 11.9.3 节 — <a href="https://262.ecma-international.org/5.1/#sec-11.9.3" target="_blank" rel="noopener">https://262.ecma-international.org/5.1/#sec-11.9.3</a></p><p><a href="http://es5.github.io/" target="_blank" rel="noopener">http://es5.github.io/</a> </p><p><a href="https://262.ecma-international.org/5.1/#sec-9" target="_blank" rel="noopener">https://262.ecma-international.org/5.1/#sec-9</a>  转换相关</p><p><a href="https://262.ecma-international.org/" target="_blank" rel="noopener">https://262.ecma-international.org/</a>  最新规范ES2021</p><p><a href="https://chromium.googlesource.com/v8/v8/+/refs/heads/main/src" target="_blank" rel="noopener">https://chromium.googlesource.com/v8/v8/+/refs/heads/main/src</a> v8源码</p><p><a href="https://gitee.com/xiaofengwuy/v8/tree/master/src" target="_blank" rel="noopener">https://gitee.com/xiaofengwuy/v8/tree/master/src</a> v8</p><p><a href="https://dorey.github.io/JavaScript-Equality-Table/" target="_blank" rel="noopener">https://dorey.github.io/JavaScript-Equality-Table/</a> 测试集</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>输入框按下键盘的事件</title>
      <link href="/2021/05/12/%E8%BE%93%E5%85%A5%E6%A1%86%E6%8C%89%E4%B8%8B%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/"/>
      <url>/2021/05/12/%E8%BE%93%E5%85%A5%E6%A1%86%E6%8C%89%E4%B8%8B%E9%94%AE%E7%9B%98%E7%9A%84%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>一个经常遇到的场景，输入框按下回车</p><p>一个经常遇到的场景，输入框按下回车</p><p>一个经常遇到的场景，输入框按下回车</p><p>一个经常遇到的场景，输入框按下回车</p><p>一个经常遇到的场景，输入框按下回车</p><p>那么按下回车之后会发生什么，有三个事件，按以下顺序触发，可自行尝试</p><ul><li>keydown </li><li>keypress</li><li>keyup </li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue </span></span><br><span class="line"><span class="comment">// 仅尝试了chrome环境</span></span><br><span class="line"><span class="comment">// @keydown.native="handleKeyDown($event)"</span></span><br><span class="line"><span class="comment">// @keypress.native="handleKeyDown($event)"</span></span><br><span class="line"><span class="comment">// @keyup.native="handleKeyDown($event)"</span></span><br><span class="line"><span class="comment">// 这个需求是用户想ctrl+enter是换行，直接按enter是发送</span></span><br><span class="line"><span class="comment">// 关于判断的方法，最新的推荐写法是直接判断key，都写上的原因是增加兼容性</span></span><br><span class="line"><span class="comment">// 还可以增加防抖</span></span><br><span class="line"></span><br><span class="line">handleKeyDown (event) &#123;</span><br><span class="line">  <span class="keyword">let</span> e = <span class="built_in">arguments</span>[<span class="number">0</span>]</span><br><span class="line">  <span class="comment">// console.log(e.key, e)</span></span><br><span class="line">  <span class="keyword">if</span> (e.key === <span class="string">'Enter'</span> || e.code === <span class="string">'Enter'</span> || e.keyCode === <span class="number">13</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (e.ctrlKey) &#123;</span><br><span class="line">      <span class="keyword">this</span>.textarea += <span class="string">'\n'</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// 点击了enter触发</span></span><br><span class="line">      event.preventDefault() <span class="comment">// 默认换行，阻止</span></span><br><span class="line">      <span class="keyword">this</span>.sendData()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>用keydown遇到一个坑，用户输入的时候会有中英文一起输入的时候。这种情况标准操作肯定是输入完中文，切换到英文输入法，再输入英文，再切换中文输入法，再循环。但是我们经常一直使用中文输入法，遇到英文就打出来再按回车，这种情况会出现将输入框中已经写好的中文发送出去，同时将英文写进输入框，不符合要求。</p><p>【解决方法】换成keypress即可</p><p>不同浏览器环境等待研究</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSON.stringify模拟实现的学习与研究</title>
      <link href="/2021/04/02/JSON-stringify%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B8%8E%E7%A0%94%E7%A9%B6/"/>
      <url>/2021/04/02/JSON-stringify%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%B8%8E%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<ul><li>JSON.stringify模拟实现的学习与研究</li><li>JSON.stringify模拟实现的学习与研究</li><li>JSON.stringify模拟实现的学习与研究</li></ul><p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5001771&auto=1&height=66"></iframe><br>模拟实现的JSON.stringify涉及到JavaScript的类型判断和递归知识，还有一些展示形式为什么会这样，比如是否有引号，单引号双引号<br>吃透这个方法感觉能有不错的帮助。这篇就打算彻底写清楚数据类型，表现形式以及为什么</p><p>关于JavaScript的数据类型，随着JavaScript的发展，数据类型不断增多，截止到2021年4月11日</p><p>分为基础数据类型和引用数据类型 ，大类只有以下7种</p><ul><li>基础数据类型（简单数据类型、原始数据类型）：数据存放于栈内存<ul><li>Undefined</li><li>Null</li><li>Boolean</li><li>Number</li><li>String</li><li>Symbol</li></ul></li></ul><ul><li><p>引用数据类型（复杂数据类型）：数据存放于堆内存</p><ul><li>Object</li><li>Date（Object）</li><li>RegExp（Object）</li><li>Array（Object）</li><li>Function（Object）</li><li>Map、WeakMap（Object）</li><li>Set、WeakSet（Object）</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Object.prototype.toString.call()方法</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">Object</span>.prototype.toString.call(<span class="literal">undefined</span>)); <span class="comment">// string</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="literal">undefined</span>) === <span class="string">'[object Undefined]'</span>); <span class="comment">// true</span></span><br><span class="line"><span class="comment">//基础数据类型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="literal">undefined</span>)); <span class="comment">// [object Undefined]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="literal">null</span>)); <span class="comment">// [object Null]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="literal">true</span>)); <span class="comment">// [object Boolean]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="number">123</span>));    <span class="comment">// [object Number]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="string">'123'</span>)) ;   <span class="comment">// [object String]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="built_in">Symbol</span>())) ;   <span class="comment">// [object String]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(BigInt(<span class="number">9007199254740991</span>))) ;   <span class="comment">// [object BigInt]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="number">9007199254740991</span>n)) ;   <span class="comment">// [object BigInt]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="number">1</span>n)) ;   <span class="comment">// [object BigInt]</span></span><br><span class="line"><span class="comment">//引用数据类型</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Object</span>())) ;   <span class="comment">// [object Object]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Date</span>())); <span class="comment">// [object Date]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">RegExp</span>())); <span class="comment">// [object RegExp]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>))); <span class="comment">// [object Array]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call([])); <span class="comment">// [object Array]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Function</span>())); <span class="comment">// [object Function]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Set</span>())); <span class="comment">// [object Set]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">WeakSet</span>())); <span class="comment">// [object WeakSet]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Map</span>())); <span class="comment">// [object Map]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">WeakMap</span>())); <span class="comment">// [object WeakMap]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.toString.call(<span class="keyword">new</span> <span class="built_in">Error</span>())); <span class="comment">// [object Error]</span></span><br></pre></td></tr></table></figure><p>一些重要说明 </p><ul><li>使用Object.prototype.toString.call()判断类型</li><li>typeof null === ‘object’ 的原因是null值表示一个空对象指针，有指针语义。（对他就是一个bug）</li><li><p>对象的属性可以是数值或字符串，数值会默认转换为字符串</p></li><li><p>未声明undeclared和未定义undefined不是一回事，在不同情况下需要注意一下，比如调用未声明的变量会报错，type of未声明的变量返回undefined</p></li><li>Infinity和-Infinity属于Number，NaN属于Number</li><li>Bigint</li><li>function属于Object类型，function是可调用的对象，具有内部属性[[Call]]</li><li>Array也属于Object，</li><li>json</li><li></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">easyJSONStringify</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> type = <span class="keyword">typeof</span> data;</span><br><span class="line">  <span class="keyword">if</span> (type !== <span class="string">'object'</span>) &#123; <span class="comment">// 基础数据类型</span></span><br><span class="line">    <span class="keyword">let</span> result = data;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Number</span>.isNaN(data) || data === <span class="literal">Infinity</span>) &#123;</span><br><span class="line">      result = <span class="string">'null'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">      type === <span class="string">'function'</span> ||</span><br><span class="line">      type === <span class="string">'undefined'</span> ||</span><br><span class="line">      type === <span class="string">'symbol'</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">'string'</span>) &#123;</span><br><span class="line">      result = <span class="string">'"'</span> + data + <span class="string">'"'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">String</span>(result);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123; <span class="comment">// type === 'object' 引用数据类型</span></span><br><span class="line">    <span class="keyword">if</span> (data === <span class="literal">null</span>) &#123; <span class="comment">// 考虑 typeof null === 'object'</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">'null'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.toJSON &amp;&amp; <span class="keyword">typeof</span> data.toJSON === <span class="string">'function'</span>) &#123; <span class="comment">// Date</span></span><br><span class="line">      <span class="keyword">return</span> easyJSONStringify(data.toJSON())</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(data)) &#123;</span><br><span class="line">      <span class="keyword">let</span> result = [];</span><br><span class="line">      data.forEach(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> typeItem = <span class="keyword">typeof</span> item;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">          typeItem === <span class="string">'function'</span> ||</span><br><span class="line">          typeItem === <span class="string">'undefined'</span> ||</span><br><span class="line">          typeItem === <span class="string">'symbol'</span></span><br><span class="line">        ) &#123;</span><br><span class="line">          result[index] =  <span class="string">'null'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          result[index] = easyJSONStringify(item);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> (<span class="string">`[<span class="subst">$&#123;result&#125;</span>]`</span>).replace(<span class="regexp">/'/g</span>, <span class="string">'\"'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// object</span></span><br><span class="line">      <span class="keyword">let</span> result = [];</span><br><span class="line">      <span class="built_in">Object</span>.keys(data).forEach(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        result.push(<span class="string">'"'</span> + item + <span class="string">'":'</span> + easyJSONStringify(data[item]));</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span> (<span class="string">`&#123;<span class="subst">$&#123;result&#125;</span>&#125;`</span>).replace(<span class="regexp">/'/g</span>, <span class="string">'\"'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> de = [<span class="number">1</span>, <span class="literal">undefined</span>, <span class="literal">NaN</span>, [<span class="number">1</span>, &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="string">"b"</span>: &#123;<span class="attr">c</span> : &#123;<span class="number">1</span>: <span class="number">1</span>, <span class="string">"1"</span>: <span class="string">'2'</span>&#125;&#125;&#125;], <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(de))    <span class="comment">//[1,null,null,[1,&#123;"a":1,"b":&#123;"c":&#123;"1":"2"&#125;&#125;&#125;],3]</span></span><br><span class="line"><span class="built_in">console</span>.log(easyJSONStringify(de)) <span class="comment">//[1,null,null,[1,&#123;"a":1,"b":&#123;"c":&#123;"1":"2"&#125;&#125;&#125;],3]</span></span><br></pre></td></tr></table></figure><p>遗留问题池</p><ul><li>如何解决{1: 1, “1”: ‘2’} 后面覆盖前面的问题</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>发现hexo博客框架melody的问题</title>
      <link href="/2021/04/02/%E5%8F%91%E7%8E%B0hexo%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6melody%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2021/04/02/%E5%8F%91%E7%8E%B0hexo%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6melody%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在摘要中不能出现代码框，要不然会出现移动端适配问题。（不换行）。要是有code就在每篇前面多写点吧！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>整理完毕！</title>
      <link href="/2021/03/31/%E6%95%B4%E7%90%86%E5%AE%8C%E6%AF%95%EF%BC%81/"/>
      <url>/2021/03/31/%E6%95%B4%E7%90%86%E5%AE%8C%E6%AF%95%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>本来在mac上都整理完了，由于改了环境和或者是别的什么原因（目前没查出来），又给搞炸了。<br>重新弄一下。以后这种消耗意志力的操作就Ban掉吧，老老实实一个平台发布。毕竟这台windows环境比较简单</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>重新拾起</title>
      <link href="/2021/03/30/2021%E5%B9%B403%E6%9C%8830%E6%97%A5%E9%87%8D%E6%96%B0%E6%8B%BE%E8%B5%B7/"/>
      <url>/2021/03/30/2021%E5%B9%B403%E6%9C%8830%E6%97%A5%E9%87%8D%E6%96%B0%E6%8B%BE%E8%B5%B7/</url>
      
        <content type="html"><![CDATA[<p>【文章链接】<br>之前那篇多终端同步有点小小的问题要修改一下。</p><ul><li>记录一下这个mac这次拾起遇到的问题<br>在外层博客模板项目拉取时遇到问题 git pull 失败，<br>报错GitHub: Permission denied (publickey). fatal: Could not read from remote repository blablabla<br>【原因】<br>【解决方法】<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for https protocol</span><br><span class="line">git remote set-url origin https://github.com/username/repository.git</span><br><span class="line">for ssh protocol</span><br><span class="line">git remote set-url origin git@github.com:username/repository.git</span><br></pre></td></tr></table></figure></li></ul><p>第二步又遇到问题<br>内层公开博客项目拉取失败。同样的报错<br>这回上面的不管用了。研究了一下是ssh key的问题，于是把本mac上的id_rsa.pub去博客项目github账号里new了一个ssh。就好了</p><p>下面进行下一步 更新博客操作。这篇文章就是测试文。</p><ul><li>测试失败<br>好了测试失败。实际结果出现了问题，虽然新的提交更新上去了，但是部署之后丢失了大量文章。直接去模板仓库看了一下发现仓库居然不是全的，这是怎么回事。</li></ul><p>虽然在19年确实重建了博客，但是之前的也做过迁移了。应该是迁移在另一台电脑做的，没有上传的问题。所以换个电脑再试试</p><p>好了现在来到了新电脑。<br>刚刚发生了惊悚事件！<br>本地新建了一个仓库直接push到线上  直接把git仓库覆盖了 ，令人窒息的操作，还好有备份<br>备份真的很重要，还有就是使用git push -f一定要谨慎，尤其是和别人合作的时候，我这个自己一个人维护的 还好</p><p>又遇到错误 部署的时候<br>FATAL Something’s wrong. Maybe you can find the solution here: <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">https://hexo.io/docs/troubleshooting.html</a><br>TypeError [ERR_INVALID_ARG_TYPE]: The “mode” argument must be integer. Received an instance of Object<br>【原因】是由于node版本过高导致<br>【解决】删除node14 下载node12<br>【想法】这有点不行，居然不能支持新版本 得想想办法</p><p>node版本切换到12，问题解决，重新上传这个新文件试试。<br>OK。成功了。至此一次重新拾起就做完了。<br>这次还比较顺利。多亏了多终端同步博客操作这篇文章记得好。要不不知还要花费多少时间。</p><p>这次准备做的事情<br>1.把这几年的旧博客梳理一下，删除一些没有必要的文章。比如一些类似于草稿或者测试之类的东西。<br>2.梳理博客的功能，之前由于没有想清楚导致造成了一些额外阻力。现在打算日记类还是记在另一个私人文档里。这里放一些技术产出、技术类思考、一些备忘代码和练习结果。<br>3.在独立页面多做技术尝试，把独立页面好好用起来</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>‘coolq机器人和流程自动化</title>
      <link href="/2020/04/13/%E2%80%98coolq%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%92%8C%E6%B5%81%E7%A8%8B%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
      <url>/2020/04/13/%E2%80%98coolq%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%92%8C%E6%B5%81%E7%A8%8B%E8%87%AA%E5%8A%A8%E5%8C%96/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第二本书《活着》</title>
      <link href="/2020/04/13/%E7%AC%AC%E4%BA%8C%E6%9C%AC%E4%B9%A6%E3%80%8A%E6%B4%BB%E7%9D%80%E3%80%8B/"/>
      <url>/2020/04/13/%E7%AC%AC%E4%BA%8C%E6%9C%AC%E4%B9%A6%E3%80%8A%E6%B4%BB%E7%9D%80%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p>只是很平淡的讲述了福贵多灾多难的一生，算是开始能够从文字中体会到一些当时的情景，有些灾难还是很可怕。</p>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDBAtlas</title>
      <link href="/2020/02/27/MongoDBAtlas/"/>
      <url>/2020/02/27/MongoDBAtlas/</url>
      
        <content type="html"><![CDATA[<ul><li>MongoDBAtlas</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>终于正式读完了人生的第一本书</title>
      <link href="/2020/02/27/%E7%BB%88%E4%BA%8E%E6%AD%A3%E5%BC%8F%E8%AF%BB%E5%AE%8C%E4%BA%86%E4%BA%BA%E7%94%9F%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9C%AC%E4%B9%A6/"/>
      <url>/2020/02/27/%E7%BB%88%E4%BA%8E%E6%AD%A3%E5%BC%8F%E8%AF%BB%E5%AE%8C%E4%BA%86%E4%BA%BA%E7%94%9F%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9C%AC%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p>终于读完了《乔布斯传》，用了……2年？</p><p>开始选下一本书。</p><p>想写点什么，但是又不会写。乔布斯是一个伟大的人，他创造了伟大的产品，改变了世界。他身上有种种优点，和种种缺点。他一生都在追随者自己内心的想法走，和种种偶然的成功不一样，他的成功，是一种必然。</p>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-94/144/145-二叉树的遍历</title>
      <link href="/2020/02/26/leetcode-94-144-145-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/"/>
      <url>/2020/02/26/leetcode-94-144-145-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://leetcode-cn.com/problems/binary-tree-preorder-traversal" target="_blank" rel="noopener">二叉树的前序遍历</a></li><li>解1.递归</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> preorderTraversal = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> root? [root.val, ...preorderTraversal(root.left), ...preorderTraversal(root.right)] : [];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>解2.迭代</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> preorderTraversal = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> stack = [];</span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">if</span> (root) &#123;</span><br><span class="line">        stack.push(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(stack.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> node = stack.pop()</span><br><span class="line">        result.push(node.val)</span><br><span class="line">        <span class="keyword">if</span> (node.right) &#123;</span><br><span class="line">        stack.push(node.right)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (node.left) &#123;</span><br><span class="line">        stack.push(node.left)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-inorder-traversal" target="_blank" rel="noopener">二叉树的中序遍历</a></li><li>解1.递归</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> inorderTraversal = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> root? [...inorderTraversal(root.left), root.val, ...inorderTraversal(root.right)] : [];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-postorder-traversal" target="_blank" rel="noopener">二叉树的后序遍历</a></li><li>解1.递归</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> postorderTraversal = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> root? [...postorderTraversal(root.left), ...postorderTraversal(root.right), root.val] : [];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>解2.前序遍历稍作修改</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;number[]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> postorderTraversal = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> stack = [];</span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">if</span> (root) &#123;</span><br><span class="line">        stack.push(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(stack.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> node = stack.pop()</span><br><span class="line">        result.push(node.val)</span><br><span class="line">        <span class="keyword">if</span> (node.left) &#123;</span><br><span class="line">        stack.push(node.left)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (node.right) &#123;</span><br><span class="line">        stack.push(node.right)</span><br><span class="line">        &#125;       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result.reverse()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题32-II-从上到下打印二叉树II</title>
      <link href="/2020/02/25/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9832-II-%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91II/"/>
      <url>/2020/02/25/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9832-II-%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91II/</url>
      
        <content type="html"><![CDATA[<p>由于摘要有bug 所以多写点字多写点字多写点字多写点字多写点字多写点字多写点字多写点字<br>由于摘要有bug 所以多写点字多写点字多写点字多写点字多写点字多写点字多写点字多写点字<br>由于摘要有bug 所以多写点字多写点字多写点字多写点字多写点字多写点字多写点字多写点字<br>由于摘要有bug 所以多写点字多写点字多写点字多写点字多写点字多写点字多写点字多写点字<br>由于摘要有bug 所以多写点字多写点字多写点字多写点字多写点字多写点字多写点字多写点字<br>由于摘要有bug 所以多写点字多写点字多写点字多写点字多写点字多写点字多写点字多写点字<br>由于摘要有bug 所以多写点字多写点字多写点字多写点字多写点字多写点字多写点字多写点字</p><ul><li><a href="https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof" target="_blank" rel="noopener">从上到下打印二叉树 II</a></li><li>解1。用另一题稍作修改<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Definition for a binary tree node.</span><br><span class="line"> * function TreeNode(val) &#123;</span><br><span class="line"> *     this.val = val;</span><br><span class="line"> *     this.left = this.right = null;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span><br><span class="line">/**</span><br><span class="line"> * @param &#123;TreeNode&#125; root</span><br><span class="line"> * @return &#123;number[][]&#125;</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">var levelOrder = function(root) &#123;</span><br><span class="line">    if (!root) &#123;</span><br><span class="line">        return [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    let result = [];</span><br><span class="line">    let row = 1;</span><br><span class="line">    let queue = [root];</span><br><span class="line">    while (queue.length) &#123;</span><br><span class="line">        let rowArr = [];</span><br><span class="line">        let length = queue.length</span><br><span class="line">        for (let i = 0; i &lt; length;i++) &#123;</span><br><span class="line">            let node = queue.shift();</span><br><span class="line">            if (row % 2 === 1) &#123;</span><br><span class="line">                rowArr.push(node.val);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                rowArr.push(node.val);</span><br><span class="line">            &#125;</span><br><span class="line">            if(node.left) queue.push(node.left);</span><br><span class="line">            if(node.right) queue.push(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">        result.push(rowArr);</span><br><span class="line">        row++</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题68-I二叉搜索树的最近公共祖先</title>
      <link href="/2020/02/24/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9868-I%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/"/>
      <url>/2020/02/24/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9868-I%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://leetcode-cn.com/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof/submissions/" target="_blank" rel="noopener">面试题68 - II. 二叉搜索树的最近公共祖先</a></li><li>二叉搜索树特性：若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值； 它的左、右子树也分别为二叉排序树。</li><li>解1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode(object):</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lowestCommonAncestor</span><span class="params">(self, root, p, q)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        :type root: TreeNode</span></span><br><span class="line"><span class="string">        :type p: TreeNode</span></span><br><span class="line"><span class="string">        :type q: TreeNode</span></span><br><span class="line"><span class="string">        :rtype: TreeNode</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">if</span> root.val &gt; p.val <span class="keyword">and</span> root.val &gt; q.val:</span><br><span class="line">            <span class="keyword">return</span> self.lowestCommonAncestor(root.left, p, q)</span><br><span class="line">        <span class="keyword">elif</span> root.val &lt; p.val <span class="keyword">and</span> root.val &lt; q.val:</span><br><span class="line">            <span class="keyword">return</span> self.lowestCommonAncestor(root.right, p, q)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> root</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题68 - II. 二叉树的最近公共祖先</title>
      <link href="/2020/02/19/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9868-II%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/"/>
      <url>/2020/02/19/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9868-II%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88/</url>
      
        <content type="html"><![CDATA[<ul><li><h4 id="面试题68-II-二叉树的最近公共祖先"><a href="#面试题68-II-二叉树的最近公共祖先" class="headerlink" title="面试题68 - II. 二叉树的最近公共祖先"></a><a href="https://leetcode-cn.com/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/" target="_blank" rel="noopener">面试题68 - II. 二叉树的最近公共祖先</a></h4></li><li><h4 id="解1："><a href="#解1：" class="headerlink" title="解1："></a>解1：</h4></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> lowestCommonAncestor = <span class="function"><span class="keyword">function</span>(<span class="params">root, p, q</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(root, p, q);</span></span><br><span class="line">    <span class="keyword">if</span> (!root || root === p || root === q) &#123;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> left = lowestCommonAncestor(root.left,p,q);</span><br><span class="line">    <span class="keyword">let</span> right = lowestCommonAncestor(root.right,p,q);</span><br><span class="line">    <span class="keyword">if</span> (!left) <span class="keyword">return</span> right;</span><br><span class="line">    <span class="keyword">if</span> (!right) <span class="keyword">return</span> left;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题67-把字符串转换成整数</title>
      <link href="/2020/02/19/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9867-%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B4%E6%95%B0/"/>
      <url>/2020/02/19/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9867-%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B4%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://leetcode-cn.com/problems/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu-lcof/" target="_blank" rel="noopener">面试题67-把字符串转换成整数</a></li><li>解1。耍赖解法</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125; str</span></span><br><span class="line"><span class="comment"> * @return &#123;number&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> strToInt = <span class="function"><span class="keyword">function</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max(<span class="built_in">Math</span>.min(<span class="built_in">parseInt</span>(str) || <span class="number">0</span>, <span class="number">2147483647</span>), <span class="number">-2147483648</span>)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题32-III-从上到下打印二叉树III</title>
      <link href="/2020/02/18/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9832-III-%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91III/"/>
      <url>/2020/02/18/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9832-III-%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91III/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof" target="_blank" rel="noopener">从上到下打印二叉树 III</a></li><li>解1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;number[][]&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> levelOrder = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!root) &#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">let</span> row = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> queue = [root];</span><br><span class="line">    <span class="keyword">while</span> (queue.length) &#123;</span><br><span class="line">        <span class="keyword">let</span> rowArr = [];</span><br><span class="line">        <span class="keyword">let</span> length = queue.length</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length;i++) &#123;</span><br><span class="line">            <span class="keyword">let</span> node = queue.shift();</span><br><span class="line">            <span class="keyword">if</span> (row % <span class="number">2</span> === <span class="number">1</span>) &#123;</span><br><span class="line">                rowArr.push(node.val);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                rowArr.unshift(node.val);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(node.left) queue.push(node.left);</span><br><span class="line">            <span class="keyword">if</span>(node.right) queue.push(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">        result.push(rowArr);</span><br><span class="line">        row++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题37-序列化二叉树</title>
      <link href="/2020/02/17/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9837-%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
      <url>/2020/02/17/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9837-%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://leetcode-cn.com/problems/xu-lie-hua-er-cha-shu-lcof" target="_blank" rel="noopener">序列化二叉树</a></li><li>解1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;string&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> Codec = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!root) &#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">let</span> node = root;</span><br><span class="line">    <span class="keyword">let</span> queue = [node];</span><br><span class="line">    <span class="keyword">while</span> (queue.length) &#123;</span><br><span class="line">        <span class="keyword">let</span> front = queue.shift();</span><br><span class="line">        <span class="keyword">if</span> (front) &#123;</span><br><span class="line">            result.push(front.val);</span><br><span class="line">            queue.push(front.left);</span><br><span class="line">            queue.push(front.right);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result.push(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(result)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = result.length<span class="number">-1</span>; i &gt; <span class="number">0</span>;i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (result[i]===<span class="literal">null</span>) &#123;</span><br><span class="line">            result.pop();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题55-II-平衡二叉树</title>
      <link href="/2020/02/15/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9830-%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/"/>
      <url>/2020/02/15/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9830-%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://leetcode-cn.com/problems/ping-heng-er-cha-shu-lcof" target="_blank" rel="noopener">平衡二叉树</a></li><li>解1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isBalanced = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> left = root.left;</span><br><span class="line">    <span class="keyword">let</span> right = root.right;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(height(left) - height(right)) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> isBalanced(root.left) &amp;&amp; isBalanced(root.right)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> height = <span class="function">(<span class="params">root</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">Math</span>.max(height(root.left), height(root.right));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode-面试题55-II-平衡二叉树</title>
      <link href="/2020/02/15/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9855-II-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
      <url>/2020/02/15/leetcode-%E9%9D%A2%E8%AF%95%E9%A2%9855-II-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://leetcode-cn.com/problems/ping-heng-er-cha-shu-lcof" target="_blank" rel="noopener">平衡二叉树</a></li><li>解1</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * function TreeNode(val) &#123;</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *     this.left = this.right = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;TreeNode&#125; root</span></span><br><span class="line"><span class="comment"> * @return &#123;boolean&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> isBalanced = <span class="function"><span class="keyword">function</span>(<span class="params">root</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> left = root.left;</span><br><span class="line">    <span class="keyword">let</span> right = root.right;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(height(left) - height(right)) &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> isBalanced(root.left) &amp;&amp; isBalanced(root.right)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> height = <span class="function">(<span class="params">root</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (root === <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">Math</span>.max(height(root.left), height(root.right));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今天整理一下视频音频</title>
      <link href="/2020/02/15/%E4%BB%8A%E5%A4%A9%E6%95%B4%E7%90%86%E4%B8%80%E4%B8%8B%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/"/>
      <url>/2020/02/15/%E4%BB%8A%E5%A4%A9%E6%95%B4%E7%90%86%E4%B8%80%E4%B8%8B%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>引入独立html页面</title>
      <link href="/2020/02/12/2020%E5%B9%B42%E6%9C%8811%E6%97%A5-%E5%BC%95%E5%85%A5%E7%8B%AC%E7%AB%8Bhtml%E9%A1%B5%E9%9D%A2/"/>
      <url>/2020/02/12/2020%E5%B9%B42%E6%9C%8811%E6%97%A5-%E5%BC%95%E5%85%A5%E7%8B%AC%E7%AB%8Bhtml%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<ul><li>我的主题是melody。配置文件在source目录下的_data下，请注意先找到自己主题生效的配置文件，然后在配置文件中的menu下添加目录（如没有menu目录就自己建一个）</li><li>第二步，在hexo的配置文件中添加跳过渲染配置，（在根目录下）</li><li>第三步，在source文件夹下建一个文件夹，名字和主题配置文件中menu下添加的目录名对应</li><li>第四步，进入建好的文件夹，创建index.html入口文件<br>效果：点击目录里xxx，直接跳转到index.html</li></ul><p>以下是图片<br><img src="https://cdn.jsdelivr.net/gh/ferrerobomb/jsDeliver@0.0.3/hexo根目录配置文件跳过渲染配置.png" alt="hexo根目录配置文件跳过渲染配置"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日流水记账</title>
      <link href="/2020/02/12/2020%E5%B9%B42%E6%9C%8811%E6%97%A5-%E6%AF%8F%E6%97%A5%E6%B5%81%E6%B0%B4%E8%AE%B0%E8%B4%A6/"/>
      <url>/2020/02/12/2020%E5%B9%B42%E6%9C%8811%E6%97%A5-%E6%AF%8F%E6%97%A5%E6%B5%81%E6%B0%B4%E8%AE%B0%E8%B4%A6/</url>
      
        <content type="html"><![CDATA[<ul><li><p>拒绝浪费生命^_^</p></li><li><p>2020年2月11日 day2</p><ul><li>读书30m</li><li>学英语20m</li><li>健身1m</li><li><del>今天荒废了一天</del></li><li><del>今天荒废了一天</del></li></ul></li><li><p>2020年2月12日 day3</p><ul><li>学英语20m+</li><li>读书30m</li><li><del>今天荒废了一天</del></li></ul></li><li><p>2020年2月13日 day4</p><ul><li>学英语20m+</li><li>没读书</li></ul></li><li><p>2020年2月14日 day5</p><ul><li>学英语10m+</li><li>没读书</li></ul></li><li><p>2020年2月15日 day6</p><ul><li>学英语20m+</li><li>读书30m+，整本书都在说乔布斯是一个粗鲁，不谙世事的人</li><li>整理了<a href="https://ferrerobomb.github.io/2019/04/01/%E8%B6%85%E7%BA%A7%E7%B4%A2%E5%BC%95%E8%AE%A1%E5%88%92/">索引表</a>，加了一些网站,看了一下置顶功能，先不加了</li></ul></li><li><p>2020年2月16日 day7</p><ul><li>学英语20m+</li><li>读书30m+</li></ul></li><li><p>2020年2月17日 day8</p><ul><li>读书任务√</li><li>学英语任务√</li></ul></li><li><p>2020年2月18日 day9</p><ul><li>读书任务√</li><li>学英语任务√</li></ul></li><li><p>2020年2月19日 day10</p><ul><li>读书任务√</li><li>学英语任务√</li><li>leetcode√</li></ul></li><li><p>2020年2月20日 day11</p><ul><li>学英语任务√</li></ul></li><li><p>2020年2月21日 day12</p><ul><li>学英语任务√</li></ul></li><li><p>2020年2月22日 day13</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年2月23日 day14</p><ul><li>学英语任务√ </li><li>leetcode√ </li></ul></li><li><p>2020年2月24日 day15</p><ul><li>学英语任务√ </li><li>leetcode√ </li></ul></li><li><p>2020年2月25日 day16</p><ul><li>学英语任务√ </li><li>leetcode√ </li></ul></li><li><p>2020年2月26日 day17</p><ul><li>学英语任务√ </li><li>leetcode√ </li></ul></li><li><p>2020年2月27日 day18</p><ul><li>学英语任务√ </li><li>leetcode√ </li><li>读书任务√ 。<a href="https://ferrerobomb.github.io/2020/02/27/终于正式读完了人生的第一本书/">note</a></li></ul></li><li><p>2020年2月28日 day19</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年2月29日 day20</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月1日 day21</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月2日 day22</p><ul><li><h3 id="今天荒废了一天"><a href="#今天荒废了一天" class="headerlink" title="今天荒废了一天"></a>今天荒废了一天</h3></li></ul></li><li><p>2020年3月3日 day23</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月4日 day24</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月5日 day25</p><ul><li><h3 id="今天荒废了一天-1"><a href="#今天荒废了一天-1" class="headerlink" title="今天荒废了一天"></a>今天荒废了一天</h3></li></ul></li><li><p>2020年3月6日 day26</p><ul><li><h3 id="今天荒废了一天-2"><a href="#今天荒废了一天-2" class="headerlink" title="今天荒废了一天"></a>今天荒废了一天</h3></li></ul></li><li><p>2020年3月7日 day27</p><ul><li><h3 id="今天荒废了一天-3"><a href="#今天荒废了一天-3" class="headerlink" title="今天荒废了一天"></a>今天荒废了一天</h3></li></ul></li><li><p>2020年3月8日 day28</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月9日 day29</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月10日 day30</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月11日 day31</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月12日 day32</p><ul><li>学英语任务√ </li></ul></li><li><p>2020年3月13日 day33</p><ul><li><h3 id="今天荒废了一天-4"><a href="#今天荒废了一天-4" class="headerlink" title="今天荒废了一天"></a>今天荒废了一天</h3></li></ul></li><li><p>2020年3月14日 day34</p><ul><li><h3 id="今天荒废了一天-5"><a href="#今天荒废了一天-5" class="headerlink" title="今天荒废了一天"></a>今天荒废了一天</h3></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020年2月10日PCTEST</title>
      <link href="/2020/02/10/2020%E5%B9%B42%E6%9C%8810%E6%97%A5PCTEST/"/>
      <url>/2020/02/10/2020%E5%B9%B42%E6%9C%8810%E6%97%A5PCTEST/</url>
      
        <content type="html"><![CDATA[<ul><li>2020年2月10日PC终端测试</li></ul><p>很久没写了，又上来摸摸，熟悉了一下流程。接下来会修改以前博客的错别字，修改【多终端同步博客操作】<a href="https://ferrerobomb.github.io/2019/03/31/%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%90%8C%E6%AD%A5%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/">线上链接</a>  <a href="多终端同步博客操作.md">本地连接</a>  (这次主要是完善一下，还是有不够明确的细节)</p><p>day 1</p><p>读书30m+</p><p>学英语10m+</p><p>工作</p><p><del>健身</del></p><p><del>我又浪费了一天时间</del></p><p>总是想写一些东西，但是又不会写作。准备找东西学学写作，先入个门吧</p><p>乔布斯说，与其被竞争对手干掉，不如我们自己干掉自己</p>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于chrome卡顿的解决方法</title>
      <link href="/2019/05/07/%E5%85%B3%E4%BA%8Echrome%E5%8D%A1%E9%A1%BF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2019/05/07/%E5%85%B3%E4%BA%8Echrome%E5%8D%A1%E9%A1%BF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>最近一周chrome突然变得特别卡，可能是装了什么插件导致</p><p>关闭GPU加速等不起作用，最后还是重置解决，重置之后插件也就都关闭了，就不卡了。</p><p>在设置的最下面重置</p><p><img src="https://cdn.jsdelivr.net/gh/ferrerobomb/jsDeliver@0.0.2/chrome%E9%87%8D%E7%BD%AE%E6%88%AA%E5%9B%BE.png" alt="chrome重置截图"></p>]]></content>
      
      
      
        <tags>
            
            <tag> chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>43.Multiply Strings</title>
      <link href="/2019/04/15/43-Multiply-Strings/"/>
      <url>/2019/04/15/43-Multiply-Strings/</url>
      
        <content type="html"><![CDATA[<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p><p><strong>Example 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: num1 = &quot;2&quot;, num2 = &quot;3&quot;</span><br><span class="line">Output: &quot;6&quot;</span><br></pre></td></tr></table></figure><p><strong>Example 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: num1 = &quot;123&quot;, num2 = &quot;456&quot;</span><br><span class="line">Output: &quot;56088&quot;</span><br></pre></td></tr></table></figure><p><strong>Note:</strong></p><ol><li>The length of both <code>num1</code> and <code>num2</code> is &lt; 110.</li><li>Both <code>num1</code> and <code>num2</code> contain only digits <code>0-9</code>.</li><li>Both <code>num1</code> and <code>num2</code> do not contain any leading zero, except the number 0 itself.</li><li>You <strong>must not use any built-in BigInteger library</strong> or <strong>convert the inputs to integer</strong> directly.</li></ol><p>笔记：</p><ul><li>字符串相乘（可用于计算大数相乘）</li><li>字符串输出</li><li>注意进位</li></ul><p>知识点</p><ul><li>让我们看看发生了什么</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">123456789</span> * <span class="number">987654321</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">parseInt</span>(<span class="string">"121932631112635269"</span>) === <span class="number">121932631112635260</span>);</span><br><span class="line"><span class="comment">// 输出什么</span></span><br><span class="line"><span class="comment">// 是否正确</span></span><br><span class="line"><span class="comment">// 为什么</span></span><br></pre></td></tr></table></figure><ul><li>String.prototype.charCodeAt()</li></ul><p>解法1：模拟算数乘法运算方法</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超级索引计划&amp;网址大全&amp;工具箱</title>
      <link href="/2019/04/01/%E8%B6%85%E7%BA%A7%E7%B4%A2%E5%BC%95%E8%AE%A1%E5%88%92/"/>
      <url>/2019/04/01/%E8%B6%85%E7%BA%A7%E7%B4%A2%E5%BC%95%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<style>table th:nth-of-type(1) { width: 200px; } </style> <ul><li><p>书</p><ul><li>未读书架<ul><li>穷人的本质</li></ul></li><li>已读书架<ul><li>《乔布斯传》</li><li>《活着》</li></ul></li></ul></li><li><p>视频</p><ul><li>电影，看过<ul><li>Eagle Eye 鹰眼 D·J·卡卢索</li></ul></li><li>想看<ul><li></li></ul></li></ul></li><li><p>未分类网站</p><ul><li>工具箱1  <a href="https://tools.miku.ac/" target="_blank" rel="noopener">地址</a> </li><li>游戏 太鼓达人   <a href="https://taiko.bui.pm/" target="_blank" rel="noopener">地址</a>   </li><li>全网资源音乐播放器 <a href="https://listen1.github.io/listen1/" target="_blank" rel="noopener">地址</a></li><li>PC钢琴 <a href="https://www.autopiano.cn/" target="_blank" rel="noopener">地址</a></li><li>医疗微视 <a href="https://www.mvyxws.com/" target="_blank" rel="noopener">地址</a></li><li>声音 <a href="https://www.ear0.com/" target="_blank" rel="noopener">耳聆网</a></li></ul></li><li><p>网络工具箱</p><ul><li><p>文档链接</p></li><li><p>| 内容           | 网址                                                         | 添加时间      |<br>| :————- | ———————————————————— | ————- |<br>| 今日热点       | <a href="https://tophub.today/" target="_blank" rel="noopener">地址1</a>                               | 2020年2月15日 |<br>| ppt模板        |                                                              |               |<br>| 学历史         | <a href="https://www.allhistory.com/" target="_blank" rel="noopener">地址1</a>；<a href="https://www.ageeye.cn/" target="_blank" rel="noopener">地址2</a> | 2020年2月15日 |<br>| 背景图片       | <a href="http://bg-patterns.com/" target="_blank" rel="noopener">地址</a>                              | 2020年2月15日 |<br>| 默沙东诊疗手册 | <a href="https://www.msdmanuals.com/zh" target="_blank" rel="noopener">地址</a>                        | 2020年2月15日 |<br>| 共享云手机     | <a href="https://www.materialtools.com/" target="_blank" rel="noopener">地址</a>                       | 2020年2月15日 |<br>| 共享云邮箱     | <a href="https://temp-mail.org/zh/" target="_blank" rel="noopener">地址1</a>                           | 2020年2月15日 |<br>| 视频下载       | <a href="https://www.urlgot.com/" target="_blank" rel="noopener">地址1</a>                             | 2020年2月15日 |<br>| 自制表情gif    | <a href="https://app.xuty.tk/static/app/index.html" target="_blank" rel="noopener">地址1</a>           | 2020年2月15日 |<br>| 彩云翻译       | <a href="https://fanyi.caiyunapp.com/#/" target="_blank" rel="noopener">地址</a>                       | 2020年2月19日 |<br>|                |                                                              |               |<br>|                |                                                              |               |<br>|                |                                                              |               |</p></li></ul></li></ul><ul><li><p>计算机科学与技术</p><ul><li>前端<ul><li>web<ul><li>react</li><li>vue</li><li>angular</li><li>angularjs</li></ul></li><li>游戏</li><li>微信小程序</li></ul></li><li>后端<ul><li>java</li><li>nodejs</li><li>python</li><li>database<ul><li>mysql</li><li>mongodb</li><li>redis</li><li>redshift</li></ul></li></ul></li><li>算法</li><li>全栈</li><li>运维</li><li>大数据</li><li>云计算<ul><li>AWS</li></ul></li><li>人工智能</li><li>区块链</li><li>信息安全</li></ul></li><li><p>金融与经济</p></li><li><p>数学</p></li><li><p>物理</p></li><li><p>化学</p></li><li><p>生物</p></li><li></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多终端同步博客操作</title>
      <link href="/2019/03/31/%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%90%8C%E6%AD%A5%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/03/31/%E5%A4%9A%E7%BB%88%E7%AB%AF%E5%90%8C%E6%AD%A5%E5%8D%9A%E5%AE%A2%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>总是想使用多终端同步和发布博客，于是做以下尝试</p><ul><li>在github简历两个仓库。1.用于储存博客发布版即hexo d部署的。2.用于储存hexo项目源</li><li>因为不是第一次 所以其实很简单，这里简单说以下遇到的一个问题：用多个电脑部署会相互覆盖commit记录的问题。看一下hexo的原理就知道，其实在执行hexo g的时候会将内容整理到public文件夹，并将之前的覆盖，如果没有public文件夹就新建。hexo d也是一样，将public文件夹的内容复制到.deploy文件夹，然后提交到github，所以两个电脑的.deploy的git仓库不同，自然会覆盖。</li><li>知道了原理就很好解决了。我是将.deploy文件夹改为hexo项目的git 子模块，git submodule</li><li>每次使用新终端的时候需要执行的步骤<ul><li>git pull hexo项目 （备忘：进入hexo项目，我的叫blog2.0）</li><li>git pull .deploy_git (xxx.github.io的项目)</li><li>写博客</li><li>发布</li><li>提交hexo项目</li></ul></li><li>非常详细的命令行版<ul><li>cd blog2.0           (进入hexo项目根目录，我的叫blog2.0)</li><li>git pull               （此步骤如果使用ssh注意配置，也可使用http）</li><li>cd ..                        (这步好像是多余的，但是由于想不起来之前为什么这么写，所以先不删掉)</li><li>cd .deploy_git</li><li>git pull</li><li>cd ..</li><li>到此所有同步步骤结束，下面是写作步骤</li><li>hexo new ‘文章名’</li><li>打开文件，写</li><li>hexo g</li><li>hexo d</li><li>到此写作步骤和部署步骤结束</li><li>git步骤将hexo项目上传至git</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 模版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源存储从公有云切换到jsdeliver</title>
      <link href="/2019/03/31/%E8%B5%84%E6%BA%90%E5%AD%98%E5%82%A8%E4%BB%8E%E5%85%AC%E6%9C%89%E4%BA%91%E5%88%87%E6%8D%A2%E5%88%B0jsdeliver/"/>
      <url>/2019/03/31/%E8%B5%84%E6%BA%90%E5%AD%98%E5%82%A8%E4%BB%8E%E5%85%AC%E6%9C%89%E4%BA%91%E5%88%87%E6%8D%A2%E5%88%B0jsdeliver/</url>
      
        <content type="html"><![CDATA[<ul><li>之前用的七牛云，但是连接是http，强迫症就必须使用https</li><li>使用<a href="https://www.jsdelivr.com/" target="_blank" rel="noopener">https://www.jsdelivr.com/</a><ul><li>首先去Github建一个仓库我的名字叫jsDeliver</li><li>然后上传资源，以首页banner为例 <a href="https://github.com/ferrerobomb/jsDeliver/blob/master/eve01.jpg" target="_blank" rel="noopener">链接</a></li><li>release并记下版本号</li><li>发布成功后访问 <a href="https://cdn.jsdelivr.net/gh/ferrerobomb/jsDeliver@0.0.1/eve01.jpg" target="_blank" rel="noopener">图片链接</a> 即可</li></ul></li><li>使用方法：<a href="https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径</a></li><li>版本向下兼容</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 模版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2019/03/30/submodule%20test/"/>
      <url>/2019/03/30/submodule%20test/</url>
      
        <content type="html"><![CDATA[<ul><li>submodule 测试</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 模版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>moment.js的使用技巧</title>
      <link href="/2019/03/30/moment.js%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2019/03/30/moment.js%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<ul><li>在使用moment.js和antdesign的DatePicker的时候遇到的时区问题<ul><li>在前端编辑时间的时候需要是UTC时间，而DatePicker默认是本地时间。需要在调用api发送的时候将时间修改一下,下面的写法是不生效的</li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> startTime = moment().utc().format(<span class="string">'YYYY-MM-DDTHH:mm:ssZ'</span>);</span><br></pre></td></tr></table></figure><p>而下面这种写法可以</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> startTime = moment().utc().format(<span class="string">'YYYY-MM-DDTHH:mm:ss'</span>)+<span class="string">'Z'</span>;</span><br></pre></td></tr></table></figure><p>有待进一步研究</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> moment.js </tag>
            
            <tag> AntDesign </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git仓库从https转为ssh</title>
      <link href="/2019/03/29/git%E4%BB%93%E5%BA%93%E4%BB%8Ehttps%E8%BD%AC%E4%B8%BAssh/"/>
      <url>/2019/03/29/git%E4%BB%93%E5%BA%93%E4%BB%8Ehttps%E8%BD%AC%E4%B8%BAssh/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Created at 2019-03-29</p></blockquote><ul><li>配置git name和email</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"name"</span></span><br><span class="line">git config --global user.email <span class="string">"email@xxx.com"</span></span><br></pre></td></tr></table></figure><ul><li>看一下ssh目录下的ssh key</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls ~/.ssh</span><br></pre></td></tr></table></figure><p>如果是windows 在C盘-&gt;用户-&gt;用户名-&gt;.ssh</p><p>找到id_rsa.pub (id_rsa为默认生成的ssh key，如果生成的时候自己写了就是自己写的名字，多个sshkey的选择要使用的sshkey，注意是.pub文件)，如果没有的话使用下面语句生成</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"email@xxx.com"</span></span><br></pre></td></tr></table></figure><p>复制内容，到公钥中使用的邮箱的github-&gt;setting-&gt;ssh key，new ssh</p><ul><li>进入想要转换的项目根目录.git/config中，将[ogrigin]的url替换</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = https://github.com/name/repository.git</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = git@github.com:name/repository.git</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@xxx.com</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些效率工具 精简版</title>
      <link href="/2019/03/26/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/03/26/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Created at 2019-03-26</p></blockquote><ul><li><p>对外笔记: 博客 <a href="https://ferrerobomb.github.io/">https://ferrerobomb.github.io/</a></p></li><li><p>笔记: 印象笔记 </p></li><li><p>密码: 1password </p></li><li><p>学习工具: shadow rocket, express VPN等</p></li><li><p>网盘: 坚果云 </p></li><li><p>思维导图: 幕布 </p></li><li><p>看书: iBook, 欧路词典</p></li><li><p>新闻: feedly</p></li><li><p>远程桌面: TeamViewer </p></li><li><p>剪切板: Ditto </p></li><li><p>其他: everything，snipaste </p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客模版</title>
      <link href="/2019/03/26/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A8%A1%E7%89%88/"/>
      <url>/2019/03/26/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%A8%A1%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1 id="模版修改"><a href="#模版修改" class="headerlink" title="模版修改"></a>模版修改</h1><blockquote><p>Created at 2019-03-26</p></blockquote><ul><li>melody框架使用的<strong>Stylus</strong> 是一个<strong>基于Node.js的CSS的预处理框架</strong></li><li>css<ul><li>banner图片没加载出来的时候蓝色换成了黑色，在head.styl文件中修改#nav   background-color: $black</li></ul></li><li>ico更换<ul><li>项目根目录 ▸ ⁨themes⁩ ▸ ⁨melody⁩ ▸ ⁨source⁩ ▸ melody-favicon.ico</li><li>注意是主题目录下的不是public目录下的，每次生成public都会被替换</li></ul></li><li>使用font-awesome v5</li><li>添加邮件</li><li>接入google analysis</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 模版 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初始的样子</title>
      <link href="/2019/03/26/%E5%88%9D%E5%A7%8B%E7%9A%84%E6%A0%B7%E5%AD%90/"/>
      <url>/2019/03/26/%E5%88%9D%E5%A7%8B%E7%9A%84%E6%A0%B7%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<ul><li><p>melody模版有很多直接拿过来用</p></li><li><p>下面是给像我一样喜欢从零开始的人铺的路</p></li><li><p>按这个走<a href="https://molunerfinn.com/hexo-theme-melody-doc/quick-start.html#installation" target="_blank" rel="noopener">https://molunerfinn.com/hexo-theme-melody-doc/quick-start.html#installation</a></p></li><li><p>我遇到了两个问题</p></li><li><p>1.hexo g 编译报错 layout.pug:11</p><ul><li><p>解决方法<a href="https://github.com/Molunerfinn/hexo-theme-melody/issues/58" target="_blank" rel="noopener">https://github.com/Molunerfinn/hexo-theme-melody/issues/58</a></p></li><li><p>根目录配置文件注意是根目录就是一进项目文件夹的_config.yml </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># keywords: yGin910</span></span><br><span class="line"><span class="comment"># 改成</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">yGin910</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>2.hexo g 编译报错 layout.pug:31</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Unhandled rejection TypeError: /home/hgneer/Hexo/themes/melody/layout/includes/layout.pug:31</span><br><span class="line">    29|       each url <span class="keyword">in</span> theme.stylesheets</span><br><span class="line">    30|         link(rel=<span class="string">'stylesheet'</span>, href=url_for(url) + <span class="string">'?version='</span> + version())</span><br><span class="line">  &gt; 31|     each item <span class="keyword">in</span> theme.cdn.css</span><br><span class="line">    32|       <span class="keyword">if</span> item !== undefined</span><br><span class="line">    33|         link(rel=<span class="string">'stylesheet'</span>, href=item + <span class="string">'?version='</span> + version())</span><br><span class="line">    34|     include ./head.pug</span><br><span class="line"></span><br><span class="line">Cannot <span class="built_in">read</span> property <span class="string">'css'</span> of undefined</span><br><span class="line">    at <span class="built_in">eval</span> (<span class="built_in">eval</span> at wrap (/home/hgneer/Hexo/node_modules/pug-runtime/wrap.js:6:10), &lt;anonymous&gt;:80:25)</span><br><span class="line">    at <span class="built_in">eval</span> (<span class="built_in">eval</span> at wrap (/home/hgneer/Hexo/node_modules/pug-runtime/wrap.js:6:10), &lt;anonymous&gt;:102:4)</span><br><span class="line">    at template (<span class="built_in">eval</span> at wrap (/home/hgneer/Hexo/node_modules/pug-runtime/wrap.js:6:10), &lt;anonymous&gt;:1657:72)</span><br><span class="line">    at Theme._View.View._compiled.locals [as _compiled] (/home/hgneer/Hexo/node_modules/hexo/lib/theme/view.js:125:48)</span><br><span class="line">    at Theme._View.View.View.render (/home/hgneer/Hexo/node_modules/hexo/lib/theme/view.js:30:15)</span><br><span class="line">    at route.set (/home/hgneer/Hexo/node_modules/hexo/lib/hexo/index.js:394:29)</span><br><span class="line">    at tryCatcher (/home/hgneer/Hexo/node_modules/bluebird/js/release/util.js:16:23)</span><br><span class="line">    at /home/hgneer/Hexo/node_modules/bluebird/js/release/method.js:15:34</span><br><span class="line">    at RouteStream._read (/home/hgneer/Hexo/node_modules/hexo/lib/hexo/router.js:134:3)</span><br><span class="line">    at RouteStream.Readable.read (_stream_readable.js:452:10)</span><br><span class="line">    at resume_ (_stream_readable.js:899:12)</span><br><span class="line">    at process._tickCallback (internal/process/next_tick.js:63:19)</span><br></pre></td></tr></table></figure><ul><li>解决方法 这个链接太长 小屏没有换行 所以加了一个代码段<code>https://aipynux.github.io/2019/02/03/%E9%85%8D%E7%BD%AEHexo%E4%B8%BB%E9%A2%98%E4%B9%8BMelody/#%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98</code></li><li>需要复制到Hexo/source/_data下的_config.yml是melody主题目录下的而非Hexo目录下的。 </li><li>3.yml文件是yaml格式</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 模版 </tag>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客2.0.md</title>
      <link href="/2019/03/25/%E5%8D%9A%E5%AE%A22-0-md/"/>
      <url>/2019/03/25/%E5%8D%9A%E5%AE%A22-0-md/</url>
      
        <content type="html"><![CDATA[<p>还是很简单的</p><ul><li><p>自动是md格式，.变成了-</p></li><li><p>注意事项：md文件中间不能使用空格和.</p></li><li><p>配置文件_config.yml中最后的配置这三个都要写</p><ul><li>deploy:<br>  type: git<br>  repo:<br>  branch: master</li></ul></li><li><p>下一步，主题，标签系统，日志分类，搜索和评论</p></li><li><p>backup：统计，moment.js记录</p></li><li><p>走了一大圈，又回到了开始</p></li><li><p>melody问题</p><ul><li>keywords改成这种格式</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keywords: </span><br><span class="line"> - blog2.0</span><br></pre></td></tr></table></figure><ul><li></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2017.06.26-leetcode70.Climbing Stairs.md</title>
      <link href="/2017/08/29/2017-06-26-leetcode70-Climbing-Stairs-md/"/>
      <url>/2017/08/29/2017-06-26-leetcode70-Climbing-Stairs-md/</url>
      
        <content type="html"><![CDATA[<h1 id="2017-06-24-leetcode70-Climbing-Stairs"><a href="#2017-06-24-leetcode70-Climbing-Stairs" class="headerlink" title="2017.06.24-leetcode70.Climbing Stairs"></a>2017.06.24-leetcode70.Climbing Stairs</h1><ul><li><p>You are climbing a stair case. It takes <em>n</em> steps to reach to the top.</p><p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p><p><strong>Note:</strong> Given <em>n</em> will be a positive integer.</p></li><li><p>翻译</p></li></ul><h2 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h2><ul><li><p>JavaScript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> climbStairs = <span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>) <span class="keyword">return</span> n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">0</span>, stepOne = <span class="number">1</span>, stepTwo = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        num = stepOne + stepTwo;</span><br><span class="line">        stepOne = stepTwo;</span><br><span class="line">        stepTwo = num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新的测试</title>
      <link href="/2017/08/26/%E6%96%B0%E7%9A%84%E6%B5%8B%E8%AF%95/"/>
      <url>/2017/08/26/%E6%96%B0%E7%9A%84%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>111</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2017</title>
      <link href="/2017/01/05/2017/"/>
      <url>/2017/01/05/2017/</url>
      
        <content type="html"><![CDATA[<p>新的一年，努力！</p><p>崩了？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>h标签大小</title>
      <link href="/2016/12/30/h%E6%A0%87%E7%AD%BE%E5%A4%A7%E5%B0%8F/"/>
      <url>/2016/12/30/h%E6%A0%87%E7%AD%BE%E5%A4%A7%E5%B0%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="h标签大小"><a href="#h标签大小" class="headerlink" title="h标签大小"></a>h标签大小</h1><p></p><h1>This is heading 1</h1><p></p><p></p><h2>This is heading 2</h2><p></p><p></p><h3>This is heading 3</h3><p></p><p></p><h4>This is heading 4</h4><p></p><p></p><h5>This is heading 5</h5><p></p><h6>This is heading 6</h6><ul><li>h1 == 2em == 32px </li><li>h2 == 1.5em == 24px </li><li>h3 == 1.17em == 18.72px</li><li>h4 == 1em == 16px </li><li>h5 == 0.83em == 13.28px </li><li>h6 == 0.67em == 10.72px</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>垂直居中方法总结</title>
      <link href="/2016/12/16/%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2016/12/16/%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="垂直居中方法总结"><a href="#垂直居中方法总结" class="headerlink" title="垂直居中方法总结"></a>垂直居中方法总结</h1><h2 id="1-最好的垂直居中方法-—-flex"><a href="#1-最好的垂直居中方法-—-flex" class="headerlink" title="1.最好的垂直居中方法 — flex"></a>1.最好的垂直居中方法 — flex</h2><p>很遗憾，各大浏览器目前还不支持,所以 这条根本没用！<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line"><span class="undefined">  border: 2px solid red;</span></span><br><span class="line"><span class="undefined">  height: 500px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="undefined">border: 2px solid blue;</span></span><br><span class="line"><span class="undefined">width: 320px;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">display: flex;</span></span><br><span class="line"><span class="undefined">display: -webkit-flex;</span></span><br><span class="line"><span class="undefined">align-items: center;</span></span><br><span class="line"><span class="undefined">justify-content: center;</span></span><br><span class="line"><span class="undefined">-webkit-justify-content: center;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span>    </span><br><span class="line">    对酒当歌，人生几何？譬如朝露，去日苦多。</span><br><span class="line">慨当以慷，忧思难忘。何以解忧？唯有杜康。</span><br><span class="line">青青子衿，悠悠我心。但为君故，沉吟至今。</span><br><span class="line">呦呦鹿鸣，食野之苹。我有嘉宾，鼓瑟吹笙。</span><br><span class="line">明明如月，何时可辍？忧从中来，不可断绝。</span><br><span class="line">越陌度阡，枉用相存。契阔谈宴，心念旧恩。</span><br><span class="line">月明星稀，乌鹊南飞。绕树三匝，何枝可依？</span><br><span class="line">山不厌高，海不厌深。周公吐哺，天下归心。</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="2-特别简单的垂直居中方法-—-line-height"><a href="#2-特别简单的垂直居中方法-—-line-height" class="headerlink" title="2.特别简单的垂直居中方法 — line-height"></a>2.特别简单的垂直居中方法 — line-height</h2><p>其实我在逗你玩，这种方法只能用于小段单行文字！<br>不过还是挺好用的！<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line"><span class="undefined">  border: 2px solid red;</span></span><br><span class="line"><span class="undefined">  height: 500px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="undefined">border: 2px solid blue;</span></span><br><span class="line"><span class="undefined">width: 320px;</span></span><br><span class="line"><span class="undefined">line-height: 200px;</span></span><br><span class="line"><span class="undefined">height: 200px;</span></span><br><span class="line"><span class="undefined">margin: auto;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="undefined">border: 2px solid black;</span></span><br><span class="line"><span class="undefined">width: 200px;</span></span><br><span class="line"><span class="undefined">line-height: 50px;</span></span><br><span class="line"><span class="undefined">height: 50px;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span>: <span class="selector-tag">auto</span>;<span class="comment">/*控制content水平居中*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;<span class="comment">/*控制content中的文字水平居中*/</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    啦啦啦</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="3-特别简单的垂直居中方法-—-inline-block"><a href="#3-特别简单的垂直居中方法-—-inline-block" class="headerlink" title="3.特别简单的垂直居中方法 — inline-block"></a>3.特别简单的垂直居中方法 — inline-block</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line"><span class="undefined">  border: 2px solid red;</span></span><br><span class="line"><span class="undefined">  height: 500px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="undefined">border: 2px solid blue;</span></span><br><span class="line"><span class="undefined">width: 320px;</span></span><br><span class="line"><span class="undefined">height: 200px;</span></span><br><span class="line"><span class="css"><span class="selector-tag">display</span>: <span class="selector-tag">inline-block</span><span class="comment">/*;*/</span></span></span><br><span class="line"><span class="undefined">vertical-align: middle;</span></span><br><span class="line"><span class="undefined">margin: auto;</span></span><br><span class="line"><span class="undefined">text-align: center;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="undefined">border: 2px solid black;</span></span><br><span class="line"><span class="undefined">width: 200px;</span></span><br><span class="line"><span class="undefined">height: 100px;</span></span><br><span class="line"><span class="undefined">display: inline-block;</span></span><br><span class="line"><span class="undefined">vertical-align: middle;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span>: <span class="selector-tag">auto</span>;<span class="comment">/*控制content水平居中*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;<span class="comment">/*控制content中的文字水平居中*/</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    啦啦啦</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-特别简单的垂直居中方法-—-table-cell"><a href="#4-特别简单的垂直居中方法-—-table-cell" class="headerlink" title="4.特别简单的垂直居中方法 — table-cell"></a>4.特别简单的垂直居中方法 — table-cell</h2><p>这个挺给力！<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line"><span class="undefined">  border: 2px solid red;</span></span><br><span class="line"><span class="undefined">  height: 500px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="undefined">border: 2px solid blue;</span></span><br><span class="line"><span class="undefined">width: 340px;</span></span><br><span class="line"><span class="undefined">height: 200px;</span></span><br><span class="line"><span class="undefined">display: table;</span></span><br><span class="line"><span class="undefined">margin: auto;</span></span><br><span class="line"><span class="undefined">text-align: center;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="undefined">border: 2px solid black;</span></span><br><span class="line"><span class="undefined">width: 200px;</span></span><br><span class="line"><span class="css"><span class="selector-tag">height</span>: 100<span class="selector-tag">px</span>;<span class="comment">/*外层div display为table 则内层高度、宽度无效，反之则必须指定高度，宽度*/</span></span></span><br><span class="line"><span class="undefined">display: table-cell; </span></span><br><span class="line"><span class="undefined">vertical-align: middle;</span></span><br><span class="line"><span class="css"><span class="selector-tag">margin</span>: <span class="selector-tag">auto</span>;<span class="comment">/*控制content水平居中*/</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;<span class="comment">/*控制content中的文字水平居中*/</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    对酒当歌，人生几何？譬如朝露，去日苦多。</span><br><span class="line">慨当以慷，忧思难忘。何以解忧？唯有杜康。</span><br><span class="line">青青子衿，悠悠我心。但为君故，沉吟至今。</span><br><span class="line">呦呦鹿鸣，食野之苹。我有嘉宾，鼓瑟吹笙。</span><br><span class="line">明明如月，何时可辍？忧从中来，不可断绝。</span><br><span class="line">越陌度阡，枉用相存。契阔谈宴，心念旧恩。</span><br><span class="line">月明星稀，乌鹊南飞。绕树三匝，何枝可依？</span><br><span class="line">山不厌高，海不厌深。周公吐哺，天下归心。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="5-特别简单的垂直居中方法-—-绝对定位"><a href="#5-特别简单的垂直居中方法-—-绝对定位" class="headerlink" title="5.特别简单的垂直居中方法 — 绝对定位"></a>5.特别简单的垂直居中方法 — 绝对定位</h2><p>辣鸡！<br>整个页面居中了！<br>特定情况下使用！<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line"><span class="undefined">  border: 2px solid red;</span></span><br><span class="line"><span class="undefined">  height: 500px;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="undefined">border: 2px solid blue;</span></span><br><span class="line"><span class="undefined">width: 340px;</span></span><br><span class="line"><span class="undefined">height: 200px;</span></span><br><span class="line"><span class="undefined">margin: auto;</span></span><br><span class="line"><span class="undefined">text-align: center;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="undefined">position: absolute;</span></span><br><span class="line"><span class="undefined">border: 2px solid black;</span></span><br><span class="line"><span class="undefined">width: 340px;</span></span><br><span class="line"><span class="undefined">height: 150px;</span></span><br><span class="line"><span class="undefined">top: 0;</span></span><br><span class="line"><span class="undefined">bottom: 0;</span></span><br><span class="line"><span class="undefined">left: 0;</span></span><br><span class="line"><span class="undefined">right: 0;</span></span><br><span class="line"><span class="undefined">margin: auto;</span></span><br><span class="line"><span class="css"><span class="comment">/*text-align: center;控制content中的文字水平居中*/</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    对酒当歌，人生几何？譬如朝露，去日苦多。</span><br><span class="line">慨当以慷，忧思难忘。何以解忧？唯有杜康。</span><br><span class="line">青青子衿，悠悠我心。但为君故，沉吟至今。</span><br><span class="line">呦呦鹿鸣，食野之苹。我有嘉宾，鼓瑟吹笙。</span><br><span class="line">明明如月，何时可辍？忧从中来，不可断绝。</span><br><span class="line">越陌度阡，枉用相存。契阔谈宴，心念旧恩。</span><br><span class="line">月明星稀，乌鹊南飞。绕树三匝，何枝可依？</span><br><span class="line">山不厌高，海不厌深。周公吐哺，天下归心。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="6-特别简单的垂直居中方法-—-各种margin控制"><a href="#6-特别简单的垂直居中方法-—-各种margin控制" class="headerlink" title="6.特别简单的垂直居中方法 — 各种margin控制"></a>6.特别简单的垂直居中方法 — 各种margin控制</h2><p>也不甚好</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ceshi</title>
      <link href="/2016/11/26/ceshi/"/>
      <url>/2016/11/26/ceshi/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS揭秘第七章</title>
      <link href="/2016/11/13/CSS%E6%8F%AD%E7%A7%98%E7%AC%AC%E4%B8%83%E7%AB%A0/"/>
      <url>/2016/11/13/CSS%E6%8F%AD%E7%A7%98%E7%AC%AC%E4%B8%83%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS揭秘第七章"><a href="#CSS揭秘第七章" class="headerlink" title="CSS揭秘第七章"></a>CSS揭秘第七章</h1><h2 id="36-自适应内部元素"><a href="#36-自适应内部元素" class="headerlink" title="36.自适应内部元素"></a>36.自适应内部元素</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">figure</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">max-width</span>: min-content;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">figure</span> &gt; <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: inherit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="40-垂直居中"><a href="#40-垂直居中" class="headerlink" title="40.垂直居中"></a>40.垂直居中</h2><p>最好的解决方案：先给待居中元素的父元素设置display: flex，再给这个元素自身设置margin: auto。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="/2016/11/06/%E6%B5%8B%E8%AF%95/"/>
      <url>/2016/11/06/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>测试1</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习笔记</title>
      <link href="/2016/10/29/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2016/10/29/CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="文档结构"><a href="#文档结构" class="headerlink" title="文档结构"></a>文档结构</h2><p>父子关系：CSS之所以强大，主要就在于元素之间存在父子关系。（文档树、父元素、子元素）</p><h3 id="派生选择器"><a href="#派生选择器" class="headerlink" title="派生选择器"></a>派生选择器</h3><p>后代选择器（descendant selector，也称包含选择器）或上下文选择器（contextual selector）<br>例：h1 em { color: gray; }<br>有一点容易忽略，即两个元素之间的层次间隔是可以无限的。<br>例： ul em{} 不论em的嵌套层次多深，都会选择从ul元素继承的所有em元素。<br>后代选择器功能极其强大。</p><p>子元素选择器（child selector）<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>aaa<span class="tag">&lt;<span class="name">em</span>&gt;</span>lalala<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>aaa<span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>lalala<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>还是上面的例： ul &gt; em{} 只选择第一行的em。<br>子元素选择，只选择儿子。孙子什么的都不要。</p><p>相邻兄弟选择器（adjacent sibling selector）<br>同理：只选择相邻的兄弟，是相邻的 li + li {}</p><h2 id="伪类和伪元素"><a href="#伪类和伪元素" class="headerlink" title="伪类和伪元素"></a>伪类和伪元素</h2>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一笔</title>
      <link href="/2016/10/15/%E8%AE%B0%E4%B8%80%E7%AC%94/"/>
      <url>/2016/10/15/%E8%AE%B0%E4%B8%80%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<p>许久没有更新博客了，也是因为前一阵比较忙的缘故吧。这两天回归正轨，继续在这里写点东西。<br>自己建的网站运行良好，hiahiahia！<br>接触了一个月的前端相关技术，感觉自己慢慢已经有些感觉了。可以一边巩固基础，一边实践着提升一下了，不得不说前端还是很杂的，就像一个大杂烩。但是基础的HTML+CSS+JS核心还是基础，要不断巩固，最近就先从这里开始吧。<br>对了之前发现一个不错的网站叫freecodecamp，很不错的网站，没事的时候在上面写几道，虽然是非常简单的，但是前面的做完后面貌似可以接触到一些实战。很有意思。</p><p>附上今天写的代码，依然觉得很弱B，真是为达目的不择手段。。。题目是删除字符串中的叹号，但是结尾必须有且仅有1个叹号。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params">s</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//coding and coding....</span></span><br><span class="line">  <span class="keyword">var</span> arr = [];</span><br><span class="line">  arr = s.split(<span class="string">""</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(arr)</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[i] == <span class="string">"!"</span>)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> j = i; j &lt; arr.length; j++)&#123;</span><br><span class="line">        arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">//continue;</span></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(arr);</span></span><br><span class="line">    <span class="comment">//i++;</span></span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[i] == <span class="string">"!"</span>)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> j = i; j &lt; arr.length; j++)&#123;</span><br><span class="line">        arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">//continue;</span></span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//console.log(arr);</span></span><br><span class="line">    <span class="comment">//i++;</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(arr);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; arr.length; i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[i] == <span class="literal">undefined</span>)&#123;</span><br><span class="line">      arr.length = i;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(arr[arr.length<span class="number">-1</span>] != <span class="string">"!"</span>)&#123;</span><br><span class="line">    arr[arr.length] = <span class="string">"!"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> arr.join(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>有很多牛逼的写法，我就附上一个我觉着最好的吧。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">remove</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> s.replace(<span class="regexp">/!+/g</span>, <span class="string">''</span>) + <span class="string">'!'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>或者<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> remove = <span class="function"><span class="params">s</span> =&gt;</span> s.replace(<span class="regexp">/!+/g</span>, <span class="string">""</span>)+<span class="string">"!"</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Dairy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dairy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9月的最后一天</title>
      <link href="/2016/09/30/9%E6%9C%88%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9/"/>
      <url>/2016/09/30/9%E6%9C%88%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>嗯？我的格子又没了？<br>—华丽的分割线—<br>弄好了   坑<br>之前把自己的域名改DNS导向过这里，然后竟然忘了删了。<br>删了一次CNAME竟然还没删掉，不过第二次总算删掉了。<br>今天科目二模拟训练，这个离合油门和刹车，挂挡，要练成习惯。<br>明天详细学习一下bower，深入的了解一下。</p><p>明天就是国庆节啦！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks服务器搭建</title>
      <link href="/2016/09/26/Shadowsocks%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/"/>
      <url>/2016/09/26/Shadowsocks%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>服务器已经搭建好了，现在多用户还没有解决。<br>……<br>现在是夜里1点25，我做好了多用户配置，激动！<br>……</p>]]></content>
      
      
      <categories>
          
          <category> Shadowsocks </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shadowsocks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>codingame Power of Thor - Episode 1</title>
      <link href="/2016/09/25/codingame-Power-of-Thor-Episode-1/"/>
      <url>/2016/09/25/codingame-Power-of-Thor-Episode-1/</url>
      
        <content type="html"><![CDATA[<p>新代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> inputs = readline().split(<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">var</span> lightX = <span class="built_in">parseInt</span>(inputs[<span class="number">0</span>]); <span class="comment">// the X position of the light of power</span></span><br><span class="line"><span class="keyword">var</span> lightY = <span class="built_in">parseInt</span>(inputs[<span class="number">1</span>]); <span class="comment">// the Y position of the light of power</span></span><br><span class="line"><span class="keyword">var</span> initialTX = <span class="built_in">parseInt</span>(inputs[<span class="number">2</span>]); <span class="comment">// Thor's starting X position</span></span><br><span class="line"><span class="keyword">var</span> initialTY = <span class="built_in">parseInt</span>(inputs[<span class="number">3</span>]); <span class="comment">// Thor's starting Y position</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> thorX = initialTX;</span><br><span class="line"><span class="keyword">var</span> thorY = initialTY;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// game loop</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> remainingTurns = <span class="built_in">parseInt</span>(readline()); <span class="comment">// The remaining amount of turns Thor can move. Do not remove this line.</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> directionX = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> directionY = <span class="string">''</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(thorX &lt; lightX) &#123;</span><br><span class="line">        thorX++;</span><br><span class="line">        directionX = <span class="string">"E"</span>;</span><br><span class="line">        <span class="comment">//break;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(thorX &gt; lightX) &#123;</span><br><span class="line">        thorX--;</span><br><span class="line">        directionX = <span class="string">'W'</span>;</span><br><span class="line">        <span class="comment">//print('W');</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(thorY &lt; lightY)&#123;</span><br><span class="line">        thorY++;</span><br><span class="line">        directionY = <span class="string">'S'</span>;</span><br><span class="line">        <span class="comment">// print('NE');</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(thorY &gt; lightY)&#123;</span><br><span class="line">        thorY--;</span><br><span class="line">        directionY = <span class="string">'N'</span>;</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="comment">// Write an action using print()</span></span><br><span class="line">    <span class="comment">// To debug: printErr('Debug messages...');</span></span><br><span class="line">    print(directionY + directionX);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A single line providing the move to be made: N NE E SE S SW W or NW</span></span><br><span class="line">    <span class="comment">//print('E');</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>原来的越界是因为没有处理好等于的情况！确实是这样。</p>]]></content>
      
      
      <categories>
          
          <category> codingame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codingame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github的SSH配置</title>
      <link href="/2016/09/25/github%E7%9A%84SSH%E9%85%8D%E7%BD%AE/"/>
      <url>/2016/09/25/github%E7%9A%84SSH%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="github的SSH配置"><a href="#github的SSH配置" class="headerlink" title="github的SSH配置"></a>github的SSH配置</h1><p>MDZZ 9月8号之后的contribution全部都不显示，很不爽。</p><p>查了一下，原来是在9月9号装了个github desktop，然后它生成了SSH key，不仅把我原来的覆盖了，并且没有使用。</p><p>找到原因就开始修复。<br>打开git 输入<br>ssh-keygen -t rsa -C “<a href="mailto:your_email@example.com" target="_blank" rel="noopener">your_email@example.com</a>“</p><p>不用设置密码，直接回车</p><p>提示覆盖，输入y  就是覆盖</p><p>不用设置密码，直接回车</p><p>好了成功就设置好了，再回到github的SSH设置页面看一下，叮儿！原来的SSH key变绿了，重新提交一次，contribution开始显示了。</p>]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>codingame - The Descent</title>
      <link href="/2016/09/24/codingame-The-Descent/"/>
      <url>/2016/09/24/codingame-The-Descent/</url>
      
        <content type="html"><![CDATA[<h2 id="codeingame-The-Descent"><a href="#codeingame-The-Descent" class="headerlink" title="codeingame - The Descent"></a>codeingame - The Descent</h2><p>今天发现一个很好的编程游戏网站，觉得很棒！网址是<a href="http://www.codingame.com" target="_blank" rel="noopener">www.codingame.com</a><br>因为自己很喜欢玩游戏，中学就想过能不能边玩游戏边学习编程，然后就在互联网上找，结果没找着，此事无疾而终。<br>大一的时候发现codecombat，玩了一阵，还充了钱，他是个开源项目，但是服务器太卡了，而且玩多了发现模式很单一，而且画面给我感觉很lowB，后来也就不玩了。<br>今天无意间进了一下codingame，必须承认，他的画面吸引了我！很炫。然后跟着step走了一边流程，很喜欢。<br>不光是游戏画面，整个网站的界面也做得非常棒，不过因为我也是第一次玩，后面还要深入了解。</p><p>先附上今天做的第一个任务： The Descent<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> imax = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> mountainH = <span class="built_in">parseInt</span>(readline()); <span class="comment">// represents the height of one mountain, from 9 to 0. Mountain heights are provided from left to right.</span></span><br><span class="line">        <span class="keyword">if</span> (mountainH &gt; max) &#123;</span><br><span class="line">            max = mountainH;</span><br><span class="line">            imax = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    print(imax);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>语言我选择的是javascript，因为最近包括以后一段时间要一直学习javascript<br>不得不说，由于我比较菜，也是第一次玩，整个网站也都是英文的，导致入门了半天才搞懂。<br>熟悉了流程之后，就要开始下一个任务了  哈哈。</p><h1 id="Power-of-Thor-Episode-1"><a href="#Power-of-Thor-Episode-1" class="headerlink" title="Power of Thor - Episode 1"></a>Power of Thor - Episode 1</h1><p>我写的垃圾算法，通过了第一关，后面都不行，明天再改，然后if else我要重新学习一下了。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> inputs = readline().split(<span class="string">' '</span>);</span><br><span class="line"><span class="keyword">var</span> lightX = <span class="built_in">parseInt</span>(inputs[<span class="number">0</span>]); <span class="comment">// the X position of the light of power</span></span><br><span class="line"><span class="keyword">var</span> lightY = <span class="built_in">parseInt</span>(inputs[<span class="number">1</span>]); <span class="comment">// the Y position of the light of power</span></span><br><span class="line"><span class="keyword">var</span> initialTX = <span class="built_in">parseInt</span>(inputs[<span class="number">2</span>]); <span class="comment">// Thor's starting X position</span></span><br><span class="line"><span class="keyword">var</span> initialTY = <span class="built_in">parseInt</span>(inputs[<span class="number">3</span>]); <span class="comment">// Thor's starting Y position</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// game loop</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> remainingTurns = <span class="built_in">parseInt</span>(readline()); <span class="comment">// The remaining amount of turns Thor can move. Do not remove this line.</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(initialTX &lt;= lightX &amp;&amp; initialTY &lt;= lightY)&#123;</span><br><span class="line">        print(<span class="string">'SE'</span>);</span><br><span class="line">        <span class="comment">//break;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(initialTX &gt;= lightX &amp;&amp; initialTY &lt;= lightY)&#123;</span><br><span class="line">        print(<span class="string">'SW'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(initialTX &lt;= lightX &amp;&amp; initialTY &gt;= lightY)&#123;</span><br><span class="line">        print(<span class="string">'NE'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(initialTX &gt;= lightX &amp;&amp; initialTY &gt;= lightY)&#123;</span><br><span class="line">        print(<span class="string">'NW'</span>);</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="comment">// Write an action using print()</span></span><br><span class="line">    <span class="comment">// To debug: printErr('Debug messages...');</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// A single line providing the move to be made: N NE E SE S SW W or NW</span></span><br><span class="line">    <span class="comment">//print('E');</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> codingame </category>
          
      </categories>
      
      
        <tags>
            
            <tag> codeingame </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记（4）</title>
      <link href="/2016/09/23/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%884%EF%BC%89/"/>
      <url>/2016/09/23/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%884%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="JavaScript没有块级作用域"><a href="#JavaScript没有块级作用域" class="headerlink" title="JavaScript没有块级作用域"></a>JavaScript没有块级作用域</h2><p>在使用for语句时要尤其注意！<br>在一个花括号{}里定义的变量，不使用var的话在之后的执行环境中也可以使用。<br>。。读着读着发现这一堆我都知道了。 。。。</p><h2 id="垃圾收集"><a href="#垃圾收集" class="headerlink" title="垃圾收集"></a>垃圾收集</h2><h3 id="标记清除"><a href="#标记清除" class="headerlink" title="标记清除"></a>标记清除</h3><p>JavaScript中最常用的垃圾收集方式就是标记清除（mark-and-sweep）。</p><h3 id="引用计数"><a href="#引用计数" class="headerlink" title="引用计数"></a>引用计数</h3><p>引用计数（reference counting），不太常见。</p><h2 id="性能问题"><a href="#性能问题" class="headerlink" title="性能问题"></a>性能问题</h2><p>垃圾收集器是周期性运行的。</p><h2 id="管理内存"><a href="#管理内存" class="headerlink" title="管理内存"></a>管理内存</h2><p>JavaScript分配给Web浏览器的可用内存数量通常比分配给桌面应用程序的少。<br>解除引用（derederencing）：一旦数据不再有用，通过将其值设置为null来释放其引用。</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记（3）</title>
      <link href="/2016/09/21/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%883%EF%BC%89/"/>
      <url>/2016/09/21/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%883%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="执行环境及作用域"><a href="#执行环境及作用域" class="headerlink" title="执行环境及作用域"></a>执行环境及作用域</h2><p>每一个执行环境（execution context）都有一个与之关联的变量对象（variable object），环境中定义的所有变量和函数都保存在这个对象中。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> color = <span class="string">"blue"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeColor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> anotherColor = <span class="string">"red"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swapColors</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> tempColor = anotherColor;</span><br><span class="line">anotherColor = color;</span><br><span class="line">color = tempColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这里可以访问color、anotherColor和tempColor</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这里可以访问color和anotherColor，但不能访问tempColor</span></span><br><span class="line">swapColors();</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//这里只能访问color</span></span><br><span class="line">changeColor();</span><br></pre></td></tr></table></figure></p><p>这里有必要提出一个问题，今天项目中遇到的问题，那就是我在外层定义了数组，但是在内层函数中提示找不到该数组。解决方法是将定义移动到内层函数。所以说对于作用域的研究还应当更进一步。</p><h2 id="延长作用域链"><a href="#延长作用域链" class="headerlink" title="延长作用域链"></a>延长作用域链</h2><ul><li>try-catch语句的catch块</li><li>with语句</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buildUrl</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> qs = <span class="string">"?debug = true"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span>(location)&#123;</span><br><span class="line"><span class="keyword">var</span> ul = href + qs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> url;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 强行插入！with语句用法：</span></span><br><span class="line"><span class="string">with 语句用于设置代码在特定对象中的作用域。</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>javascript</span><br><span class="line"><span class="keyword">with</span> (expression)</span><br><span class="line">statement</span><br></pre></td></tr></table></figure><p>例子：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a, x, y;</span><br><span class="line"><span class="keyword">var</span> r = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> (<span class="built_in">Math</span>) &#123;</span><br><span class="line">  a = PI * r * r;</span><br><span class="line">  x = r * cos(PI);</span><br><span class="line">  y = r * sin(PI);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//传统写法：</span></span><br><span class="line"><span class="keyword">var</span> a, x, y;</span><br><span class="line"><span class="keyword">var</span> r = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">Math</span>.PI * r * r;</span><br><span class="line">x = r * <span class="built_in">Math</span>.cos(PI);</span><br><span class="line">y = r * <span class="built_in">Math</span>.sin(PI);</span><br></pre></td></tr></table></figure></p><p>with语句的作用：扩展作用域链<br>注意：with语句的使用会使代码性能下降！</p><p><img src="http://ocpbpzco9.bkt.clouddn.com/%E8%84%B1%E8%A3%A4%E6%B4%97%E5%BA%93%E6%92%9E%E5%BA%93%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt="脱裤洗库撞库"></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript模态框</title>
      <link href="/2016/09/20/JavaScript%E6%A8%A1%E6%80%81%E6%A1%86/"/>
      <url>/2016/09/20/JavaScript%E6%A8%A1%E6%80%81%E6%A1%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AngularJS sweetalert2</title>
      <link href="/2016/09/20/AngularJS-sweetalert2/"/>
      <url>/2016/09/20/AngularJS-sweetalert2/</url>
      
        <content type="html"><![CDATA[<p>ngSweetAlert2 github：<br><a href="https://github.com/bbiHQ/ngSweetAlert2" target="_blank" rel="noopener">https://github.com/bbiHQ/ngSweetAlert2</a><br><a href="https://limonte.github.io/sweetalert2/#radio-inputs" target="_blank" rel="noopener">https://limonte.github.io/sweetalert2/#radio-inputs</a></p><p>1的：<br><a href="http://t4t5.github.io/sweetalert/" target="_blank" rel="noopener">http://t4t5.github.io/sweetalert/</a></p>]]></content>
      
      
      <categories>
          
          <category> AngularJS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AngularJS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记（2）</title>
      <link href="/2016/09/20/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%882%EF%BC%89/"/>
      <url>/2016/09/20/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="变量、作用域、内存"><a href="#变量、作用域、内存" class="headerlink" title="变量、作用域、内存"></a>变量、作用域、内存</h1><h2 id="值类型和引用类型"><a href="#值类型和引用类型" class="headerlink" title="值类型和引用类型"></a>值类型和引用类型</h2><ul><li>值类型是现金，引用类型是存折<br>声明一个值类型的变量，编译器会自动在栈上分配一个空间给他，用来存储该值类型变量的值。新建一个引用类型实例，则分配在堆上。<h2 id="复制变量值"><a href="#复制变量值" class="headerlink" title="复制变量值"></a>复制变量值</h2></li><li><p>值类型 复制是这样的：<br>var num1 = 5；//num1 = 5<br>var num2 = num1; // num2 = 5；<br>之后再调用或更改都相互无影响</p></li><li><p>引用类型 复制是这样的：<br>var obj1 = new Object();<br>var Obj2 = obj1;<br>obj1.name = “duguletian”;<br>alert(obj2.name); //“duguletian”<br>其实是个指针，指向obj1</p></li></ul><h2 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h2><p>和复制差不多。在向参数传递基本类型的值时，被传递的值会被复制给一个局部变量（即命名参数，就是arguments对象中的一个元素），在向参数传递引用类型的值时，会把这个值在内存中的地址复制给一个局部变量。</p><ul><li><p>对象是按值传递的<br>请看下面一个小例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setName</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">obj.name = <span class="string">"duguletian"</span>;</span><br><span class="line">obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">obj.name = <span class="string">"Greg"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">setName(person);</span><br><span class="line">alert(person.name);<span class="comment">// "duguletian"</span></span><br></pre></td></tr></table></figure></li><li><p>可以吧ECMAScript函数的参数想象成局部变量</p></li></ul><h2 id="检测类型"><a href="#检测类型" class="headerlink" title="检测类型"></a>检测类型</h2><p>typeof<br>instanceof</p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python安装指南</title>
      <link href="/2016/09/16/Python%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
      <url>/2016/09/16/Python%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="Python安装"><a href="#Python安装" class="headerlink" title="Python安装"></a>Python安装</h2><p>首先打开Python的官方网站<a href="http://www.python.org，在Download页面下点击黄色的Download" target="_blank" rel="noopener">www.python.org，在Download页面下点击黄色的Download</a> Python 3.5.2（我安装的时候是3.5.2）。<br>然后找到下载的路径，安装即可。据说默认安装到C盘根目录，但是我默认安装到了一个很奇怪的地方，打开快捷方式属性，找到快捷方式的路径，然后找到根目录即可。</p><ul><li>安装安成后打开命令行输入python，如果显示python版本信息这说明python安装成功。<br>配置环境变量，将python安装路径写到环境变量中</li></ul><h2 id="pip安装"><a href="#pip安装" class="headerlink" title="pip安装"></a>pip安装</h2><p>（先要配置python环境变量）<br>下载pip安装包bootstrap.pypa.io/get-pip.py<br>安装python get-pip.py  </p><h2 id="selenium安装"><a href="#selenium安装" class="headerlink" title="selenium安装"></a>selenium安装</h2><p>pip install selenium</p><h2 id="PyCharm安装"><a href="#PyCharm安装" class="headerlink" title="PyCharm安装"></a>PyCharm安装</h2><p>官网下载<a href="http://www.jetbrains.com" target="_blank" rel="noopener">www.jetbrains.com</a><br>安装</p><h2 id="chrome启动python脚本（windows下）"><a href="#chrome启动python脚本（windows下）" class="headerlink" title="chrome启动python脚本（windows下）"></a>chrome启动python脚本（windows下）</h2><p>首先下载chromedriver，很重要！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">chromedriver = <span class="string">"G:chromedriver"</span>  <span class="comment"># 下载 chromedriver 路径</span></span><br><span class="line">os.environ[<span class="string">"webdriver.chrome.driver"</span>] = chromedriver</span><br><span class="line">driver = webdriver.Chrome(chromedriver)</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">"http://www.baidu.com/"</span>)  <span class="comment"># 网址 URL</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AngularJS学习笔记</title>
      <link href="/2016/09/12/AngularJS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2016/09/12/AngularJS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>科目一考了99，错了个限速的，没有坚持第一个想法！</p><h2 id="AngularJS过滤器"><a href="#AngularJS过滤器" class="headerlink" title="AngularJS过滤器"></a>AngularJS过滤器</h2><h3 id="AngularJS过滤器-1"><a href="#AngularJS过滤器-1" class="headerlink" title="AngularJS过滤器"></a>AngularJS过滤器</h3><p>过滤器可用一个管道字符“丨”添加到表达式和指令中，可用于转换数据。</p><ul><li>currency    格式化数字为货币格式    （没啥用啊！）</li><li>filter    从数组项中选择一个子集</li><li>lowercase    格式化字符串为小写</li><li>orderBy    根据某个表达式排列数组</li><li>uppercase    格式化字符串为大写  </li></ul><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--大写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"personCtrl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名为 &#123;&#123; lastName | uppercase &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--小写--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"personCtrl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>姓名为 &#123;&#123; lastName | lowercase &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--货币--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"costCtrl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">ng-model</span>=<span class="string">"quantity"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">ng-model</span>=<span class="string">"price"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    总价 = &#123;&#123; (quantity * price) | currency &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--向指令添加过滤器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"namesCtrl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names"</span> | <span class="attr">orgerBy:</span>'<span class="attr">country</span>'&gt;</span></span><br><span class="line">    &#123;&#123;x.name + ',' + x.country&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--过滤输入--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">ng-app</span>=<span class="string">"myApp"</span> <span class="attr">ng-controller</span>=<span class="string">"namesCtrl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">ng-model</span>=<span class="string">"test"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">ng-repeat</span>=<span class="string">"x in names | filter:test | orderBy:'country'"</span>&gt;</span></span><br><span class="line">      &#123;&#123; (x.name | uppercase) + ', ' + x.country &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="AngularJS服务-Service"><a href="#AngularJS服务-Service" class="headerlink" title="AngularJS服务(Service)"></a>AngularJS服务(Service)</h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AngularJS </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端成长之路</title>
      <link href="/2016/09/10/%E5%89%8D%E7%AB%AF%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/"/>
      <url>/2016/09/10/%E5%89%8D%E7%AB%AF%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>JavaScript实现</p><ul><li>核心（ECMAScript）</li><li>文档对象模型（DOM）</li><li>浏览器对象模型（BOM）</li></ul><p>web浏览器是ECMAScript实现可能的宿主环境。宿主环境不仅提供ECMAScript实现，同时也会提供该语言的扩展，一边语言与环境之间对接交互。如DOM。其他宿主环境包括Node、Adobe Flash等。</p><p>文档对象模型（DOM，Document Object Model）是针对XML但经过扩展用于HTML的应用编程接口（API，Application Programming Interface）。</p><p>例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>小例子<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bode</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      Hello World!</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">bode</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器对象模型（BOM，Browser Object Model）。</p><p>JS是一种转为网页交互而设计的脚本语言。</p><h2 id="元素"><a href="#元素" class="headerlink" title="元素"></a><script>元素</h2><p>在HTML页面中插入JS的主要方法。<script>定义了六个属性：</p><ul><li>async：可选。只适用于外部脚本。</li><li>charset：可选。</li><li>defer：可选。只适用于外部脚本。表明脚本在执行时不会影响页面的构造。即延迟到整个页面都解析完毕后再运行。最好只包含一个延迟脚本。</li><li>language：已废弃。</li><li>src：可选。</li><li>type：可选。</li></ul></script></h2>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（11）——多媒体</title>
      <link href="/2016/09/08/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%8811%EF%BC%89%E2%80%94%E2%80%94%E5%A4%9A%E5%AA%92%E4%BD%93/"/>
      <url>/2016/09/08/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%8811%EF%BC%89%E2%80%94%E2%80%94%E5%A4%9A%E5%AA%92%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h2 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h2><p>就是叮咚叮咚那个</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（10）——内容提供器</title>
      <link href="/2016/09/08/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%8810%EF%BC%89%E2%80%94%E2%80%94%E5%86%85%E5%AE%B9%E6%8F%90%E4%BE%9B%E5%99%A8/"/>
      <url>/2016/09/08/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%8810%EF%BC%89%E2%80%94%E2%80%94%E5%86%85%E5%AE%B9%E6%8F%90%E4%BE%9B%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<ul><li>通过ContentResolve类，访问内容提供器中的数据</li></ul><p>嗯学完一边效果不太好，还得再看。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（9）——数据存储</title>
      <link href="/2016/09/08/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%889%EF%BC%89%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
      <url>/2016/09/08/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%889%EF%BC%89%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="持久化技术"><a href="#持久化技术" class="headerlink" title="持久化技术"></a>持久化技术</h2><h3 id="文件存储"><a href="#文件存储" class="headerlink" title="文件存储"></a>文件存储</h3><h3 id="SharedPreference存储"><a href="#SharedPreference存储" class="headerlink" title="SharedPreference存储"></a>SharedPreference存储</h3><h3 id="数据库存储"><a href="#数据库存储" class="headerlink" title="数据库存储"></a>数据库存储</h3><p>学习使用SQLite</p><p>解决了一下Text的大小写问题：5.0以上系统的Button的英文字符不管输入什么都自动大写。<br>解决方法：<br>1.在Button中将textAllCaps属性设置为”false”<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:textAllCaps="false"</span><br></pre></td></tr></table></figure></p><p>2.在java中设置button的属性<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">button.setTransformationMethod(<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure></p><p>3.自定义Button主题<br>4.自定义Button</p><p>创建数据库<br>升级数据库<br>添加数据<br>更新数据<br>删除数据<br>查询数据</p><p>使用SQL操作数据库</p><p>添加数据<br>db.execSQL(“insertintoBook(name,author,pages,price)values(?,?,?,?)”, new String[] { “The Da Vinci Code”, “Dan Brown”, “454”, “16.96” });<br>db.execSQL(“insertintoBook(name,author,pages,price)values(?,?,?,?)”, newString[] { “The Lost Symbol”,”Dan Brown”, “510”, “19.95” }); </p><p>更新数据<br>db.execSQL(“updateBooksetprice=? wherename=?”,new String[]{“10.99”, “The Da Vinci Code” }); </p><p>删除数据<br>db.execSQL(“delete from Book where pages &gt; ?”, new String[] { “500” });</p><p>查询数据<br>db.rawQuery(“select * from Book”, null);</p><p>小练习</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Git</title>
      <link href="/2016/09/07/%E5%85%B3%E4%BA%8EGit/"/>
      <url>/2016/09/07/%E5%85%B3%E4%BA%8EGit/</url>
      
        <content type="html"><![CDATA[<p>还是写下来吧，哈哈，还挺有用的<br>git init<br>git add<br>git commit<br>方法1：<br>git clone 地址<br>git pull origin master<br>git push origin master</p><p>方法2：<br>git remote add origin 地址<br>git pull –rebase origin master     方法2使用此语句有奇效<br>git push origin master</p><p>.gitignore文件中记录着忽略的文件</p><p>git diff查看更改的内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AndroidStudio小技巧</title>
      <link href="/2016/09/06/AndroidStudio%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2016/09/06/AndroidStudio%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="自动换行"><a href="#自动换行" class="headerlink" title="自动换行"></a>自动换行</h3><p>Setting -&gt; Editer -&gt; Code Style -&gt; Java 选中Ensure right margin is not exceeded<br>Code Style页面的Right margin(colimns)是控制右边那一条竖线的位置的。<br><img src="http://ocpbpzco9.bkt.clouddn.com/%E8%87%AA%E5%8A%A8%E6%8D%A2%E8%A1%8C.jpg" alt="自动换行"></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（8）——广播</title>
      <link href="/2016/09/06/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%888%EF%BC%89%E2%80%94%E2%80%94%E5%B9%BF%E6%92%AD/"/>
      <url>/2016/09/06/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%888%EF%BC%89%E2%80%94%E2%80%94%E5%B9%BF%E6%92%AD/</url>
      
        <content type="html"><![CDATA[<h2 id="广播的类型"><a href="#广播的类型" class="headerlink" title="广播的类型"></a>广播的类型</h2><ul><li>标准广播（Normal broadcasts），一种异步执行的广播。</li><li>有序广播（Ordered broadcasts），一种同步执行的广播。</li></ul><h2 id="注册广播的两种方式"><a href="#注册广播的两种方式" class="headerlink" title="注册广播的两种方式"></a>注册广播的两种方式</h2><ul><li>动态注册，在代码中注册</li><li>静态注册，在AndroidManifest.xml中注册<a id="more"></a><h3 id="动态注册"><a href="#动态注册" class="headerlink" title="动态注册"></a>动态注册</h3></li><li>优点：灵活</li><li>缺点：程序必须启动</li></ul><p>动态注册的广播接收器一定要取消注册，否则有可能有引起内存泄漏，也会占用系统内存资源。</p><p><font size="5" color="red">重要：</font>Android系统为了保证应用程序的安全性做了规定，如果程序需要访问一些系统的关键性信息，必须在配置文件中声明权限才可以，否则程序将会直接崩溃。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.duguletian.broadcasttest"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionCode</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:versionName</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-sdk</span> <span class="attr">android:minSdkVersion</span>=<span class="string">"14"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:targetSdkVersion</span>=<span class="string">"19"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IntentFilter intentFilter;</span><br><span class="line">    <span class="keyword">private</span> NetworkChangeReceiver networkChangeReceiver;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        intentFilter.addAction(<span class="string">"android.net.conn.CONNECTIVITY_CHANGE"</span>);</span><br><span class="line">        networkChangeReceiver = <span class="keyword">new</span> NetworkChangeReceiver();</span><br><span class="line">        registerReceiver(networkChangeReceiver, intentFilter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        unregisterReceiver(networkChangeReceiver);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">NetworkChangeReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">            ConnectivityManager connectionManager = (ConnectivityManager) getSystemService(context</span><br><span class="line">                    .CONNECTIVITY_SERVICE);</span><br><span class="line">            NetworkInfo networkInfo = connectionManager.getActiveNetworkInfo();</span><br><span class="line">            <span class="keyword">if</span> (networkInfo != <span class="keyword">null</span> &amp;&amp;networkInfo.isAvailable())&#123;</span><br><span class="line">                Toast.makeText(context, <span class="string">"network is available"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                Toast.makeText(context, <span class="string">"network is unavailable"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态注册"><a href="#静态注册" class="headerlink" title="静态注册"></a>静态注册</h3><p>问题遗留：这里和书上不一样了，打开app info，BroadcastTest没有任何权限。并且开机广播也没有实现。</p><h2 id="自定义广播"><a href="#自定义广播" class="headerlink" title="自定义广播"></a>自定义广播</h2>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 问题遗留 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（7）——碎片</title>
      <link href="/2016/09/06/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%887%EF%BC%89%E2%80%94%E2%80%94%E7%A2%8E%E7%89%87/"/>
      <url>/2016/09/06/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%887%EF%BC%89%E2%80%94%E2%80%94%E7%A2%8E%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h2 id="Fragment（碎片）"><a href="#Fragment（碎片）" class="headerlink" title="Fragment（碎片）"></a>Fragment（碎片）</h2><p>碎片是一种可以嵌入在活动当中的UI片段，它能让程序更加合理和充分地利用大屏幕的空间。<br>— 我先装个平板模拟器 —</p><p>修改于9月7日晚</p><p>我觉得吧，碎片就是一个个小界面，组合起来。<br><a id="more"></a></p><h3 id="动态添加碎片"><a href="#动态添加碎片" class="headerlink" title="动态添加碎片"></a>动态添加碎片</h3><ol><li>创建待添加的碎片实例。</li><li>获取到FragmentManager，在活动中可以直接调用getFragmentManager()方法得到。 </li><li>开启一个事务，通过调用beginTransaction()方法开启。 </li><li>向容器内加入碎片，一般使用replace()方法实现，需要传入容器的id和待添加的碎片实例。 </li><li>提交事务，调用commit()方法来完成。</li></ol><h3 id="Fragment和Activiity之间进行通信"><a href="#Fragment和Activiity之间进行通信" class="headerlink" title="Fragment和Activiity之间进行通信"></a>Fragment和Activiity之间进行通信</h3><ul><li>在Activity中获取Fragment：RightFragment rightFragment = (RightFragment) getFragmentManager().findFragmentById(R.id.right_fragment);</li><li>在Fragment中获取Activity：MainActivity activity = (MainActivity) getActivity(); </li></ul><h2 id="Fragment的生命周期"><a href="#Fragment的生命周期" class="headerlink" title="Fragment的生命周期"></a>Fragment的生命周期</h2><p>和Activity差不多</p><ol><li>onAttach() 当碎片和活动建立关联的时候调用。 </li><li>onCreateView() 为碎片创建视图（加载布局）时调用。 </li><li>onActivityCreated() 确保与碎片相关联的活动一定已经创建完毕的时候调用。 </li><li>onDestroyView() 当与碎片关联的视图被移除的时候调用。 </li><li>onDetach() 当碎片和活动解除关联的时候调用</li></ol><p><img src="http://ocpbpzco9.bkt.clouddn.com/Fragment%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="Fragment生命周期"><br>对比Activity<br><img src="http://ocpbpzco9.bkt.clouddn.com/Frag%E4%B8%8EActivity%E5%AF%B9%E6%AF%94.png" alt><br>Fragment也可以通过savedInstanceState方法保存数据</p><h2 id="技巧与实践"><a href="#技巧与实践" class="headerlink" title="技巧与实践"></a>技巧与实践</h2><h3 id="Android限定符"><a href="#Android限定符" class="headerlink" title="Android限定符"></a>Android限定符</h3><p><img src="http://ocpbpzco9.bkt.clouddn.com/Android%E9%99%90%E5%AE%9A%E7%AC%A6.jpg" alt></p><p>简易版新闻应用练习<br>这里书上用到了TextView的singleLine属性，在当前SDK下已经过时而淘汰。<br>解决方法：<br>1.在XML中用lines属性代替<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:lines="1"</span><br></pre></td></tr></table></figure></p><p>2.在Java代码中单行显示<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TextView textView = (TextView) findViewById(R.id.news_title);</span><br><span class="line">textView.setSingleLine();</span><br></pre></td></tr></table></figure></p><p>这里又发现一个问题，onAttach(Activity activity)方法也过时了，当然也可以用，不过我强迫症不喜欢看横线<br>解决方法：换参数之后可以试用，即onAttach(Context context)</p><p>这里需要注意，新建layout-sw600dp文件夹之后，并不会显示，也不知是不是默认就有。需要注意的是在新建xml的时候需要将Directory name的值换成layout-sw600dp ，否则默认还是在原来的layout下新建，因为已经有了所以建不了。</p><p>都弄完运行时报错！<br>Error while executing: am start -n “com.duguletian.fragmentbestpractice/com.duguletian.fragmentbestpractice.NewsContentActivity” -a android.intent.action.MAIN -c android.intent.category.LAUNCHER<br>Starting: Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] cmp=com.duguletian.fragmentbestpractice/.NewsContentActivity }<br>Error type 3<br>Error: Activity class {com.duguletian.fragmentbestpractice/com.duguletian.fragmentbestpractice.NewsContentActivity} does not exist.</p><p>Error while Launching activity</p><p>还不错，懵逼了一下就自己想到了是Activity没有注册。然后程序运行起来了，又出现问题了，屏幕是白的，数据没有传进来。<br>问题解决了，是一个低级错误。哈哈！</p><p><a href="https://github.com/DuGuLeTian/FragmentBestPractice" target="_blank" rel="noopener">https://github.com/DuGuLeTian/FragmentBestPractice</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（6）</title>
      <link href="/2016/09/06/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%886%EF%BC%89/"/>
      <url>/2016/09/06/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%886%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="提升ListView的运行效率"><a href="#提升ListView的运行效率" class="headerlink" title="提升ListView的运行效率"></a>提升ListView的运行效率</h2><ul><li>getView()方法中的contextView参数用于将之前加载好的布局进行缓存，以便以后进行重用。</li><li>新增一个内部类ViewHolder用于对控件的实例进行缓存。<a id="more"></a><h2 id="ListView的点击事件"><a href="#ListView的点击事件" class="headerlink" title="ListView的点击事件"></a>ListView的点击事件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; fruitList = <span class="keyword">new</span> ArrayList&lt;Fruit&gt;();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        initFruits();   <span class="comment">//初始化水果数据</span></span><br><span class="line">        FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(MainActivity.<span class="keyword">this</span>, R.layout.fruit_item, fruitList);</span><br><span class="line">        ListView listView = (ListView)findViewById(R.id.list_view);</span><br><span class="line">        listView.setAdapter(adapter);</span><br><span class="line">        listView.setOnItemClickListener(<span class="keyword">new</span> AdapterView.OnItemClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; adapterView, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;</span><br><span class="line">                Fruit fruit = fruitList.get(position);</span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, fruit.getName(), Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initFruits</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Fruit apple = <span class="keyword">new</span> Fruit(<span class="string">"Apple"</span>, R.drawable.apple_pic);</span><br><span class="line">        fruitList.add(apple);</span><br><span class="line">        Fruit banana = <span class="keyword">new</span> Fruit(<span class="string">"Banana"</span>, R.drawable.banana_pic);</span><br><span class="line">        fruitList.add(banana);</span><br><span class="line">        Fruit cherry = <span class="keyword">new</span> Fruit(<span class="string">"Cherry"</span>, R.drawable.cherry_pic);</span><br><span class="line">        fruitList.add(cherry);</span><br><span class="line">        Fruit grape = <span class="keyword">new</span> Fruit(<span class="string">"Grape"</span>, R.drawable.grape_pic);</span><br><span class="line">        fruitList.add(grape);</span><br><span class="line">        Fruit mango = <span class="keyword">new</span> Fruit(<span class="string">"Mango"</span>, R.drawable.mango_pic);</span><br><span class="line">        fruitList.add(mango);</span><br><span class="line">        Fruit pear = <span class="keyword">new</span> Fruit(<span class="string">"Pear"</span>, R.drawable.pear_pic);</span><br><span class="line">        fruitList.add(pear);</span><br><span class="line">        Fruit pineapple = <span class="keyword">new</span> Fruit(<span class="string">"Pineapple"</span>, R.drawable.pineapple_pic);</span><br><span class="line">        fruitList.add(pineapple);</span><br><span class="line">        Fruit strawberry = <span class="keyword">new</span> Fruit(<span class="string">"Strawberry"</span>, R.drawable.strawberry_pic);</span><br><span class="line">        fruitList.add(apple);</span><br><span class="line">        Fruit watermelon = <span class="keyword">new</span> Fruit(<span class="string">"Watermelon"</span>, R.drawable.watermelon_pic);</span><br><span class="line">        fruitList.add(watermelon);</span><br><span class="line">        Fruit orange = <span class="keyword">new</span> Fruit(<span class="string">"Orange"</span>, R.drawable.orange_pic);</span><br><span class="line">        fruitList.add(orange);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="单位和尺寸"><a href="#单位和尺寸" class="headerlink" title="单位和尺寸"></a>单位和尺寸</h2><ul><li>px 像素。</li><li>pt 磅。1磅等于1/72英寸，一般pt都会作为字体的单位来使用。 </li><li>dp 与分辨率无关的像素，等于dip。</li><li>sp 可伸缩像素。一般用于字体。</li><li>在160DPI的屏幕上，1dp等于1px<br>分辨率定义：每英寸所包含的像素点个数，通常以DPI为单位。（你的多媒体考试可能用得到，笑。）</li></ul><p>总结：尽量将控件或布局的大小设置为wrap_content或match_parent，必须用固定值时使用dp，文字使用sp。</p><h2 id="Nine-Patch图片制作"><a href="#Nine-Patch图片制作" class="headerlink" title="Nine-Patch图片制作"></a>Nine-Patch图片制作</h2><p>使用draw9patch.bat 在SDK文件夹的工具里</p><h2 id="小练习"><a href="#小练习" class="headerlink" title="小练习"></a>小练习</h2><ul><li>android:divider属性，它可以指定ListView分隔线的颜色</li></ul><p>托管第一个小练习到github！<br>git push origin master这里卡住了。报各种错。<br>原来是没进到文件夹里。。<br>测试已经成功了，吃个饭把项目文件夹编程仓库试试。<br>搞定了<br><a href="https://github.com/DuGuLeTian/UIBestPractice.git" target="_blank" rel="noopener">https://github.com/DuGuLeTian/UIBestPractice.git</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（5）</title>
      <link href="/2016/09/05/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%885%EF%BC%89/"/>
      <url>/2016/09/05/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%885%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><h3 id="LinearLayout-线性布局"><a href="#LinearLayout-线性布局" class="headerlink" title="LinearLayout 线性布局"></a>LinearLayout 线性布局</h3><p>layout_weight属性，控制控件之间的比例。</p><h3 id="RelativeLayout-相对布局"><a href="#RelativeLayout-相对布局" class="headerlink" title="RelativeLayout 相对布局"></a>RelativeLayout 相对布局</h3><p>你可能会遇到这个问题：Use the Theme combo box above the layout to choose a different layout, or fix the theme style refere…<br>说的是预览界面的主题和你的主题不一样，应该是选个差不多的就行，因为没有我当前的主题，我只能选了个后缀一样的，问题就解决了，正确显示了。<br><a id="more"></a></p><h4 id="五狗齐飞"><a href="#五狗齐飞" class="headerlink" title="五狗齐飞"></a>五狗齐飞</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/button_1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">"button 1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/button_2"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">"button 2"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_toLeftOf</span>=<span class="string">"@id/button_1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_above</span>=<span class="string">"@id/button_1"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/button_3"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">"button 3"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_toRightOf</span>=<span class="string">"@id/button_1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_above</span>=<span class="string">"@id/button_1"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/button_4"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">"button 4"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_toLeftOf</span>=<span class="string">"@id/button_1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_below</span>=<span class="string">"@id/button_1"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/button_5"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">"button 5"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_toRightOf</span>=<span class="string">"@id/button_1"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_below</span>=<span class="string">"@id/button_1"</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="FrameLaout-框架布局"><a href="#FrameLaout-框架布局" class="headerlink" title="FrameLaout 框架布局"></a>FrameLaout 框架布局</h3><h3 id="TableLayout-表格布局"><a href="#TableLayout-表格布局" class="headerlink" title="TableLayout 表格布局"></a>TableLayout 表格布局</h3><h3 id="AbsoluteLayout-啊咧咧？"><a href="#AbsoluteLayout-啊咧咧？" class="headerlink" title="AbsoluteLayout 啊咧咧？"></a><del>AbsoluteLayout</del> 啊咧咧？</h3><h2 id="自定义控件"><a href="#自定义控件" class="headerlink" title="自定义控件"></a>自定义控件</h2><ul><li>dp等于dip，长度单位，1dp=1/160英寸</li></ul><p>自定义控件很简单，写好xml之后在当前xml文件中加入<include layout="@layout/title">即可。</include></p><h2 id="创建自定义控件"><a href="#创建自定义控件" class="headerlink" title="创建自定义控件"></a>创建自定义控件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TitleLayout</span> <span class="keyword">extends</span> <span class="title">LinearLayout</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TitleLayout</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        LayoutInflater.from(context).inflate(R.layout.title, <span class="keyword">this</span>);</span><br><span class="line">        Button btn_titleBack = (Button)findViewById(R.id.title_back);</span><br><span class="line">        Button btn_titleEdit = (Button)findViewById(R.id.title_edit);</span><br><span class="line">        btn_titleBack.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                ((Activity)getContext()).finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        btn_titleEdit.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(getContext(), <span class="string">"You Clicked the EditButton"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.duguletian.uicustomview.TitleLayout</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.duguletian.uicustomview.TitleLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h2><p><font size="10" color="red">多复习！很重要！</font></p><h3 id="简单实现"><a href="#简单实现" class="headerlink" title="简单实现"></a>简单实现</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListView</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/list_view"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> &gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> imageId;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">(String name, <span class="keyword">int</span> imageId)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getImageId</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> imageId;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定制ListView"><a href="#定制ListView" class="headerlink" title="定制ListView"></a>定制ListView</h3><p>fruit_item.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/fruit_image"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/fruit_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>FruitAdapter.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FruitAdapter</span> <span class="keyword">extends</span> <span class="title">ArrayAdapter</span>&lt;<span class="title">Fruit</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> resourceId;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FruitAdapter</span><span class="params">(Context context, <span class="keyword">int</span> textViewResourceId, List&lt;Fruit&gt; objects)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, textViewResourceId, objects);</span><br><span class="line">        resourceId = textViewResourceId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span></span>&#123;</span><br><span class="line">        Fruit fruit = getItem(position);    <span class="comment">//获取当前项的Fruit实例</span></span><br><span class="line">        View view = LayoutInflater.from(getContext()).inflate(resourceId, <span class="keyword">null</span>);</span><br><span class="line">        ImageView fruitImage = (ImageView)view.findViewById(R.id.fruit_image);</span><br><span class="line">        TextView fruitname = (TextView)view.findViewById(R.id.fruit_name);</span><br><span class="line">        fruitImage.setImageResource(fruit.getImageId());</span><br><span class="line">        fruitname.setText(fruit.getName());</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>MainActivity.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Fruit&gt; fruitlist = <span class="keyword">new</span> ArrayList&lt;Fruit&gt;();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        initFruits();   <span class="comment">//初始化水果数据</span></span><br><span class="line">        FruitAdapter adapter = <span class="keyword">new</span> FruitAdapter(MainActivity.<span class="keyword">this</span>, R.layout.fruit_item, fruitlist);</span><br><span class="line">        ListView listView = (ListView)findViewById(R.id.list_view);</span><br><span class="line">        listView.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initFruits</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Fruit apple = <span class="keyword">new</span> Fruit(<span class="string">"Apple"</span>, R.drawable.apple_pic);</span><br><span class="line">        fruitlist.add(apple);</span><br><span class="line">        Fruit banana = <span class="keyword">new</span> Fruit(<span class="string">"Banana"</span>, R.drawable.banana_pic);</span><br><span class="line">        fruitlist.add(banana);</span><br><span class="line">        Fruit cherry = <span class="keyword">new</span> Fruit(<span class="string">"Cherry"</span>, R.drawable.cherry_pic);</span><br><span class="line">        fruitlist.add(cherry);</span><br><span class="line">        Fruit grape = <span class="keyword">new</span> Fruit(<span class="string">"Grape"</span>, R.drawable.grape_pic);</span><br><span class="line">        fruitlist.add(grape);</span><br><span class="line">        Fruit mango = <span class="keyword">new</span> Fruit(<span class="string">"Mango"</span>, R.drawable.mango_pic);</span><br><span class="line">        fruitlist.add(mango);</span><br><span class="line">        Fruit pear = <span class="keyword">new</span> Fruit(<span class="string">"Pear"</span>, R.drawable.pear_pic);</span><br><span class="line">        fruitlist.add(pear);</span><br><span class="line">        Fruit pineapple = <span class="keyword">new</span> Fruit(<span class="string">"Pineapple"</span>, R.drawable.pineapple_pic);</span><br><span class="line">        fruitlist.add(pineapple);</span><br><span class="line">        Fruit strawberry = <span class="keyword">new</span> Fruit(<span class="string">"Strawberry"</span>, R.drawable.strawberry_pic);</span><br><span class="line">        fruitlist.add(apple);</span><br><span class="line">        Fruit watermelon = <span class="keyword">new</span> Fruit(<span class="string">"Watermelon"</span>, R.drawable.watermelon_pic);</span><br><span class="line">        fruitlist.add(watermelon);</span><br><span class="line">        Fruit orange = <span class="keyword">new</span> Fruit(<span class="string">"Orange"</span>, R.drawable.orange_pic);</span><br><span class="line">        fruitlist.add(orange);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我今天好饿啊！先回去吃东西了！</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今天是9月5号</title>
      <link href="/2016/09/05/%E4%BB%8A%E5%A4%A9%E6%98%AF9%E6%9C%885%E5%8F%B7/"/>
      <url>/2016/09/05/%E4%BB%8A%E5%A4%A9%E6%98%AF9%E6%9C%885%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<font size="22">开学了！</font><p>和媳妇去吃了小吊梨汤，嗯那个虾不错，那个啥糕也不错！</p><p>and我就想问什么情况。我的Java标签页竟然变成了404！<br>找到问题了，因为一开始打错，建了两个标签  一个Java，一个java，后来改的时候把java删了，想统一Java，但是上传到github不管怎么弄，github上的这个文件夹都是java，不得已只能先改成java啦。我觉得这是个bug。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（4）——界面</title>
      <link href="/2016/09/04/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%884%EF%BC%89%E2%80%94%E2%80%94%E7%95%8C%E9%9D%A2/"/>
      <url>/2016/09/04/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%884%EF%BC%89%E2%80%94%E2%80%94%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<ul><li>DroidDraw 是一种可视化的界面编辑工具，允许使用拖拽控件的方式来编写布局。<a id="more"></a><h2 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h2></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/text_view"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">"This is a TextView"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>这些控件的属性的值都很好记，就是字面意思。</li></ul><p>TextView中文字默认左上角对齐，可修改。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">android:gravity=&quot;center&quot;</span><br><span class="line">android:textSize=&quot;24sp&quot;</span><br><span class="line">android:textColor=&quot;#0800B0&quot;</span><br></pre></td></tr></table></figure></p><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><p>好玩<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"><span class="comment">//    Double num = 0.0;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        Button button_first = (Button)findViewById(R.id.button_first);</span><br><span class="line">        button_first.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Double num = Math.random()*<span class="number">1000</span>;</span><br><span class="line">                TextView tv = (TextView)findViewById(R.id.text_view);</span><br><span class="line">                tv.setText(Double.toString(num));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h2><p>真好玩<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Button button_second = (Button)findViewById(R.id.button_second);</span><br><span class="line">button_second.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">TextView tv2 = (TextView)findViewById(R.id.text_view_second);</span><br><span class="line">EditText et = (EditText)findViewById(R.id.edit_text);</span><br><span class="line">tv2.setText(et.getText());</span><br><span class="line">Toast.makeText(MainActivity.<span class="keyword">this</span>, et.getText().toString(), Toast.LENGTH_SHORT).show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><font color="red">问题遗留：</font>当我第一次只写了一个EditText时，我在上面打字，调出了键盘，怎么也消不掉，但是却只能输入英文字母（下面也有红线）。之后加了别的代码这个问题就没了，但是也是只能输入英文字母。还有EditText下面的红线什么情况。</p><h2 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h2><p>加载图片<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:id</span>=<span class="string">"@+id/image_view"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h2><ul><li>控件属性android:visibility ，他的值有三种：</li></ul><ol><li>visible 默认值。  </li><li>invisible 表示控件不可见，但是它仍然占据着原来的位置和大小，可以理解成控件变成透明状态了。</li><li>gone 飞了。</li></ol><ul><li>还可以使用setVisible()方法进行设置，是不是很熟悉！</li></ul><p>这里出现了问题<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Button button_bar = (Button)findViewById(R.id.button_bar);</span><br><span class="line">button_bar.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line"><span class="comment">//        ProgressBar progressBar = (ProgressBar)findViewById(R.id.button_bar);</span></span><br><span class="line">ProgressBar progressBar = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">int</span> progress = progressBar.getProgress();</span><br><span class="line">progress += <span class="number">10</span>;</span><br><span class="line">progressBar.setProgress(progress);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><font color="red">问题遗留：</font>按书上的写法应该没有ProgressBar progressBar = null;这句话，但是没有的话程序就会报错。而加上这句话之后，点击按钮程序就会会崩溃。<br>解决方法：</p><h2 id="AlertDialog-–-“你确定吗”对话框"><a href="#AlertDialog-–-“你确定吗”对话框" class="headerlink" title="AlertDialog – “你确定吗”对话框"></a>AlertDialog – “你确定吗”对话框</h2><ul><li>AlertDialog可以在当前的界面弹出一个对话框，这个对话框是置顶于所有界面元素之上的，能够屏蔽掉其他控件的交互能力，因此一般 AlertDialog都是用于提示一些非常重要的内容或者警告信息。比如为了防止用户误删重要内容，在删除前弹出一个确认对话框。</li><li>PS：某些公司经常在你装完一个软件之后，弹出一个没卵用的对话框，然后默认勾选一些扯淡的软件，如果你没注意。。。</li></ul><p>下面是我写的手机爆炸代码！<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Button button_alert = (Button)findViewById(R.id.button_alert);</span><br><span class="line">button_alert.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">AlertDialog.Builder dialog = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dialog.setTitle(<span class="string">"你确定吗？"</span>);</span><br><span class="line">dialog.setMessage(<span class="string">"你这么做将会导致手机爆炸！请慎重！"</span>);</span><br><span class="line">dialog.setCancelable(<span class="keyword">false</span>);</span><br><span class="line">dialog.setPositiveButton(<span class="string">"OK!"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"手机已爆炸！"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">dialog.setNegativeButton(<span class="string">"Cancel"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">dialog.show();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><ul><li>setCancelable()中传入了false，表示AlertDialog是不能通过Back键取消掉的。</li><li>后面的ProgessDialog同理，但是ProgressDialog没有设置取消和确定等交互按钮的方法。这就要求我们一定要在代码中做好控制，当数据加载完成后必须要调用ProgressDialog的dismiss()方法来关闭对话框，否则ProgressDialog将会一直存在，那就悲剧了。当然，可以修改值为true允许用户通过back键返回。还有一个比较笨的方法是重写Back键。</li></ul><h2 id="ProgressDialog"><a href="#ProgressDialog" class="headerlink" title="ProgressDialog"></a>ProgressDialog</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Button button_progress = (Button)findViewById(R.id.button_progress);</span><br><span class="line">button_progress.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">ProgressDialog dialog = <span class="keyword">new</span> ProgressDialog(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">dialog.setTitle(<span class="string">"正在计算中"</span>);</span><br><span class="line">dialog.setMessage(<span class="string">"请稍后……"</span>);</span><br><span class="line">dialog.setCancelable(<span class="keyword">true</span>);</span><br><span class="line">dialog.show();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        dialog.dismiss();</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><font color="red">问题遗留：</font>这里我想写一个wait(),发现是有wait()方法的，但是运行却会导致程序崩溃。（已经加了异常处理。）</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 问题遗留 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（3）</title>
      <link href="/2016/09/04/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%883%EF%BC%89/"/>
      <url>/2016/09/04/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%883%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Activity的启动模式"><a href="#Activity的启动模式" class="headerlink" title="Activity的启动模式"></a>Activity的启动模式</h2><blockquote><ul><li>standard 系统默认的启动模式。</li><li>singleTop 栈顶（返回栈）如果是当前活动，就不再创建，不是则创建新的活动。</li><li>singleTask 创建活动之前检查返回栈，如果活动已存在，则将该活动之上的活动全部出栈，并重新启动该活动。</li><li>singleInstance <a id="more"></a><img src="http://ocpbpzco9.bkt.clouddn.com/singleInstance.png" alt="singleInstance"></li></ul></blockquote><center>singleInstance示意图</center><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>咳咳，java基础不牢了，看到了不熟悉的用法，虽然猜出来了，但还是个漏洞，补上补上。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* for (循环变量类型 循环变量名称 : 要被遍历的对象)</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">for</span> (Activity activity : activities) &#123;</span><br><span class="line"><span class="keyword">if</span> (!activity.isFinishing()) &#123;</span><br><span class="line">activity.finish();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>练习了各种启动活动与销毁活动，活动中来回切换与数据传递。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（2）——Activity的生命周期</title>
      <link href="/2016/09/03/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%882%EF%BC%89%E2%80%94%E2%80%94Activity%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/2016/09/03/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%882%EF%BC%89%E2%80%94%E2%80%94Activity%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="返回栈"><a href="#返回栈" class="headerlink" title="返回栈"></a>返回栈</h2><p><img src="http://ocpbpzco9.bkt.clouddn.com/%E8%BF%94%E5%9B%9E%E6%A0%88.jpg" alt="返回栈"><br><a id="more"></a></p><h2 id="Activity的状态"><a href="#Activity的状态" class="headerlink" title="Activity的状态"></a>Activity的状态</h2><ol><li>运行状态</li><li>暂停状态</li><li>停止状态</li><li>销毁状态</li></ol><h2 id="Activity的生存期"><a href="#Activity的生存期" class="headerlink" title="Activity的生存期"></a>Activity的生存期</h2><p>Activity类中定义了7个回调方法</p><ul><li>onCreate() </li><li>onStart()</li><li>onResume()</li><li>onPause()</li><li>onStop()</li><li>onDestroy()</li><li>onRestart()</li></ul><p>三种生存期</p><ul><li>完整生存期onCreate() 和 onDestroy() 之间</li><li>可见生存期onStart() 和 onStop() 之间</li><li>前台生存期onResume() 和 onPause() 之间</li></ul><p><img src="http://ocpbpzco9.bkt.clouddn.com/activity_lifecycle.jpg" alt="生存期"></p><p>突然发现原来的requestWindowFeature(Window.FEATURE_NO_TITLE);不管用了，标题来依然有，原来是继承了AppCompatActivity的缘故。<br>解决方法是换成getSupportActionBar().hide();或者将主题改成AppCompat的子类主题。</p><p>又出现问题了，点击StartNormalButton一切正常。点击StartDialogButton缺100％程序崩溃。删除android:theme=”@android:style/Theme.Dialog”之后，一切正常，可见问题应该在这里，那么问题来了，这个Demo是要测试不遮挡窗口时候的生命周期啊！我觉得可能还是AppCompat的问题，换个他的试试。<br>解决方法：将android:theme=”@android:style/Theme.Dialog”中的@android:style/Theme.Dialog换成@style/Theme.AppCompat.Dialog即可。</p><h2 id="Activity被回收了怎么办！"><a href="#Activity被回收了怎么办！" class="headerlink" title="Activity被回收了怎么办！"></a>Activity被回收了怎么办！</h2><ul><li>onSaveInstanceState()回调方法，在活动被回收之前调用，我们可以重写它来保存数据。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.duguletian.activitylifecycletest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.Window;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"MainActivity"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        Log.d(TAG, <span class="string">"onCreate"</span>);</span><br><span class="line">        getSupportActionBar().hide();</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(savedInstanceState != <span class="keyword">null</span>)&#123;     <span class="comment">//有数据就读取</span></span><br><span class="line">            String tempData = savedInstanceState.getString(<span class="string">"data_key"</span>);</span><br><span class="line">            Log.d(TAG, tempData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Button startNormalActivity = (Button)findViewById(R.id.start_normal_activity);</span><br><span class="line">        Button startDialogActivity = (Button)findViewById(R.id.start_dialog_activity);</span><br><span class="line"></span><br><span class="line">        startNormalActivity.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, NormalActivity.class);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        startDialogActivity.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, DialogActivity.class);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        Log.d(TAG, <span class="string">"onStart"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        Log.d(TAG, <span class="string">"onResume"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        Log.d(TAG, <span class="string">"onPause"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        Log.d(TAG, <span class="string">"onStop"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        Log.d(TAG, <span class="string">"onDestroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestart</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRestart();</span><br><span class="line">        Log.d(TAG, <span class="string">"onRestart"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSaveInstanceState</span><span class="params">(Bundle outState)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSaveInstanceState(outState);</span><br><span class="line">        String tempData = <span class="string">"Something you just typed."</span>;</span><br><span class="line">        outState.putString(<span class="string">"data_key"</span>, tempData);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路（1）——Intent</title>
      <link href="/2016/09/03/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%881%EF%BC%89%E2%80%94%E2%80%94Intent/"/>
      <url>/2016/09/03/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF%EF%BC%881%EF%BC%89%E2%80%94%E2%80%94Intent/</url>
      
        <content type="html"><![CDATA[<h2 id="Intent"><a href="#Intent" class="headerlink" title="Intent"></a>Intent</h2><h3 id="显式Intent"><a href="#显式Intent" class="headerlink" title="显式Intent"></a>显式Intent</h3><p>“意图”非常明显的Intent称为显式Intent。<br>Intent中有一个构造函数Intent(Context packageContext, Class&lt;?&gt;cls)，这个构造函数接收两个参数，第一个参数Context要求提供一个启动活动的上下文，第二个参数Class则是指定想要启动的目标活动，通过这个构造函数就可以构建出 Intent的“意图”。<br><a id="more"></a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(FirstActivity.<span class="keyword">this</span>, SecondActivity.class); </span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure></p><h3 id="隐式Intent"><a href="#隐式Intent" class="headerlink" title="隐式Intent"></a>隐式Intent</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.liutianhong.activitytest.ACTION_START"</span>);</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure><p>使用隐式Intent，我们不仅可以启动自己程序内的活动，还可以启动其他程序的活动。</p><ul><li>putExtra()方法，将数据暂时储存在intent中。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intent.putExtra(&quot;extra_data&quot;, data);</span><br></pre></td></tr></table></figure></li></ul><p>第一个参数是键值，用于后面从intent中取值，第二个参数是真正要传递的数据。</p><ul><li>startActivityForResult()方法可以在活动销毁时返回一个结果给上一个活动。</li><li>setResult()方法，专门用于向上一活动返回数据。</li><li>onBackPressed()方法，按下后退键执行，我们可以重写它。</li></ul><p>FirstActivity<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Button button_toast = (Button)findViewById(R.id.button);</span><br><span class="line">button_toast.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent(FirstActivity.<span class="keyword">this</span>, SecondActivity.class);</span><br><span class="line">startActivityForResult(intent, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span></span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(requestCode)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span>(resultCode == RESULT_OK)&#123;</span><br><span class="line">String returnedData = data.getStringExtra(<span class="string">"data_return"</span>);</span><br><span class="line">Log.d(<span class="string">"FirstActivity"</span>, returnedData);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>SecondActivity<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.putExtra(<span class="string">"data_return"</span>, <span class="string">"Hello FirstActivity!"</span>);</span><br><span class="line">setResult(RESULT_OK, intent);</span><br><span class="line">finish();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span></span>&#123;</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.putExtra(<span class="string">"data_return"</span>, <span class="string">"Hello FirstActivity!"</span>);</span><br><span class="line">setResult(RESULT_OK, intent);</span><br><span class="line">finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>由于太丢脸，我决定删除找茬小游戏，但是我必须承认，这个错误是由于我犯了三个低级错误导致的！是三个！在这么小一段里。<br>PS我们常犯的错误，通常都会是这种错误，编译器只会告诉你错了，但编译器还不够智能不能告诉你正确的原因。这就需要我们自己多加练习，在写代码的时候仔细再仔细。像我上午梦游状态写出那种代码，如果在工作中会浪费很多时间，代价只能自己承担。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown使用笔记</title>
      <link href="/2016/09/02/Markdown%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2016/09/02/Markdown%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="随时更新"><a href="#随时更新" class="headerlink" title="随时更新"></a>随时更新</h2><table><td bgcolor="DeepSkyBlue"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font color=#0099ff size=7 face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=&quot;黑体&quot;&lt;/font&gt;</span><br><span class="line">&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;</span><br><span class="line">&lt;font color=gray size=72&gt;color=gray&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;背景色是：orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><br><br></td></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android成长之路</title>
      <link href="/2016/09/02/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/"/>
      <url>/2016/09/02/Android%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>我的Java成长之路还没开始就要暂时告一段落了。哈哈。本来想两个一起学，但是由于要应聘安卓工程师，于是只能先把时间花在安卓的学习上了。毕竟Java的基础知识掌握的挺好的了，现在主要任务是补一补安卓。and今天考完试了。</p><p>啦啦啦。<br><a id="more"></a></p><h3 id="Android四大大组件"><a href="#Android四大大组件" class="headerlink" title="Android四大大组件"></a>Android四大大组件</h3><p>活动（Activity）、服务（Service）、广播接收器（Broadcast Receiver）、内容提供器（Content Provider）。</p><h3 id="Android生命周期（Activity-Lifecycle）"><a href="#Android生命周期（Activity-Lifecycle）" class="headerlink" title="Android生命周期（Activity Lifecycle）"></a>Android生命周期（Activity Lifecycle）</h3><p><img src="http://ocpbpzco9.bkt.clouddn.com/activity_lifecycle.jpg" alt="Android生命周期"></p><h3 id="Android日志工具（LogCat）"><a href="#Android日志工具（LogCat）" class="headerlink" title="Android日志工具（LogCat）"></a>Android日志工具（LogCat）</h3><p>Android中有一个日志工具类android.util.Log有如下方法：</p><ol><li>Log.v()    这个方法用于打印那些最为琐碎的，意义最小的日志信息。对应级别verbose，是 Android日志里面级别最低的一种。</li><li>Log.d() 这个方法用于打印一些调试信息，这些信息对你调试程序和分析问题应该是有帮助的。对应级别debug，比 verbose高一级。 </li><li>Log.i()    这个方法用于打印一些比较重要的数据，这些数据应该是你非常想看到的，可以帮你分析用户行为的那种。对应级别info，比debug高一级。 </li><li>Log.w() 这个方法用于打印一些警告信息，提示程序在这个地方可能会有潜在的风险，最好去修复一下这些出现警告的地方。对应级别warn，比info高一级。<br><font color="red" size="22">5. Log.e()</font> 这个方法用于打印程序中的错误信息，比如程序进入到了catch语句当中。当有错误信息打印出来的时候，一般都代表你的程序出现严重问题了，必须尽快修复。对应级别 error，比 warn高一级。 </li></ol><h2 id="手动创建Activity"><a href="#手动创建Activity" class="headerlink" title="手动创建Activity"></a>手动创建Activity</h2><p>不得不说，AndroidStudio真是智能。如果你和我一样使用的是AndroidStudio那么你可以跳过1直接看2。<br>在src/main/java/com.xxxxxx.activitytest目录上右键new一个Activity，如下图你有两种选择：<br><img src="http://ocpbpzco9.bkt.clouddn.com/ActivityTest.jpg" alt="ActivityTest"><br>1.选择Java Class新建一个FirstActivity类，继承Activity父类，重写onCreate()方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>之后要在AndroidManifest.xml文件中注册后才能使用，代码如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"com.liutianhong.activitytest"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".SecondActivity"</span>&gt;</span><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">".FirstActivity"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:label</span>=<span class="string">"This is FirstActivity"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>2.选择Activity，输入名称后系统会自动生成一个Activity,并且自动帮你重写onCreate()方法，并且在src/main/res/layout目录下自动新建一个xml，如下图：<br><img src="http://ocpbpzco9.bkt.clouddn.com/SecondActivity.jpg" alt="SecondActivity"><br><img src="http://ocpbpzco9.bkt.clouddn.com/activity_secondxml.jpg" alt="activity_second.xml"></p><p>还会在AndroidManifest.xml中自动注册。<br><img src="http://ocpbpzco9.bkt.clouddn.com/androidmanifestxml.jpg" alt></p><font size="22" color="red">真是智能！</font><ul><li>@+id/id_name 和 @id/id_name 区别<br>@+id/id_name是定义一个新id<br>@id/id_name是引用一个已有id</li><li>关于标题栏<br>Eclipse中，要隐藏需要在onCreate()中加上requestWindowFeature(Window.FEATURE_NO_TITLE);<br>注意要加在setContentView之前，否则会报错。<br>而在AndroidStudio中默认就没有标题栏，我猜是谷歌意识到了标题栏没用就给去了，瞎猜的我觉得很不靠谱，哈哈哈。<br>这个问题暂时没解决。</li></ul><h2 id="Toast"><a href="#Toast" class="headerlink" title="Toast"></a>Toast</h2><p>Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息通知给用户，这些信息会在一段时间后自动消失，并且不会占用任何屏幕空间。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Button button_toast = (Button)findViewById(R.id.button);</span><br><span class="line">        button_toast.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(FirstActivity.<span class="keyword">this</span>, <span class="string">"You Clicked the Button"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure></p><h2 id="Menu"><a href="#Menu" class="headerlink" title="Menu"></a>Menu</h2><p>靠，由于Nexus没有菜单键，所以我必须把标题栏调出来了，该解决的问题还是要解决的。<br>哈哈哈！问题解决了。是主题的问题。我的Activity继承的是Activity类，而从android:theme=”@style/AppTheme进入AppTheme之后发现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;style name=&quot;AppTheme&quot; parent=&quot;Theme.AppCompat.Light.DarkActionBar&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>是AppCompat主题，所以解决方法就是把Activity改成AppCompatActivity。之后标题栏就显示出来了，果然Menu是在右上角。<br><img src="http://ocpbpzco9.bkt.clouddn.com/Menu_Demo.jpg" alt="Menu_Demo"></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css优先级</title>
      <link href="/2016/09/01/css%E4%BC%98%E5%85%88%E7%BA%A7/"/>
      <url>/2016/09/01/css%E4%BC%98%E5%85%88%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo-next博客私人订制---背景图片</title>
      <link href="/2016/09/01/hexo-next%E5%8D%9A%E5%AE%A2%E7%A7%81%E4%BA%BA%E5%AE%9A%E5%88%B6-%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/"/>
      <url>/2016/09/01/hexo-next%E5%8D%9A%E5%AE%A2%E7%A7%81%E4%BA%BA%E5%AE%9A%E5%88%B6-%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>关于背景图片，我先起个头，考完试要抽出时间具体写一下更多的关于背景图片的定制。<br><a id="more"></a><br>首先要说的是一个又简单又重要的问题，在网上找了半天也没找到，就是背景图片的加载问题。<br>将背景图片放到next/source/images路径下，注意必须使用英文，必须使用英文，必须使用英文！也就是咱们常说的路径中不能出现中文。其实我建议以后所有路径和名字都用英文保存，包括我自己也要慢慢改，有些习惯还没完全改过来，包括有时候还是用百度。哈哈哈。<br>现在背景图片已经有了，下一步就是在next/source/css/_custom文件夹下，打开唯一的一个custom.styl文件。然后将如下内容写上：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>:<span class="built_in">url</span>(/images/bg_img.jpg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>bg_img.jpg是你的背景图片</p><p>好了重点来了，如果你本地运行发现，啊图片显示出来了，那么就没有问题了。我比较悲剧，试了很久还出不来，后来用了IE才加载出来，我找了找茬，发现IE前面是http://，而chrome前面没东西，于是我在chrome前面加上http://,然后，然后图片就加载出来了。<br>所以你的背景图片要是加载不出来，可以试一下这个<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java成长之路</title>
      <link href="/2016/08/30/Java%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/"/>
      <url>/2016/08/30/Java%E6%88%90%E9%95%BF%E4%B9%8B%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<p>一直想把自己每天学习的东西记录下来，这样也有动力，终于在这里我找到了这么个地方，以后打算把每天学到的写在这里，并且把一些总结也写在这里。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim的使用</title>
      <link href="/2016/08/30/Vim%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2016/08/30/Vim%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>vim是一款linux下的文本编辑工具，和windows不一样，它有三种模式，命令模式  插入模式 和编辑模式<br><img src="http://ocpbpzco9.bkt.clouddn.com/Vim%E7%9A%84%E4%BD%BF%E7%94%A8.png" alt="Vim状态转换图"><br>还是图片比较清楚好理解。<br><a id="more"></a></p><h2 id="编辑模式下"><a href="#编辑模式下" class="headerlink" title="编辑模式下"></a>编辑模式下</h2><pre><code>:set number / set nu            显示行数:set nonu                       隐藏行数:n                              定位到第n行</code></pre><h2 id="命令模式下"><a href="#命令模式下" class="headerlink" title="命令模式下"></a>命令模式下</h2><pre><code>x    删除当前光标所在字符nx   删除光标所在处向后n个字符dd   删除一行ndd  删除n行yy和p  复制dd和p  剪切  p大小写，光标上下r/R   替换u    恢复搜索关键字    /关键字   按n查找下一个保存和退出保存退出：wq ZZ不保存退出：q!保存：w强制保存：wq!</code></pre><p>发现一个问题，不会缩进！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>化妆品品牌</title>
      <link href="/2016/08/29/%E5%8C%96%E5%A6%86%E5%93%81%E5%93%81%E7%89%8C/"/>
      <url>/2016/08/29/%E5%8C%96%E5%A6%86%E5%93%81%E5%93%81%E7%89%8C/</url>
      
        <content type="html"><![CDATA[<p>迪奥（dior）、香奈儿（chanel）、圣罗兰（YSL）、萝卜丁（CL）、（tomford）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客搭建总结</title>
      <link href="/2016/08/29/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/"/>
      <url>/2016/08/29/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>修改于8.29晚</p><p>算是折腾了一天吧，属于自己的博客终于搭建好了。哦对了，由于我的记性不好，我必须先把遗留的问题列出！</p><p>1.站内搜索暂时还用不了，具体表现为 搜索不到任何结果。<br>插图已解决2.全站最下方想弄一个流量统计 （多少人访问过与总访问量）–插图还没搞<br>8.30已解决<em>3.插入图片与视频—不算问题吧，方法已经回了，还没来得及亲自试验。<br>8.30已解决</em>4.标签与分类还没有完全做好，左边导航栏已经做好，但是想让每篇文章也能显示自己的标签与分类。还不会。<br><em>标签还不会显示，但是暂时不想显示。<br>9.1已解决</em>5.主页不想把博文直接显示出来，想弄个摘要，然后弄个阅读全文按钮，链接进去。<br>*摘要还不会弄，是文章的前面任意一段。<br>背景图片已解决6.左边导航栏想更加完善与漂亮，功能更加丰富，还有背景图片也不会加。<br>7.我觉得5应该是用到wen前端的知识的，但是还需要与hexo和next主题结合起来。hexo和next的文件结构还没有仔细学习，知识粗略的看了一遍。<br>8.好像可以怎么设置一下，不自动用https访问网站，还不会。</p><ul><li>3打算明天弄一下，毕竟比较简单。关于图床云存储和本地存储也想简单了解一下。</li></ul><p>大概能想到的暂时就这么多了。博客搭建就暂时告一段落了，毕竟功能上已经可以用了。还有更重要的事要先去做。</p><p>好了我滚去编程了。</p><p>补充，刚说不熟悉文件结构，稍微看了看，发现网站文件夹在public里，进去瞬间找到了熟悉的感觉。</p><p>修改于9月1日</p><p>重新总结一下（包括新问题）<br>1.站内搜索暂时还用不了，具体表现为 搜索不到任何结果。<br>2.全站最下方想弄一个流量统计 （多少人访问过与总访问量）。（已解决）<br>3.标签还不会显示，但是暂时不想显示。<br>4.是否有摘要功能？<br>5.左边导航栏better(包括文章目录与站点概览)。<br>*6.默认访问方式，浏览器。<br>7.css配置，优先级默认低于原始配置而不显示。<br>8.博客分页设置不管用。 已解决。 mdzz 上传就管用了？</p><p>修改于9月2日</p><p>※1.站内搜索暂时还用不了，具体表现为 搜索不到任何结果。<br>2.百度谷歌统计还没有试，不过流量统计已做好。<br>3.文章目录和站点概览还没有试。<br>4.标签还不会显示，但是暂时不想显示。<br>5.是否有摘要功能？<br>*6.默认访问方式，浏览器。<br>7.css配置，优先级默认低于原始配置而不显示。</p><p>博客暂时先弄到这里，整体改观需要前端知识。抽空自学。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2016.8.29  全新的开始</title>
      <link href="/2016/08/29/2016-8-29-%E5%85%A8%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
      <url>/2016/08/29/2016-8-29-%E5%85%A8%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/</url>
      
        <content type="html"><![CDATA[<p>昨天把博客搭建好，今天又莫名其妙的注册了一堆软件，也不知道有用没用。 </p><p>先在这里试试，放一首媳妇喜欢的歌。<br>这里是网易云音乐外链，不显示不播放</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=35470197&auto=0&height=32"></iframe><br>这里是虾米音乐外链<br><br>2021年4月13日<br><br>哎 虾米已经GG<br><br>网易云新的外链测试<br><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=5001771&auto=1&height=66"></iframe>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客，文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B~</title>
      <link href="/2016/08/29/B/"/>
      <url>/2016/08/29/B/</url>
      
        <content type="html"><![CDATA[<p>8.29<br>试试这个是不是乱码</p><p>OK这个不是乱码，那就奇怪了 第一篇不管怎么修改都是乱码的文章是怎么个意思？！</p><p>就在楼下，有空继续研究。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>标题吗</title>
      <link href="/2016/08/29/heiheihei/"/>
      <url>/2016/08/29/heiheihei/</url>
      
        <content type="html"><![CDATA[<p>啊？<br>abc<br>123<br>！！！<br>你好你好。</p><p>8.29修改<br>试试</p><p>9.4日修改，将因为弄歌词，发现乱码格式和这个很像，是菱形+问号，于是在这里先改了改，将编码格式换位utf-8,就不是乱码了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 杂 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
